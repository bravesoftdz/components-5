{\rtf1\ansi\ansicpg1251\deff0\deflang1049\deflangfe1049{\fonttbl{\f0\fswiss\fprq2\fcharset204{\*\fname Arial;}Arial CYR;}{\f1\froman\fprq2\fcharset204{\*\fname Times New Roman;}Times New Roman CYR;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\froman\fprq2\fcharset0 Times New Roman;}{\f4\fmodern\fprq1\fcharset204{\*\fname Courier New;}Courier New CYR;}{\f5\fmodern\fprq1\fcharset0 Courier New;}{\f6\froman\fcharset0 Times New Roman;}{\f7\fswiss\fcharset204{\*\fname Arial;}Arial CYR;}}
{\colortbl ;\red255\green0\blue0;}
{\stylesheet{ Normal;}{\s1 heading 1;}{\s2 heading 2;}{\s3 heading 3;}}
\viewkind4\uc1\pard\keepn\nowidctlpar\s1\sb240\sa60\qr\lang1033\kerning32\b\f0\fs72\par
\pard\keepn\nowidctlpar\s1\sb240\sa60\qc\par
\pard\nowidctlpar\lang1049\kerning0\b0\f1\fs24\par
\par
\pard\nowidctlpar\qc\lang1033\b\f0\fs72 FastScript 1.\f2 9\f0\par
Scripting library \par
\par
\par
\fs52 Developer's manual\par
\pard\nowidctlpar\b0\f1\fs28\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
Copyright (c) 1998-200\f3 5\f1  by Fast Reports Inc.\par
\par
Author:    Alexander Tzyganenko\par
e-mail:    tz@fast-report.com\par
home page: \tab http://www.fastreport.ru  \par
           \tab http://www.fast-report.com\par
\page\par
\pard\keepn\nowidctlpar\s1\sb240\sa60\kerning32\b\f0\fs72 Introduction\par
\pard\nowidctlpar\kerning0\b0\f1\fs28\par
\par
\par
\pard\nowidctlpar\sl480\slmult1\f0\fs40 What is FastScript\par
Quick start\par
Features and missing features\par
Language reference\par
Script structure\par
Data types\par
Classes\par
Functions\par
Events\par
Enumerations and \f2 sets\par
Arrays\f0\par
\pard\nowidctlpar\f1\fs28\par
\page\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f0 What is FastScript\par
\pard\nowidctlpar\b0\i0\f1\fs24\par
   FastScript is a scripting library. It is useful for the programmers who want to add scripting ability to their projects. FastScript is written on 100% Object Pascal and can be installed in Borland Delphi 4-7, C++Builder 4-6 and Kylix 1-3.\par
\lang1049 Unique feature of FastScript is ability to use several languages (PascalScript\lang1033\f2 ,\lang1049\f1  C++Script\lang1033\f2 ,\f3  JScript and BasicScript\lang1049\f1 ), so you can write scripts using your favourite language.\lang1033\f3  \lang1049\f1 FastScript doesn't use Microsoft Scripting Host, so it can be used in Windows and Linux environment\lang1033 .\par
   FastScript combines cross-platform scripting, fast code execution, small footprint, rich set of features and  a splendid scalability. Make your applications the most flexible and powerful ones with FastScript!\par
\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f0\fs28\page Quick start\par
\pard\nowidctlpar\b0\i0\f1\fs24\par
   Here is a sample code which demonstrates the easiest way of using FastScript\f3 .\f1  For the correct work of the example put the components fsScript1\f3 : TfsScript\f1  and \f3 fsPascal1: TfsPascal \f1 on the form .\par
\par
\f4\fs20 uses FS_iInterpreter;\par
\par
procedure TForm1.Button1Click(Sender: TObject);\par
begin\par
  fsScript1.Clear; // do this if you running many scripts from one component\par
  fsScript1.Lines.Text := 'begin ShowMessage(''Hello!'') end.';\par
  fsScript1.Parent := fsGlobalUnit; // use standard classes and methods\par
\f5   fsScript1.SyntaxType := 'PascalScript';\f4\par
  if fsScript1.Compile then\par
    fsScript1.Execute else   \par
    ShowMessage(fsScript1.ErrorMsg); \par
end;\par
\f1\fs24\par
   As you can see, there is nothing difficult here. At first we fill in the fsScript1.Lines property with the script text. For using standard types and functions we set Parent property to the fsGlobalUnit. Then we compile the script using PascalScript language (you can use C++Script\f3 , BasicScript, JScript\f1  as well). If compilation is successful Compile method returns True and we can Execute the script. Otherwise the error message is shown.\par
\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f0\fs28\page Features and missing features\par
\pard\keepn\nowidctlpar\s3\sb240\sa60\i0\fs26 Features\par
\pard\nowidctlpar\b0\f1\fs24\par
- Multi-language architecture allows you to use a number of languages (at present moment  PascalScript\f3 ,\f1  C++Script\f3 , BasicScript, JScript\f1 ). You can add any procedural language (language \f3 grammar\f1  is stored in XML format).\par
- Standard language set: variables, constants, procedures, functions (\f3 nested functions allowed\f1 ) with var/const/default parameters, all the standard operators and \f3 statements\f1  (including case, try/finally/except, with), types (int, float, bool, char, string, multi-dimensional array, enum, variant), classes (with methods, events, properties, indices and default properties).\par
- Types compatibility checking.\par
- Access to any object inside your application. Standard libraries for the access to  the base classes, controls, forms and BD. Easily expandable library architecture.\par
- Small footprint - \f3 9\f1 0-150Kb depending on used modules.\par
\f3 - Can be used in multi-thread environment.\f1\par
\pard\keepn\nowidctlpar\s3\sb240\sa60\b\f0\fs26 Missing features\par
\pard\nowidctlpar\b0\f1\fs24\par
- No type \f3 declarations\f1  (records, classes) in the  script; no records, no pointers, no \f3 sets\f1  (but you can use 'IN' operator - "a in ['a'..'c','d']"), no shortstrings, no GOTO statement.\par
- C++Script: no octal constants; no 'break' in the SWITCH operator (SWITCH works like Pascal CASE); '++' and '--' operators are possible only after the variables, that is '++i' is not allowed; '--', '++' and '=' operators do not return a value, that is 'if(i++)' is not allowed; all the identifiers are case-insensitive; NULL constant is the Pascal Null - use nil instead of NULL.\par
\f2 - \f3 JScript and BasicScript: see syntax diagrams\lang1049\f6 .\f1\par
\lang1033\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f0\fs28\page Language reference\par
\pard\nowidctlpar\b0\i0\f1\fs24\par
\pard\keepn\nowidctlpar\s3\sb240\sa60\b\f2\fs26 PascalScript syntax:\par
\pard\nowidctlpar\lang1049\b0\f1\fs24\par
\f4\fs20 Program -> [PROGRAM Ident ';']\par
           [UsesClause]        \par
           Block '.'           \par
\par
UsesClause -> USES (String/,)... ';' \par
\par
Block -> [DeclSection]...   \par
         CompoundStmt       \par
\par
DeclSection -> ConstSection         \par
            -> VarSection           \par
            -> ProcedureDeclSection \par
\par
ConstSection -> CONST (ConstantDecl)... \par
\par
ConstantDecl -> Ident '=' Expression ';' \par
\par
VarSection -> VAR (VarList ';')...\par
\par
VarList -> Ident/','... ':' TypeIdent [InitValue] \par
\par
TypeIdent -> Ident  \par
          -> Array  \par
\par
Array -> ARRAY '[' ArrayDim/','... ']' OF Ident  \par
\par
ArrayDim -> Expression..Expression  \par
         -> Expression              \par
\par
InitValue -> '=' Expression  \par
\par
Expression -> SimpleExpression [RelOp SimpleExpression]...\par
\par
SimpleExpression -> ['-'] Term [AddOp Term]... \par
\par
Term -> Factor [MulOp Factor]...\par
\par
Factor -> Designator                     \par
       -> UnsignedNumber                 \par
       -> String                         \par
       -> '(' Expression ')'             \par
       -> NOT Factor                     \par
       -> '[' SetConstructor ']'         \par
\par
SetConstructor -> SetNode/','...  \par
\par
SetNode -> Expression ['..' Expression]  \par
\par
RelOp -> '>'   \par
      -> '<'   \par
      -> '<='  \par
      -> '>='  \par
      -> '<>'  \par
      -> '='   \par
      -> IN    \par
      -> IS    \par
\par
AddOp -> '+'  \par
      -> '-'  \par
      -> OR   \par
      -> XOR  \par
\par
MulOp -> '*'\par
      -> '/'    \par
      -> DIV    \par
      -> MOD    \par
      -> AND\par
      -> SHL    \par
      -> SHR    \par
\par
Designator -> ['@'] Ident ['.' Ident | '[' ExprList ']' | '(' ExprList ')']...  \par
\par
ExprList -> Expression/','...  \par
\par
Statement -> [SimpleStatement | StructStmt]  \par
\par
StmtList -> Statement/';'...  \par
\par
SimpleStatement -> Designator                     \par
                -> Designator ':=' Expression     \par
                -> BREAK | CONTINUE | EXIT        \par
\par
StructStmt -> CompoundStmt        \par
           -> ConditionalStmt     \par
           -> LoopStmt            \par
           -> TryStmt             \par
           -> WithStmt            \par
\par
CompoundStmt -> BEGIN StmtList END   \par
\par
ConditionalStmt -> IfStmt     \par
                -> CaseStmt   \par
\par
IfStmt -> IF Expression THEN Statement [ELSE Statement]\par
\par
CaseStmt -> CASE Expression OF CaseSelector/';'... [ELSE Statement] [';'] END  \par
\par
CaseSelector -> SetConstructor ':' Statement\par
\par
LoopStmt -> RepeatStmt  \par
         -> WhileStmt   \par
         -> ForStmt     \par
\par
RepeatStmt -> REPEAT StmtList UNTIL Expression  \par
\par
WhileStmt -> WHILE Expression DO Statement  \par
\par
ForStmt -> FOR Ident ':=' Expression ToDownto Expression DO Statement  \par
\par
ToDownto -> (TO | DOWNTO)  \par
\par
TryStmt -> TRY StmtList (FINALLY | EXCEPT) StmtList END  \par
\par
WithStmt -> WITH (Designator/,..) DO Statement  \par
\par
ProcedureDeclSection -> ProcedureDecl  \par
                     -> FunctionDecl   \par
\par
ProcedureDecl -> ProcedureHeading ';'  \par
                 Block ';'             \par
\par
ProcedureHeading -> PROCEDURE Ident [FormalParameters]  \par
\par
FunctionDecl -> FunctionHeading ';'  \par
                Block ';'\par
\par
FunctionHeading -> FUNCTION Ident [FormalParameters] ':' Ident\par
\par
FormalParameters -> '(' FormalParam/';'... ')'\par
\par
FormalParm -> [VAR | CONST] VarList\par
\par
\f1\fs24\par
\pard\keepn\nowidctlpar\s3\sb240\sa60\lang1033\b\f2\fs26 C++Script syntax:\par
\pard\nowidctlpar\lang1049\b0\f1\fs24\par
\f4\fs20 Program -> [UsesClause]\par
           [DeclSection]...\par
           CompoundStmt\par
\par
UsesClause -> '#' INCLUDE (String/,)...\par
\par
DeclSection -> ConstSection\par
            -> ProcedureDeclSection\par
            -> VarS\lang1033\f5 tmt ';'\lang1049\f4\par
\par
ConstSection -> '#' DEFINE ConstantDecl\par
\par
ConstantDecl -> Ident Expression\par
\par
Var\lang1033\f5 Stmt\lang1049\f4  -> Ident Ident [Array] [InitValue] /','...\par
\par
ArrayDef -> '[' ArrayDim/','... ']'\par
\par
ArrayDim -> Expression\par
\par
InitValue -> '=' Expression\par
\par
Expression -> SimpleExpression [RelOp SimpleExpression]...\par
\par
SimpleExpression -> ['-'] Term [AddOp Term]...\par
\par
Term -> Factor [MulOp Factor]...\par
\par
Factor -> Designator\par
       -> UnsignedNumber                 \par
       -> String\par
       -> '(' Expression ')'             \par
       -> '!' Factor\par
       -> '[' SetConstructor ']'         \par
       -> \lang1033\f5 NewOperator\lang1049\f4\par
\par
SetConstructor -> SetNode/','...  \par
\par
SetNode -> Expression ['..' Expression]  \par
\par
\lang1033\f5 NewOperator\lang1049\f4  -> \lang1033\f5 NEW Designator\lang1049\f4\par
\par
RelOp -> '>'   \par
      -> '<'\par
      -> '<='  \par
      -> '>='\par
      -> '!='  \par
      -> '=='\par
      -> IN    \par
      -> IS\par
\par
AddOp -> '+'\par
      -> '-'  \par
      -> '||'\par
      -> '^'\par
\par
MulOp -> '*'    \par
      -> '/'\par
      -> '%'\par
      -> '&&'\par
      -> '<<'   \par
      -> '>>'\par
\par
Designator -> ['&'] Ident ['.' Ident | '[' ExprList ']' | '(' ExprList ')']...\par
\par
ExprList -> Expression/','...\par
\par
Statement -> [SimpleStatement ';' | StructStmt | EmptyStmt]\par
\par
EmptyStmt -> ';'\par
\par
StmtList -> (Statement...)\par
\par
SimpleStatement \lang1033\f5 -> DeleteStmt\lang1049\f4\par
\lang1033\f5                 \lang1049\f4 -> AssignStmt\par
                -> \lang1033\f5 Var\lang1049\f4 Stmt                    \par
                -> CallStmt                    \par
                -> ReturnStmt\par
                -> (BREAK | CONTINUE | EXIT)   \par
\par
\lang1033\f5 DeleteStmt -> DELETE Designator\lang1049\f4\par
\par
AssignStmt -> Designator ['+'|'-'|'*'|'/']'=' Expression  \par
\par
CallStmt -> Designator ['+''+'|'-''-']  \par
\par
ReturnStmt -> RETURN [Expression]  \par
\par
StructStmt -> CompoundStmt        \par
           -> ConditionalStmt\par
           -> LoopStmt            \par
           -> TryStmt\par
\par
CompoundStmt -> '\{' [StmtList] '\}'\par
\par
ConditionalStmt -> IfStmt\par
                -> CaseStmt   \par
\par
IfStmt -> IF '(' Expression ')' Statement [ELSE Statement]  \par
\par
CaseStmt -> SWITCH '(' Expression ')' '\{' (CaseSelector)... [DEFAULT ':' Statement] '\}'  \par
\par
CaseSelector -> CASE SetConstructor ':' Statement \par
\par
LoopStmt -> RepeatStmt  \par
         -> WhileStmt\par
         -> ForStmt     \par
\par
RepeatStmt -> DO Statement [';'] WHILE '(' Expression ')' ';'  \par
\par
WhileStmt -> WHILE '(' Expression ')' Statement  \par
\par
ForStmt -> FOR '(' ForStmtItem ';' Expression ';' ForStmtItem ')' Statement  \par
\par
ForStmtItem -> AssignStmt  \par
            -> \lang1033\f5 Var\lang1049\f4 Stmt\par
            -> CallStmt\par
            -> Empty       \par
\par
TryStmt -> TRY CompoundStmt (FINALLY | EXCEPT) CompoundStmt  \par
\par
FunctionDecl -> FunctionHeading \lang1033\f5 CompoundStmt\lang1049\f4\par
\par
FunctionHeading -> Ident Ident [FormalParameters]\par
\par
FormalParameters -> '(' [FormalParam/';'...] ')'\par
\par
FormalParam -> TypeIdent (['&'] Ident [InitValue]/',')...\par
\par
\f1\fs24\par
\pard\keepn\nowidctlpar\s3\sb240\sa60\lang1033\b\f2\fs26 JScript syntax:\par
\pard\nowidctlpar\lang1049\b0\f1\fs24\par
\f4\fs20 Program -> Statements\par
\par
Statements -> Statement...\par
\par
Block -> '\{' Statements '\}'\par
\par
ImportStmt -> IMPORT (String/,)...\par
\par
VarStmt -> VAR (VarDecl/',')...\par
\par
VarDecl -> Ident [Array] [InitValue]\par
\par
Array -> '[' (ArrayDim/',')... ']'\par
\par
ArrayDim -> Expression\par
\par
InitValue -> '=' Expression\par
\par
Expression -> SimpleExpression [RelOp SimpleExpression]...\par
\par
SimpleExpression -> ['-'] Term [AddOp Term]...\par
\par
Term -> Factor [MulOp Factor]...\par
\par
Factor -> Designator\par
       -> UnsignedNumber\par
       -> String\par
       -> '(' Expression ')'\par
       -> '!' Factor\par
       -> '[' SetConstructor ']'\par
       -> NewOperator\par
       -> '<' FRString '>'\par
\par
SetConstructor -> SetNode/','...\par
\par
SetNode -> Expression ['..' Expression]\par
\par
NewOperator -> NEW Designator\par
\par
RelOp -> '>'\par
      -> '<'\par
      -> '<='\par
      -> '>='\par
      -> '!='\par
      -> '=='\par
      -> IN\par
      -> IS\par
\par
AddOp -> '+'\par
      -> '-'\par
      -> '||'\par
      -> '^'\par
\par
MulOp -> '*'\par
      -> '/'\par
      -> '%'\par
      -> '&&'\par
      -> '<<'\par
      -> '>>'\par
\par
Designator -> ['&'] Ident ['.' Ident | '[' ExprList ']' | '(' [ExprList] ')']...\par
\par
ExprList -> Expression/','...\par
\par
Statement -> (AssignStmt | CallStmt | BreakStmt | ContinueStmt |\par
              DeleteStmt | DoWhileStmt | ForStmt | FunctionStmt |\par
              IfStmt | ImportStmt | ReturnStmt | SwitchStmt |\par
              VarStmt | WhileStmt | WithStmt | Block) [';']\par
\par
BreakStmt -> BREAK\par
\par
ContinueStmt -> CONTINUE\par
\par
DeleteStmt -> DELETE Designator\par
\par
AssignStmt -> Designator ['+'|'-'|'*'|'/']'=' Expression\par
\par
CallStmt -> Designator ['+''+'|'-''-']\par
\par
ReturnStmt -> RETURN [Expression]\par
\par
IfStmt -> IF '(' Expression ')' Statement [ELSE Statement]\par
\par
SwitchStmt -> SWITCH '(' Expression ')' '\{' (CaseSelector)... [DEFAULT ':' Statement] '\}'\par
\par
CaseSelector -> CASE SetConstructor ':' Statement\par
\par
DoWhileStmt -> DO Statement [';'] WHILE '(' Expression ')' ';'\par
\par
WhileStmt -> WHILE '(' Expression ')' Statement\par
\par
ForStmt -> FOR '(' ForStmtItem ';' Expression ';' ForStmtItem ')' Statement\par
\par
ForStmtItem -> AssignStmt\par
            -> CallStmt\par
            -> VarStmt\par
            -> Empty\par
\par
TryStmt -> TRY CompoundStmt (FINALLY | EXCEPT) CompoundStmt\par
\par
FunctionStmt -> FunctionHeading Block\par
\par
FunctionHeading -> FUNCTION Ident FormalParameters\par
\par
FormalParameters -> '(' [FormalParam/','...] ')'\par
\par
FormalParam -> ['&'] Ident\par
\par
WithStmt -> WITH '(' Designator ')' Statement\par
\par
\par
\pard\keepn\nowidctlpar\s3\sb240\sa60\lang1033\b\f2\fs26 BasicScript syntax:\par
\pard\nowidctlpar\lang1049\b0\f1\fs24\par
\f4\fs20 Program -> Statements             \par
\par
Statements -> (EOL | StatementList EOL)...   \par
\par
StatementList -> Statement/':'...   \par
\par
ImportStmt -> IMPORTS (String/,)...  \par
\par
DimStmt -> DIM (VarDecl/',')...  \par
\par
VarDecl -> Ident [Array] [AsClause] [InitValue]   \par
\par
AsClause -> AS Ident   \par
  \par
Array -> '[' ArrayDim/','... ']'   \par
\par
ArrayDim -> Expression   \par
\par
InitValue -> '=' Expression   \par
\par
Expression -> SimpleExpression [RelOp SimpleExpression]...  \par
\par
SimpleExpression -> ['-'] Term [AddOp Term]...  \par
\par
Term -> Factor [MulOp Factor]...  \par
\par
Factor -> Designator                      \par
       -> UnsignedNumber                  \par
       -> String                          \par
       -> '(' Expression ')'              \par
       -> NOT Factor                      \par
       -> NewOperator                     \par
       -> '<' FRString '>'                \par
\par
SetConstructor -> SetNode/','...   \par
\par
SetNode -> Expression ['..' Expression]   \par
\par
NewOperator -> NEW Designator   \par
\par
RelOp -> '>'    \par
      -> '<'    \par
      -> '<='   \par
      -> '>='   \par
      -> '<>'   \par
      -> '='    \par
      -> IN     \par
      -> IS     \par
\par
AddOp -> '+'   \par
      -> '-'   \par
      -> '&'   \par
      -> OR    \par
      -> XOR   \par
\par
MulOp -> '*'     \par
      -> '/'     \par
      -> '\\'     \par
      -> MOD     \par
      -> AND     \par
\par
Designator -> [ADDRESSOF] Ident ['.' Ident | '[' ExprList ']' | '(' [ExprList] ')']...   \par
\par
ExprList -> Expression/','...   \par
\par
Statement -> BreakStmt\par
          -> CaseStmt\par
          -> ContinueStmt\par
          -> DeleteStmt\par
          -> DimStmt \par
          -> DoStmt\par
          -> ExitStmt\par
          -> ForStmt\par
          -> FuncStmt\par
          -> IfStmt\par
          -> ImportStmt \par
          -> ProcStmt\par
          -> ReturnStmt\par
          -> SetStmt\par
          -> TryStmt\par
          -> WhileStmt\par
          -> WithStmt\par
          -> AssignStmt\par
          -> CallStmt   \par
\par
BreakStmt -> BREAK   \par
\par
ContinueStmt -> CONTINUE   \par
  \par
ExitStmt -> EXIT   \par
  \par
DeleteStmt -> DELETE Designator   \par
\par
SetStmt -> SET AssignStmt   \par
\par
AssignStmt -> Designator ['+'|'-'|'*'|'/']'=' Expression   \par
\par
CallStmt -> Designator ['+''+'|'-''-']   \par
\par
ReturnStmt -> RETURN [Expression]   \par
\par
IfStmt -> IF Expression THEN ThenStmt   \par
\par
ThenStmt -> EOL [Statements] [ElseIfStmt | ElseStmt] END IF   \par
         -> StatementList                                     \par
\par
ElseIfStmt -> ELSEIF Expression THEN \par
              (EOL [Statements] [ElseIfStmt | ElseStmt] | Statement)   \par
    \par
ElseStmt -> ELSE (EOL [Statements] | Statement)   \par
    \par
CaseStmt -> SELECT CASE Expression EOL \par
            (CaseSelector...) [CASE ELSE ':' Statements] END SELECT   \par
\par
CaseSelector -> CASE SetConstructor ':' Statements  \par
\par
DoStmt -> DO [Statements] LOOP (UNTIL | WHILE) Expression   \par
\par
WhileStmt -> WHILE Expression [Statements] WEND   \par
\par
ForStmt -> FOR Ident '=' Expression TO Expression [STEP Expression] EOL \par
           [Statements] NEXT   \par
\par
TryStmt -> TRY Statements (FINALLY | CATCH) [Statements] END TRY  \par
\par
WithStmt -> WITH Designator EOL Statements END WITH   \par
\par
ProcStmt -> SUB Ident [FormalParameters] EOL [Statements] END SUB  \par
\par
FuncStmt -> FUNCTION Ident [FormalParameters] [AsClause] EOL \par
            [Statements] END FUNCTION   \par
\par
FormalParameters -> '(' (FormalParam/',')... ')'   \par
\par
FormalParm -> [BYREF | BYVAL] VarList   \par
\par
\lang1033\f1\fs24\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f0\fs28 Script structure\par
\pard\nowidctlpar\b0\i0\f1\fs24\par
   The PascalScript structure is the same as in Object Pascal language:\par
\par
\f5\fs20 #language PascalScript \f4 // this is optional\par
program MyProgram;     // this is optional\par
\par
uses 'unit1.pas', 'unit2.pas';   \par
// uses section - must be before any other sections\par
// v1.2 changes: warning! the included units are not inserted into the main unit text. So it can have\par
// 'program', 'uses' sections and must have the 'main procedure' section.\par
\par
var                    // var section\par
  i, j: Integer;\par
\par
const                  // const section\par
  pi = 3.14159;\par
\par
procedure p1;          // procedures and function\par
var\par
  i: Integer;\par
\par
  procedure p2;        // nested procedure\par
  begin\par
  end;\par
\par
begin\par
end;\par
\par
begin                  // main procedure that will be executed.\par
end.\par
\f1\fs24\par
\par
\lang1049    The C++Script structure is:\par
\par
\lang1033\f5\fs20 #language C++Script \f4 // this is optional\par
\lang1049 #include "unit1.cpp", "unit2.cpp"  \par
// uses section - must be before any other sections\par
\par
int i, j;              // var section\par
\par
#DEFINE pi = 3.14159   // const section\par
\par
void p1()              // procedures and function\par
\{                      // there is no nested procedures in \lang1033\f5 C++\lang1049\f4 Script\par
\}\par
\par
\{                      // main procedure that will be executed.\par
\}\par
\par
\par
\lang1033\f3\fs24   The JScript structure is:\par
\f5\fs20\par
#language JScript \f4 // this is optional\par
\f5 import\lang1049\f4  "unit1.\lang1033\f5 js\lang1049\f4 ", "unit2.\lang1033\f5 js\lang1049\f4 "  \par
// \lang1033\f5 import\lang1049\f4  section - must be before any other sections\par
\par
\lang1033\f5 var\lang1049\f4  i, j\lang1033\f5  = 0\lang1049\f4 ;          // var section\par
\par
\lang1033\f5 function\lang1049\f4  p1()          // procedures and function\par
\{                      // \par
\}\par
\lang1033\f5                        \lang1049\f4 // main procedure that will be executed.\lang1033\f5   \lang1049\f4\par
\lang1033\f5 p1();\par
for (i = 0; i < 10; i++) j++;\lang1049\f4\par
\par
\par
\par
\lang1033\f3\fs24   The BasicScript structure is:\par
\f5\fs20\par
#language BasicScript \f4 // this is optional\par
\f5 imports\lang1049\f4  "unit1.\lang1033\f5 vb\lang1049\f4 ", "unit2.\lang1033\f5 vb\lang1049\f4 "  \par
// \lang1033\f5 imports\lang1049\f4  section - must be before any other sections\par
\par
\lang1033\f5 dim\lang1049\f4  i, j\lang1033\f5  = 0\lang1049\f4   \lang1033\f5  \lang1049\f4         // var section\par
\par
\lang1033\f5 function\lang1049\f4  \lang1033\f5 f\lang1049\f4 1()          // procedures and function\par
\lang1033\f5 end function\lang1049\f4            //\par
\par
\lang1033\f5 sub p1()\par
end sub\par
                       \lang1049\f4 // main procedure that will be executed.\lang1033\f5   \lang1049\f4\par
\lang1033\f5 for i = 0 to 10\lang1049\f4\par
\lang1033\f5   p1()\par
next\par
\lang1049\f4\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\lang1033\b\i\f0\fs28\page Data types\par
\pard\nowidctlpar\b0\i0\f1\fs24\par
   Internally FastScript operates with the Variant type and is based on it. Nevertheless, you can use the following predetermined types in your scripts:\par
\par
\f4\fs20 Byte      | Same as Integer type\par
Word      |\par
Integer   |\par
Longint   |\par
Cardinal  |\par
TColor    |\par
\par
Boolean   | Boolean type\par
\par
Real      | Same as Extended type\par
Single    |\par
Double    |\par
Extended  |\par
TDate     |\par
TTime     |\par
TDateTime |\par
\par
Char      | Char type\par
\par
String    | String type\par
\par
Variant   | Same as Variant type\par
Pointer   |\par
\par
Array     | Array type\par
\f1\fs24\par
\par
    C++Script maps some types to standard types:\par
\par
int, long = Integer\par
void = Integer\par
bool = Boolean\par
float = Extended\par
\par
\f3\par
  JScript has no types, all types are variants. BasicScript may have types (for example, dim i as Integer), or may have no types and even no variable declaration. In this case a variable will have Variant type.\lang1049\f1\par
\par
\lang1033    Not all of these types can be assign-compatible. Like in Object Pascal, you can't assign Extended or String to an Integer. Only one type - the Variant - can be assigned to all the types and can get value from any type.\par
   Except the built\f3 -in\f1  types you can use the enumerated types \f3 defined\cf1\f1  \cf0 in your application or in add-in modules (for example after adding the TfsGraphicsRTTI component you can use TPenMode, TFontStyles and other types).\par
\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f0\fs28\page Classes\par
\pard\nowidctlpar\b0\i0\f1\fs24\par
   You cannot \f3 define\f1  a class inside the script, but you can use the external classes \f3 defined\f1  in add-in modules or your application. This is an example from the DEMOS\\Main demo:\par
\par
\f4\fs20 var\par
  f: TForm;\par
  b: TButton;\par
\par
procedure ButtonClick(Sender: TButton);\par
begin\par
  ShowMessage(Sender.Name);\par
  f.ModalResult := mrOk;\par
end;\par
\par
// there is no need to use all the parameters in event handlers\par
// because no type checking is performed\f5  here\f4\par
procedure ButtonMouseMove(Sender: TButton);\par
begin\par
  b.Caption := 'moved over';\par
end;\par
\par
begin\par
  f := TForm.Create(nil);\par
  f.Caption := 'Test it!';\par
  f.BorderStyle := bsDialog;\par
  f.Position := poScreenCenter;\par
\par
  b := TButton.Create(f);\par
  b.Name := 'Button1';\par
  b.Parent := f;\par
  b.SetBounds(10, 10, 75, 25);\par
  b.Caption := 'Test';\par
\par
  b.OnClick := @ButtonClick; \{ same as b.OnClick := 'ButtonClick' \}\par
  b.OnMouseMove := @ButtonMouseMove;\par
\par
  f.ShowModal;\par
  f.Free;\par
end.\par
\f1\fs24\par
   As you can see there is no difference between PascalScript and Delphi code. You can access any property (simple, indexed or default) or method. All the object's published properties are accessible from the script by default. Public properties and methods need the implementation code - that's why you can access it partially (for example, you cannot access the  TForm.Print method or TForm.Canvas property because they are not implemented).\par
    You can add your own classes - see "Scripting" chapter for details.\par
\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f0\fs28\page Functions\par
\pard\nowidctlpar\b0\i0\f1\fs24\par
   There is a rich set of standard functions which can be used in a script. To get an access to these functions, pass the fsGlobalUnit reference to the TfsScript.Parent property.\par
\par
\par
\f4\fs20 function IntToStr(i: Integer): String\par
function FloatToStr(e: Extended): String\par
function DateToStr(e: Extended): String\par
function TimeToStr(e: Extended): String\par
function DateTimeToStr(e: Extended): String\par
function Var\f5 ToStr\f4 (\f5 v\f4 : Variant\f5 ): String\f4\par
\f1\fs24\par
\f4\fs20 function StrToInt(s: String): Integer\par
function StrToFloat(s: String): Extended\par
function StrToDate(s: String): Extended\par
function StrToTime(s: String): Extended\par
function StrToDateTime(s: String): Extended\par
\par
function Format(Fmt: String; Args: array): String\par
function FormatFloat(Fmt: String; Value: Extended): String\par
function FormatDateTime(Fmt: String; DateTime: TDateTime): String\par
function FormatMaskText(EditMask: string; Value: string): string\par
\par
function EncodeDate(Year, Month, Day: Word): TDateTime\par
procedure DecodeDate(Date: TDateTime; var Year, Month, Day: Word)\par
function EncodeTime(Hour, Min, Sec, MSec: Word): TDateTime\par
procedure DecodeTime(Time: TDateTime; var Hour, Min, Sec, MSec: Word)\par
function Date: TDateTime\par
function Time: TDateTime\par
function Now: TDateTime\par
function DayOfWeek(aDate: DateTime): Integer\par
function IsLeapYear(Year: Word): Boolean\par
function DaysInMonth(nYear, nMonth: Integer): Integer\par
\par
function Length(s: String): Integer\par
function Copy(s: String; from, count: Integer): String\par
function Pos(substr, s: String): Integer\par
procedure Delete(var s: String; from, count: Integer): String\par
procedure Insert(s: String; var s2: String; pos: Integer): String\par
function Uppercase(s: String): String\par
function Lowercase(s: String): String\par
function Trim(s: String): String\par
function NameCase(s: String): String\par
function CompareText(s, s1: String): Integer\par
function Chr(i: Integer): Char\par
function Ord(ch: Char): Integer\par
procedure SetLength(var S: String; L: Integer)\par
\par
function Round(e: Extended): Integer\par
function Trunc(e: Extended): Integer\par
function Int(e: Extended): Integer\par
function Frac(X: Extended): Extended\par
function Sqrt(e: Extended): Extended\par
function Abs(e: Extended): Extended\par
function Sin(e: Extended): Extended\par
function Cos(e: Extended): Extended\par
function ArcTan(X: Extended): Extended\par
function Tan(X: Extended): Extended\par
function Exp(X: Extended): Extended\par
function Ln(X: Extended): Extended\par
function Pi: Extended\par
\par
procedure Inc(var i: Integer; incr: Integer = 1)\par
procedure Dec(var i: Integer; decr: Integer = 1)\par
procedure RaiseException(Param: String)\par
procedure ShowMessage(Msg: Variant)\par
procedure Randomize\par
function Random: Extended\par
function ValidInt(cInt: String): Boolean\par
function ValidFloat(cFlt: String): Boolean\par
function ValidDate(cDate: String): Boolean\par
function CreateOleObject(ClassName: String): Variant\par
function VarArrayCreate(Bounds: Array; Typ: Integer): Variant\par
\par
\f1\fs24    As you can see, some functions/procedure have default parameters. You can call it just like in Delphi:\par
\par
\f4\fs20 Inc(a);\par
Inc(b, 2);\par
\f1\fs24\par
   You can connect own function/procedure to a script - see "Scripting" chapter for details.\par
\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f0\fs28\page Events\par
\pard\nowidctlpar\b0\i0\f1\fs24\par
    You can use event handlers in the script. Unlike the Delphi event handler, script event handlers are \b not the methods of  the object. \b0 The following example shows how to connect an event handler to the TButton.OnClick event:\par
\par
\f4\fs20 var\par
  b: TButton;\par
  Form1: TForm;\par
\par
procedure ButtonClick(Sender: TButton);\par
begin\par
  ShowMessage(Sender.Name);\par
end;\par
\par
begin\par
  b := TButton.Create(Form1);\par
  b.Parent := Form1;\par
  b.OnClick := @ButtonClick; // same as b.OnClick := 'ButtonClick'\par
  b.OnClick := nil; // clear the event\par
end.\par
\f1\fs24\par
    There are some predefined events available in FS_iEvents unit:\par
\par
\f4\fs20   TfsNotifyEvent\par
  TfsMouseEvent\par
  TfsMouseMoveEvent\par
  TfsKeyEvent\par
  TfsKeyPressEvent\par
  TfsCloseEvent\par
  TfsCloseQueryEvent\par
  TfsCanResizeEvent\par
\f1\fs24\par
    See the "TfsFormsRTTTI component", "TfsExtCtrlsRTTI component" and "TfsDBCtrlsRTTI component" chapters for a list of the av\f3 ai\f1 lable events.\par
\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f0\fs28\page Enumerations and \f2 Sets\f0\par
\pard\nowidctlpar\b0\i0\f1\fs24\par
    FastScript supports enumerations. You can write in a script:\par
\par
\f4\fs20 Form1.BorderStyle := bsDialog;\par
\f1\fs24\par
    \f3 Sets\f1  are not supported. However, you can use set constants in the following way:\par
\par
\f4\fs20 Font.Style := fsBold;            // Font.Style := [fsBold] in Delphi\par
Font.Style := fsBold + fsItalic; // Font.Style := [fsBold, fsItalic]\par
Font.Style := 0;                 // Font.Style := []\par
\f1\fs24\par
\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f2\fs28 Arrays\par
\pard\nowidctlpar\lang1049\b0\i0\f1\fs24\par
    \lang1033\f3 FastScript supports all kind of arrays: static (one- and multi-dimesional), dynamic, variant arrays. There is an example of script that uses all array types:\par
\par
\f5\fs20 var \par
  ar1: array[\lang1049\f4 0..2\lang1033\f5 ] of Integer;\par
  ar2: array of Integer;\par
  ar3: Variant;\par
\par
SetLength(ar2, 3);\par
ar3 := VarArrayCreate([0, 2], varInteger);\par
ar1[0] := 1;\par
ar\lang1049\f4 2\lang1033\f5 [0] := 1;\par
ar\lang1049\f4 3\lang1033\f5 [0] := 1;\par
\f1\fs24\par
\pard\keepn\nowidctlpar\s1\sb240\sa60\kerning32\b\f0\fs72\page FastScript component palette\par
\pard\nowidctlpar\kerning0\b0\f1\fs24\par
\b\par
\pard\nowidctlpar\sl480\slmult1\b0\f0\fs40 Delphi component palette\par
TfsScript component\par
TfsClassesRTTI component\par
TfsGraphicsRTTI component\par
TfsFormsRTTI component\par
TfsExtCtrlsRTTI component\par
TfsDialogsRTTI component\par
TfsDBRTTI component\par
TfsDBCtrlsRTTI component\par
TfsBDERTTI component\par
TfsADORTTI component\par
TfsIBXRTTI component\par
TfsChartRTTI component\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\fs28\page Delphi component palette\par
\pard\nowidctlpar\b0\i0\f1\fs24\par
After the FastScript installing the "FastScript" tab will be created in the Delphi / C++Builder. This tab contains the main FastScript components such as TfsScript, TfsClassesRTTI, etc.  \par
\par
\lang1049\f7\fs20{\pict\wmetafile8\picw10716\pich847\picwgoal6075\pichgoal480 
010009000003424c00000000214c000000000400000003010800050000000b0200000000050000
000c0221009601030000001e00214c0000410b2000cc0020009501000000002000950100000000
280000009501000020000000010018000000000000980000000000000000000000000000000000
00d6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6ef
efe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6e7efe7f7
f7d6eff7eff7ffdee7efeff7ffdef7f7f7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7
f7e7f7ffd6e7ffe7f7ffdef7f7eff7f7deefe7f7fff7eff7ffe7efffd6efefe7f7ffd6f7f7e7f7
ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6ef
efdeffffceeff7deffffcee7f7def7ffd6f7ffdef7ffd6e7f7def7ffd6efffdef7ffd6e7f7def7
ffd6efffdef7ffd6e7f7def7ffd6efffdef7ffd6e7f7e7f7ffd6efffe7f7ffdeeff7e7f7ffeff7
ffe7e7efe7e7efe7f7f7d6f7ffdef7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7
ffc6efe7defff7cef7dee7ffefdef7e7def7efcef7efe7ffffcedeefe7ffffcef7dee7fff7def7
efdef7f7deffffdef7efd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffc6efe7deff
f7d6f7efe7ffefdeefe7e7f7f7d6efffe7f7ffdeefe7efffffd6eff7deefffdeefffe7ffffcef7
efdefff7d6e7def7ffffdeefefeff7f7e7f7f7e7f7f7d6efffeff7ffceeff7d6f7ffd6ffffdeff
f7ceefe7e7fff7def7efeff7f7deefefe7f7ffdeeff7e7f7ffdeeff7eff7ffdeefffe7efffe7de
eff7f7ffefeffff7f7ffdee7efe7f7f7def7ffdef7f7d6efefe7f7ffd6f7f7e7f7ffd6efefe7f7
ffd6f7f7e7f7ffd6f7efe7fff7def7f7e7fff7deefefe7f7ffdeefffeff7ffd6e7efe7f7ffdef7
ffe7f7f7deefefefffffd6efefefffffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7
ffdef7efdef7f7efefffcef7ffe7e7f7f7eff7bdffeff7ffefd6efefe7f7f7d6f7f7e7ffffd6e7
efe7ffffd6f7f7e7ffffceefefdef7f7deeff7efffffc6efefd6ffffd6f7eff7fff7d6efefe7f7
ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7
f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7
ffd6efefe7f7ffd6f7f7e7f7ffdee7e7e7f7ffdef7ffe7f7ffdeeff7effff7eff7def7ffe7dee7
efe7f7ffdef7f7e7f7ffdeefefe7f7ffdef7f7e7f7ffe7efe7effff7def7f7efffffdee7efe7ef
f7efefffeff7ffdeefefe7fff7def7f7e7f7ffd6e7f7e7f7ffdef7ffe7f7ffefe7f7f7ffffdef7
ffdeeff7d6e7e7eff7f7effff7f7fff7e7efefeffff7eff7f7effff7e7efefeffff7eff7f7efff
f7ceeff7d6f7ffd6f7ffdeeff7d6efe7e7f7f7d6f7f7e7ffffdee7e7e7f7ffdef7ffe7f7ffdeef
f7effff7eff7def7ffe7dee7efe7f7ffdef7f7e7f7ffdeefefe7f7ffdef7f7e7f7ffe7efe7efff
f7def7f7efffffdee7efe7eff7efefffeff7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7
f7e7f7ffe7eff7deefefdef7f7effff7d6efe7e7f7efdef7eff7ffffceefefeff7f7f7def7efff
ffd6e7f7eff7ffefdef7eff7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffe7ef
ffe7efffdef7ffe7f7ffcee7efe7ffffdef7ffeff7ffe7e7eff7f7ffeff7fff7f7ffe7e7efeff7
ffefeff7eff7ffd6e7efeff7f7efefffd6f7ffdeeff7b5ffffeff7ffe7ffffd6efefe7f7ffd6f7
f7e7f7ffd6f7f700e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7
ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7
f7f7efffffe7f7ffe7f7f7e7f7ffe7f7f7e7f7f7eff7ffeff7ffe7f7ffe7f7f7e7ffffe7f7f7e7
f7ffe7f7f7e7ffffe7f7f7e7f7ffdeeff7effff7efffffeffff7e7f7f7efffffe7f7ffe7f7ffe7
f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7
ffffe7f7f7efffefe7f7efe7f7efe7f7f7e7f7f7e7f7f7effff7eff7f7f7fff7f7f7eff7fff7f7
f7eff7fff7f7f7eff7fff7f7f7eff7fff7efffefeffff7efffefefffefeff7efeffff7eff7efe7
f7ffdeeff7efffffeff7fff7ffffe7f7f7e7ffffe7f7ffe7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7
f7f7e7ffffe7f7f7e7f7ffdeefffefffffe7f7ffe7f7ffe7f7ffe7efffeff7fff7ffffdee7efef
ffffdef7efe7f7ffeff7ffdeefffe7ffffe7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7
f7f7e7ffffe7f7ffe7f7ffe7f7ffeff7ffeff7fff7ffffe7efffe7f7efeff7f7deefefefffffde
efefe7ffffdef7f7e7f7f7f7ffffe7efefefffffefffffe7f7f7deeff7efffffe7f7ffe7f7ffde
f7f7e7fff7def7efe7f7efe7f7f7f7fffff7ffffdeffffdef7f7deffffdef7f7eff7ffe7f7ffef
f7ffefefffdef7f7e7f7ffe7f7ffdef7f7e7f7ffdef7f7e7ffffdef7f7e7f7ffe7f7f7e7ffffe7
f7f7e7f7ffe7f7f7e7ffffe7f7f7deffffdef7f7e7fff7def7f7e7f7ffdef7f7e7f7ffe7f7ffe7
f7ffe7f7ffe7ffffdeeff7e7f7ffe7f7ffdef7f7e7f7ffe7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7
f7f7e7ffffe7f7f7d6f7f7e7ffffeff7ffc6eff7eff7fff7f7ffceffffe7f7f7def7ffd6f7f7de
f7f7def7f7e7ffffdeffffe7ffffdeffffdef7ffe7f7f7eff7ffeff7ffdeffffe7ffffefffffef
f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7
f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7
f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7ffffdeeff7deeff7def7f7e7f7ffe7f7f7e7
fff7def7efe7f7ffdef7ffe7f7ffdef7ffe7f7ffdef7f7e7f7ffdef7ffeffff7e7f7f7e7ffffde
f7ffe7f7ffe7f7ffefffffe7f7ffe7ffffe7f7f7efffffe7f7ffeff7ffe7f7f7eff7ffe7eff7e7
f7f7e7f7f7e7f7ffdef7ffe7ffffe7ffffe7ffffdef7efe7f7ffdef7f7e7ffffdef7f7e7f7f7de
f7f7e7f7ffdef7f7def7ffdef7ffefffffe7ffffefffffe7f7ffe7ffffdef7f7e7ffffdeeff7de
eff7def7f7e7f7ffe7f7f7e7fff7def7efe7f7ffdef7ffe7f7ffdef7ffe7f7ffdef7f7e7f7ffde
f7ffeffff7e7f7f7e7ffffdef7ffe7f7ffe7f7ffefffffe7f7ffe7f7ffe7f7f7e7ffffe7f7f7e7
f7ffe7f7f7e7ffffe7f7f7eff7ffe7f7ffe7ffffd6f7f7def7ffdef7ffe7ffffdef7f7e7ffffde
f7ffd6ffffd6f7ffe7f7ffeff7ffe7f7f7d6f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7
ffffe7f7f7e7f7ffdef7ffe7ffffdef7ffdeffffdef7f7def7f7e7f7ffe7ffffdef7f7e7ffffde
f7ffe7ffffdef7f7e7ffffdef7f7cefff7d6fff7e7ffffd6fff7eff7f7bdf7effff7f7f7f7f7e7
f7ffe7f7f7e7ffffe7f7f7e7ffff00d6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ff
d6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7
e7f7ffd6efefe7f7ffd6eff7e7f7ffd6efefe7ffffd6f7f7def7f7d6e7efe7ffffd6f7f7e7f7ff
d6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffdef7f7e7f7f7d6efe7e7fff7ceefefd6efefcee7ef
def7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ff
d6f7f7e7f7ffd6efefe7f7ffeff7f7effff7deefe7effff7effff7effff7deefe7eff7f7ceefff
def7ffcee7f7def7ffcef7ffdef7ffceeff7def7ffd6f7ffe7f7ffd6e7f7def7ffd6efffe7f7ff
d6e7f7e7f7ffd6f7f7def7f7cee7efe7f7ffdef7ffdef7f7dee7efe7f7f7d6f7f7e7f7ffd6efef
e7f7ffd6f7f7e7f7ffd6efefe7f7fff7ffffe7efffdee7f7e7efffdeeff7ffffffdee7efe7efff
efeffff7ffffdeefe7eff7f7eff7ffe7efffdeeff7e7ffffd6f7f7e7f7ffd6efefe7f7ffd6f7f7
e7f7ffd6efefe7f7ffeff7f7eff7ffdee7f7e7f7ffdeeff7eff7f7dee7efe7eff7eff7f7e7f7ef
e7f7efe7f7efeffff7e7efefe7f7ffeff7ffdef7ffe7efffdeeff7e7eff7d6eff7f7ffffd6e7ef
e7f7f7eff7ffeff7ffdee7e7eff7f7def7f7e7f7f7d6e7efdeeff7def7f7effff7deefefe7fff7
d6f7f7e7f7f7d6efe7e7f7f7cefff7defff7ceefe7defff7d6f7f7e7f7ffd6efefdef7f7d6f7f7
e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7ffffd6efefdef7f7d6f7f7e7f7f7
d6efefe7f7f7def7f7e7f7ffd6efefdef7f7d6f7f7def7ffcee7efdef7ffd6f7f7e7f7ffd6efef
e7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7ffe7ffffdee7efdef7ffdef7ffeff7ffc6efffe7f7ff
deeff7eff7ffe7eff7e7f7f7deeff7deefefdee7efefffffeff7ffeff7ffdee7efe7eff7d6efef
e7ffffd6efefdeeff7d6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ff
d6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efef
e7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7ffe7f7ffdeeff7efffff
d6f7f7def7ffd6eff7def7ffd6f7ffdef7ffd6efefdef7ffd6f7f7def7ffcee7efdef7ffd6f7ff
e7ffffd6eff7deffffd6ffffe7ffffc6e7e7def7ffd6f7f7e7f7f7deefefeff7ffeff7f7efffff
e7efeff7ffffd6ffefe7fff7d6efefdef7ffd6f7ffdeffffceefefdef7f7d6f7ffdeffffd6eff7
def7ffd6f7ffdef7ffceefefdef7ffdef7ffefffffd6e7efe7f7ffd6f7f7e7f7f7deefefe7f7ff
d6f7ffe7f7ffdeeff7efffffd6f7f7def7ffd6eff7def7ffd6f7ffdef7ffd6efefdef7ffd6f7f7
def7ffcee7efdef7ffd6f7ffe7ffffd6eff7deffffd6ffffe7ffffc6e7e7def7ffd6f7f7e7f7ff
d6efefe7f7ffd6f7f7e7f7ffd6efefe7f7fff7eff7efefffdee7f7eff7ffdeeffff7f7ffefeff7
f7f7ffceefffe7f7ffdeeff7eff7ffcef7f7def7f7ceefe7eff7efd6f7f7e7f7ffd6efefe7f7ff
d6f7f7e7f7ffd6efefe7f7ffd6efefe7f7f7deefefeff7f7efeff7f7f7f7dee7e7efffffdef7f7
e7fff7deefefe7fff7def7f7e7fff7deefefe7fff7eff7ffe7f7ffefe7efe7f7ffefeff7efffff
efe7eff7f7ffd6f7f7e7f7ffd6efefe7f7ffd6efef00e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7
f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7
ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7ffffefffffe7ffffe7ffffdef7f7deffffdef7
ffe7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7effff7efffffe7fff7defff7deff
ffdef7ffdeffffdef7ffe7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7
f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7d6f7ffd6efffe7ffffdef7f7efffffefffffe7f7
ffdef7ffe7f7ffdef7ffe7f7ffdef7ffe7ffffe7f7ffe7ffffe7f7ffe7f7ffdef7f7e7f7ffdeef
f7e7f7ffe7f7ffe7ffffe7f7ffeffff7efffffdef7f7d6f7f7d6eff7e7f7fff7ffffeff7f7e7ff
ffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7f7ffe7f7fff7e7ffffdef7f7effff7eff7
e7efffefeffff7f7fff7efffeff7fff7e7f7efeff7ffeff7ffe7ffefe7ffdee7ffffe7f7f7e7f7
ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7f7ffefe7f7efe7ffffe7ffffe7f7f7e7ffefefffefdef7
e7eff7ffefffffe7f7f7e7f7efeffff7eff7f7e7eff7e7f7ffdef7ffdeeff7efffffe7f7ffe7f7
ffe7f7ffe7f7f7efffffefffffe7f7f7e7eff7e7f7f7e7ffffd6f7ffd6f7ffbdeffffff7fff7f7
fff7ffffeff7f7e7f7f7def7f7defff7defff7e7fff7def7efdef7efdef7f7e7fff7def7f7e7f7
ffefffffe7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7effff7effff7efffffeff7
f7efffffeffff7effff7e7ffefeff7f7e7f7f7effff7e7f7f7efffffe7ffffe7ffffe7fff7e7ff
ffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7eff7ffe7eff7efffffefffffe7f7eff7f7
fff7ffffefe7f7efffffe7f7f7efffffdeefefefffffefffffe7f7f7e7f7f7f7f7ffe7efeff7ff
fff7fff7f7ffffeff7ffd6eff7d6f7ffe7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7
f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ff
ffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7efffffe7f7
f7f7ffffeff7f7e7f7efeff7fff7ffffdeefffeff7ffeff7f7eff7ffeff7f7eff7ffeff7f7eff7
ffe7f7f7eff7ffe7f7ffeff7ffe7f7efeffff7e7f7f7cee7e7efffffe7f7ffdef7f7e7f7f7e7f7
efeff7f7e7f7f7eff7f7e7eff7d6ffe7effff7ffffffefe7f7eff7ffe7f7ffe7f7ffe7f7ffefff
ffeff7ffeff7ffeff7ffefffffeff7ffeff7ffeff7fffffffff7f7f7e7efeff7ffffefffffdef7
f7e7f7ffdef7f7efffffe7f7f7f7ffffeff7f7e7f7efeff7fff7ffffdeefffeff7ffeff7f7eff7
ffeff7f7eff7ffeff7f7eff7ffe7f7f7eff7ffe7f7ffeff7ffe7f7efeffff7e7f7f7cee7e7efff
ffe7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7ffffffd6f7efcef7efd6ffffdef7
f7deefeff7ffffeff7f7e7f7ffefe7fff7ffffefeff7deffffe7efefe7fff7f7ffffe7ffffe7f7
f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7fff7defff7e7fff7e7f7f7f7f7fffff7fff7ff
ffdef7efe7f7f7def7efe7f7f7def7efe7fff7def7f7e7fff7def7eff7f7ffdeefffefefffdeef
f7efefffeff7ffdeffffceefffe7ffffe7f7f7e7f7ffe7f7f7e7f7ff00d6efefe7f7ffd6f7f7e7
f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6
efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffdeefefe7f7f7d6eff7deeff7cee7efde
f7ffd6f7f7def7f7d6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffdeefe7effff7ce
efefdeffffd6f7f7d6f7f7d6efefdeeff7d6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7
f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffc6e7ffdef7ffefffffe7efe7ef
efdeffffeff7f7defffff7e7efe7f7fff7eff7efeff7f7e7efe7eff7efefefefeff7efdeefe7ef
fff7def7efeffff7deefe7eff7f7def7efeffff7ffefceffffe7d6decef7ffffceefefe7f7ffef
f7ffe7e7efd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffe7e7cef7ffffb5d6f7ce
efffdef7ffe7efffd6f7ffd6efffd6e7f7e7f7ffdeefffeff7ffced6ffdeeffff7ffffdef7ded6
efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7fff7fff7c6e7efb5deffc6efffbddef7e7
ffffcef7ffcef7ffc6d6ffe7ffffceefffcee7f7def7f7e7f7f7ceefd6effff7e7ffffd6efefce
deefefffffdeeff7e7eff7efffffeff7f7cee7e7e7ffffdeffffefffffbde7e773b5c639849c18
6b8c4a636b5a737b7384949cadb5a5b5bdcededed6efefefffffe7e7e7f7f7f7f7f7f7f7ffffde
e7efe7f7f7def7f7efffffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffdee7deef
f7efeff7f7eff7ffdeefefeff7f7def7efe7ffefd6e7e7e7f7f7def7efeffff7deefe7eff7efde
f7efe7f7efd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffefeff7f7f7ffd6f7efe7
f7f7deefe7ffffffefc6c6ad94947b847b8c948c7b847b8c948c7b847b8c948c6b736b8c948c9c
848c8c8c7b7b8c7b84847b847b738c8c8c84949cc6f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7
f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6
f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7
f7ffefefeff7f7f7eff7f7effff7e7efeff7ffffcececea59ca59484849c8c8c9484849c8c8c94
84849c8c8c9484849c8c8c847b84947b8c947b7ba58c8c9c8c849c9c94848c8cdee7efdeeff7e7
ffffdef7f7e7ffffdeefefe7ffffdef7ffe7f7ffceefeff7ffffdec6ceb594a58c7b848c8c8c84
7b7b94848c8c7b7b947b8c8c7b84948c8c8c7b7b947b8c8c7b84948c8c8c847394948c848c8cde
eff7d6e7efdef7f7def7f7effff7efefeff7f7f7eff7f7effff7e7efeff7ffffcececea59ca594
84849c8c8c9484849c8c8c9484849c8c8c9484849c8c8c847b84947b8c947b7ba58c8c9c8c849c
9c94848c8cdee7efd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffffded6ffffffde
f7f7def7ffdeeff7efefffeff7ffe7f7f7dee7ffe7efffdef7ffdeffffdeefeffff7ffdedef7d6
f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffe7f7efd6f7efbdeff7def7ffde
e7f7eff7ffd6f7f7c6f7f7d6eff7e7f7ffd6f7ffe7f7ffd6eff7e7f7ffd6f7ffe7f7ffdeefe7d6
ffefdeffefefffefe7f7e7ffefefceffffc6f7ffd6efefe7f7ffd6f7f7e7f7ffd6f7f700e7f7ff
e7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7
e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7eff7f7eff7ffffffff
efffffefffffdeeff7e7ffffe7ffffe7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7
f7ffffe7f7f7d6efefdef7ffd6f7f7cee7e7f7fff7fffff7e7f7ffe7f7f7e7ffffe7f7f7e7f7ff
e7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7efffffeff7ef
fff7deceb57bdeb57bdea563d6ad63d6ad5aefad52e79c4ae7a552de9439de9c39d68c31d69439
ce8429d67b21ce6b18ce7318c66310c66b10b55a08bd6b08bd5a089c5a10845a217b6b4adee7d6
def7f7d6eff7effffff7ffffe7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7ffffff
a5b5f71042a500087b00108400086308188400107300107300106300006308107b000073212173
c6ceffefffffe7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7cedeff5a7bb5396bce
2152ce295ab5395aa529529c003984294a8c08296b082973213973c6deffdeffffe7fff7ceffce
c6efd6e7fff7def7f7d6eff7efffffeff7ffefffffe7f7efe7ffffdef7f7def7f7d6f7ffaddeef
6bb5d673d6ef52c6ef52adbd398ca539849431637b4a6b7b5a6b7b8c8ca59c94adbdc6cebdced6
e7eff7e7f7fff7fffff7ffffefffffe7efefe7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffff
e7f7f7efffffe7f7ffe7f7ffdeefffdeefffd6efffdef7ffd6f7ffdef7ffdef7ffe7f7ffe7f7ff
e7f7ffe7efeff7fffff7fff7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7f7f7ff
e7f7ffd6f7ffd6efffdeffffdee7efa56b63734a31bd3939b539399c1818bd3939ad3131a53131
a52929b531319c18219431318c4239843129a539318c2929b57b84ffffffe7f7ffe7f7f7e7ffff
e7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7
e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ff
e7f7f7e7ffffe7f7f7eff7f7e7f7ffe7ffffd6efffdef7ffdee7f7d6c6c6b59484ceb5adcea59c
ceb5adcead9cceada5bda59cceada5c6ad9cceb5adcea59cd6b5a5d6ad94d6b59cad9c94a59494
fff7ffeff7ffe7f7ffe7ffffdefff7deffffcef7ffd6efffc6e7ffc6f7ffdee7ffe7c6d6d69c9c
cea59cb5a59cceb5adceadadd6b5adcea59cd6b5adcead9cceada5cea59cceada5cead9cceb59c
ad9c949c9c9cf7ffffefffffdeeff7e7fff7e7f7efeff7f7e7f7ffe7ffffd6efffdef7ffdee7f7
d6c6c6b59484ceb5adcea59cceb5adcead9cceada5bda59cceada5c6ad9cceb5adcea59cd6b5a5
d6ad94d6b59cad9c94a59494fff7ffe7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7
b56b6bffe7e7f7ffffcee7f7e7f7ffdeefffd6f7ffc6f7f7e7fff7deffeffff7e7deffdedeefde
ceffffe7f7ffefe7ffe7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7ff6310ff6b21
ff7331ff6331ff6331ff5221ff6b31ff6b29ff6b29ff6329ff7339ff6329ff6b29ff6329ff6b31
ff6329ff5a4af75a42ff5a39e75229ef7352f75242fff7d6ffffefe7f7ffe7f7f7e7ffffe7f7f7
e7ffff00d6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7
ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffffff
ffefeff7d6dedee7eff7efffffe7f7ffdeefefe7ffffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7
ffd6efefe7f7ffeff7ffefffffcee7efdeffffd6efefeffff7ffffeff7e7d6d6f7f7e7f7ffd6ef
efe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7
ffd6eff7f7ffefffefced6ad63dea54affb54aefa539ffb542ffa542ffad42ef9c39efa539de8c
31e79429ce8421d68c21bd7b18ce8418b57310bd6b10ad6300b56b00a55a00ad5a00c65200b55a
08845a21ffffe7efffffdef7f7cee7efe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6ef
efe7f7ffc6deff84adff3973f7396bff4263ff526bff395aef2952f72952de2142d6314ade2931
d600009400006b212973cedeffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffbdde
ff397bd60852de0852f7104ace2952d60842b50042bd10399c1031ad00189400188c082973184a
52185a29217318427b42bdefc6deffefd6efefd6eff7e7efffd6e7e7f7ffffdef7f7efffffd6e7
e7def7ff9cc6d673bdd67bdeff73efff6befff7befff73d6f773d6f763b5ce5aa5bd427b8c396b
8c295a7342738c527b8c739cada5b5bddeeff7e7efefeff7f7d6f7f7e7f7ffd6efefe7f7ffd6f7
f7e7f7ffd6efefe7f7ff9cc6d69cc6e784a5de73a5ef6b8cde6b94e75a8cd65a9cde4a7bc6528c
ce5a84bd739cce849cc6adc6decedeefeff7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6ef
efe7f7ffb5bdd6a5c6ef6bb5ef6ba5ef5a94d6849cbd9c5a5affefd6ffefceffe7ce7b5a4affde
c6ffd6bdffe7cee7c6adf7d6bd9c3939f7bdadd6b594f7cea5f7a58c9442398c7b73d6eff7d6f7
f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7
ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6ef
efe7f7ffd6f7f7e7f7ffd6efefe7f7ffadc6d6a5ceef73a5e7639cef6394d68ca5c6bdb5b5ffef
deffefceffefdef7deceffe7d6f7dec6ffe7ceefd6bdf7dec6efceb5efd6b5efc6a5f7cea5efbd
9cceb5a58c7b7bf7f7ffdeeff7e7f7f7d6e7e7ceefefadd6ef9cceef7ba5de73a5ef4a8cd67b8c
cebda5bdffded6fff7cefff7d6f7deceffded6ffd6bdffdec6efceb5f7d6bdefceadefd6b5dec6
a5efceb5efbda5ceb5a58c8484eff7ffd6efffdef7ffdeefefeff7f7adc6d6a5ceef73a5e7639c
ef6394d68ca5c6bdb5b5ffefdeffefceffefdef7deceffe7d6f7dec6ffe7ceefd6bdf7dec6efce
b5efd6b5efc6a5f7cea5efbd9cceb5a58c7b7bf7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7
ffd6efefe7f7ffbd6339ffefcef7ffe7e7ffeff7fff7ffffefe7f7dee7ffe7ff3918ff7b42ff5a
29de6b39ff5a4ad6ffdee7e7effff7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7
ffc66b42fff7d6ffffeffffff7ffffffffffffffffeffffff7fffff7fffff7ffffe7fffff7ffff
efffffeffff7e7ffffefffffceefffdeffffc6ffffc6fff7b5ef7352eff7d6eff7e7d6f7f7e7f7
ffd6efefe7f7ffd6efef00e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7
f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7
f7ffe7f7f7f7eff79c949c7b7b7b8c8c94dee7efefffffefffffd6e7efe7ffffe7f7f7e7f7ffe7
f7f7e7ffffe7f7f7e7f7ffe7f7f7eff7ffe7f7ffe7f7ffdef7ffe7f7f7fffff7f7efd6846342e7
ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7
f7f7e7f7ffe7f7f7ceefffeff7ffffffefd6a56bf7bd63ffbd52ffb552ffad42ffad5af79c4af7
a552e79442e79c4ade8c31de8c31d68429de8431d67321d67b21ce6b18ce7318c66310c66b10b5
5a08f76300ce5a009c5a10fff7d6effff7def7ffe7f7ffe7f7ffe7ffffe7f7f7e7f7ffe7f7f7e7
ffffe7f7f7e7f7ffe7f7f7deffff639cde52a5ff3984ff4273ff5273ff396bff215aff316bff21
52f72952ef2939ef4a52ef00007b00105ae7ffffe7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7
f7ffe7f7f7c6f7ff3984de1884ff1873ff186bff2963e7186bde0863e73163d60831bd1839d600
18a500298c002939217b31107300185a104a7b42c6efd6efffffdef7ffe7f7fff7ffffe7efeff7
f7f7f7f7fff7f7ffefffffadcee76bb5ce8ce7ff6be7ff84e7ff73e7ff84efff73efff7bf7ff6b
efff63efff52e7f773c6e752adc6398c9c31637373949cbdd6d6eff7f7fff7f7e7ffffe7f7f7e7
f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f794d6ff7bbdff6ba5f74a7bef4273ef2963de216bde21
63d62973de2163d62973ce4273ce638cce84addecee7ffe7f7ffe7ffffe7f7f7e7f7ffe7f7f7e7
ffffe7f7f7e7f7ffe7f7f7c6deff7bb5f752adff3173ef297bd6527bb59c5a63fff7deffffdeff
f7d6735229ffefceffefceffdebdffe7c6ffdeb59c3129ffd6c6efd6adffd6a5ffbd9c7b3121a5
948cd6f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7
f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7
ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7b5deff84c6ff5aa5ff297bef4284e74a
6bb5adadb5ffffefffffdefff7d6fff7d6f7efcef7efceefe7c6efe7c6e7deb5efdeb5efd6adf7
d6a5efbd94efceadceb59c948c8cefeffff7ffffefffffefffffcef7f7b5e7f784bde76b9ce74a
7bde398cef4263bdbda5c6fff7e7ffffdefff7c6fff7d6ffe7d6ffefceffe7c6ffe7c6f7deadf7
deb5efd6adefd6ade7ce9cefc6adcead94948c8ceff7ffe7f7ffdef7ffefffffe7f7efb5deff84
c6ff5aa5ff297bef4284e74a6bb5adadb5ffffefffffdefff7d6fff7d6f7efcef7efceefe7c6ef
e7c6e7deb5efdeb5efd6adf7d6a5efbd94efceadceb59c948c8cefefffe7ffffe7f7f7e7f7ffe7
f7f7e7ffffe7f7f7e7f7ffe7f7f7ff6318ff7331ef6329e75a31ff634aff4a31ff6b39ff5a21e7
ad4218ff7300ff6329bd42f77339f7ffdeeffff7bdf7ffe7ffffe7f7f7e7f7ffe7f7f7e7ffffe7
f7f7e7f7ffe7f7f7de6b39ffffe7ffffe75a634a524a426b5242635a31525a31fffff7fffff7ff
fff7ffffefffffefffffefffffefffffe7fffff7f7ffefffffdeffffd6ffffe7d64a4aefffffde
f7ffe7ffffe7f7f7e7f7ffe7f7f7e7f7ff00d6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7
e7f7ffe7efefd6fff7def7f7fff7ffc6efefcef7f7f7f7ffffffffe7f7f7ffe7efdef7f7d6ffff
ceefe7b5a5ad7b5263fff7ffe7e7efbd94a542c6b5739494f7f7f7f7efe7a59c94cea59cbdefef
deffffced6deffffffd6e7e7e7ffffdeeff7f7f7f7deefefdef7f7efefffe7ffffdee7e7e7f7ff
def7efde6b08efefefdef7efd6ffffe7f7ffe7efd6d66318ad6b00ce7308b56b00e75a21de5a00
d66b10de6308efffffd6efffefefffd6e7e7e7f7ffceeffff7fff7bddeffdeffe7cefff7efe7ff
bdeff7deeffff7ffd6f7deffc6f7f7ceefffefffffe7ffe7b5e7e7f7ffffefdeefffffffdeefef
d6f7ffc6efefe7ffffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffcef7e7def7ff
d6fff7e7ffffceefe7deffdedeffffe7f7f7c6e7ef5aadff4ab5ff4a8cff5a7bef001010000800
5a84f7395aef0000184a73b50008002142bd425ae7000084efefffdeefefe7f7f7d6f7f7e7ffff
d6eff7ceeff7cef7ffd6f7ffffe7c6399cff0073ff088cff006bff2973ff296bf7105af7105ad6
185ade0842b50021bd00219c0018b5001094088410007b08107b08105a10efffffcededed6efff
f7f7f7de9431ce7308ce7b39ad6b42c6846badbdbd42b5ce94efff9cf7ff84e7ff8cf7ff84efff
8cf7ff7be7ff8cefff84efff8cf7ff84e7f77bffff7bdeff39bdd639637bbdc6d6ffeff7effff7
d6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ff84c6ff63a5ff396bff295aff184ae7
184aef214ade2142e71042d62142de1842d6295ade3173c65a9cc6cef7ffefffefd6efefe7f7ff
d6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ff94bdff5a9cff3163f7296bff2152f70039efc67b39
ffffdefff7d6ffefd68c5242ffefd6f7e7c6ffe7ceded6bdf7d6bd942929f7cebdefc6adffdebd
e7bda59c2929848c84f7f7ffe7e7f7efffffd6f7f7e7f7f7efefeff7eff7f7ffffdef7f7deffde
e7efffd6f7ff6b73b539319431429c4a4284a542529c4242944242945a52ffffffefe7deefffff
d6f7ffd6f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ff84bdff5aa5ff3973f7
3152ff2942f71042f7deadadfff7efa51818942118731008ffe7d6ffdece7331217308008c2918
f7ceb5efd6b57321088c3118732110ffadad7b847be7fff7deefffeff7f7effff7d6f7ff8cc6f7
52a5ff3173ff215af72942ef1042ffd6ad9c080000f7efeffff7ef080000ffefd6100800080000
100800f7e7d6d6ceb5e7d6bd180800181000ceada5d6bdbd84847beff7ffd6efefe7ffffdef7f7
eff7f784bdff5aa5ff3973f73152ff2942f71042f7deadadfff7ef000000000000000000f7f7ef
000000101008080800dedecee7d6bd100800d6ceb5e7ceb5210000d6ada58c7b84eff7ffd6efef
e7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffff5a21deffefefefffe7efffe7e7ffeff7f7
ceffd6f7f7ffff843929ff9408ff7b08f77be75231e7ffe7fffff7b5ffffd6efefe7f7ffd6f7f7
e7f7ffd6efefe7f7ffd6f7f7e7f7ffff6329ffffeffffff784846b5a63427363525a5a4a7b845a
fffff7ffffffffffd6ffffeff7f7efffffd6ffffd6ffffefffffe7ffffe7ffffbdffffe7fff7bd
ff5a42def7ffe7ffe7d6efefe7f7ffd6f7f7e7f7ffd6f7f700e7f7ffe7f7f7e7ffffe7f7f7e7f7
ffe7f7f7e7ffffe7f7f7eff7f7d6f7efe7ffffe7f7ffcef7f7d6f7f7eff7ffd6efeff7f7ffdeff
ffe7ffffffefff6bb5b529bdad5a636b397b7be79cb5636b7b39c6b59c7384c68c946b6b6b3184
73948c8cbda5adf7eff7ffffffdeeff7e7ffffe7f7ffe7efeff7ffffefffffdef7f7f7f7ffe7f7
ffe7f7f7deefffeffff7de6300de6b08e76b08de6b00de5a08ce7310ff7321ffffceffffffffff
cefff7defff7bdffde94c66b18cef7efd6ffffdeeff7f7ffefffeff7effff7cef7fffffffff7ff
f7e7ffe7f7f7ffcef7ffdeffffcefffffff7e7deffffb5f7effff7eff7ffffdeffffd6e7efffff
ffdee7efefffffe7f7ffdeeff7f7ffffe7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7
f7e7ffefd6e7ffefffffe7e7ffe7efffeffff7eff7ffe7f7f7deffff6ba5ef63b5ff639cff0008
186b7bff8484ff0808005a8cff0000106373de0000185252ff1839ce0808a5cef7f7efffffe7f7
f7e7ffffd6f7f7e7f7ffe7f7f7ffffffe7e7dec684524a8cff2994ff2184ff218cff3184ff3184
ff186bff2173f72163ef185ad60021ce0021b50018b50029b5188421008c18107308296b29deff
e7e7ffffd6f7ffffffffc66b21d69c29ffce84ffd6b5ffc6b5bddede29a5bd94efff84f7ff8cf7
ff7bf7ff8cf7ff84f7ff8cf7ff84f7ff94ffff84f7ff94f7ff84ffff8cf7ff42c6de4a738cadb5
cefff7f7e7ffefe7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f784c6ff528cf7396b
ff184aff1039f70839e7104aef1031e71039de1031de184ade184ad62973ce528cbdd6f7ffeff7
efe7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f79cc6ff4a84ff4273ff1852f70839
ef0042f7bd7339ad7352d67352ce6b4ade5a42ce5231bd5a31b54a31ad5a39bd4a31c639398c39
29ad4a318c2110a53129ad21218c948cd6ffffeff7ffe7f7ffe7ffffe7f7efeff7efeff7eff7ff
ffdef7f7def7f78484bd6373bd21219c2110ad00087b0800525a08006b08086b1810733118ad7b
6bad948ce7e7e7ffffffd6e7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f78cc6
ff5294ff3973f71842ef214af70839efefbdbdfffff79c2929fff7e7fff7e75a2918fff7deefe7
bd734231ffdec68c3121ffcead8c3918ffceb5ffc6b5e79c948c948ceffff7e7f7ffe7f7f7efff
f7d6f7ff9cceff4a8cff3173ff184af72139f70039efe7bdad181008fff7f7fff7ef181008fff7
deefe7de080000f7efde080800efe7ce100800e7debdd6ceb53918089c84848c8c8ce7f7f7e7f7
ffe7f7ffe7ffffefffff8cc6ff5294ff3973f71842ef214af70839efefbdbdfffff7fffff71810
10fff7efe7ded6181008efded6f7efde100800e7dec6101000ded6bddeceb5311000cea5a5a594
9ceff7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7ff6b29e7f7eff7f7ffe7f7
ffdeefffd6f7efd6ffefdeefffff9431ef9c31ff7b31ff7b39ff6b52deffe7fff7ffe7efffe7f7
ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7ff6b29ffffdeffffffffffeffffff7ffff
f7ffffffffffdefffff7ffffd6ffffffffffeffffff7fff7deffffefffefeff7ffceffffe7f7ff
def7ffe7ffffc6ff6329e7f7ffefffffe7f7ffe7f7f7e7ffffe7f7f7e7ffff00d6f7f7e7f7ffd6
efefe7f7ffd6f7f7e7f7ffd6efefe7f7fff7f7f7e7f7f7deefefdeffffbdf7f7efffffefeff7ce
f7f7def7f7fff7ffa5e7e7def7ffceffff4afff7007b73006363008484108c8c8cdede734a5a29
847b18847b10736b088c73b5637bffefffdeefefdeffffdeffffdee7efeff7ffe7f7ffdef7f7de
f7f7e7e7f7e7f7ffdef7efe7f7ffdeefe7de6308f7ffffd6efe7deeff7f7ffffd6efdece8c5aff
ffd6fffff7fffffffff7ffffe7c6ffe7bdad5a18defff7d6efe7eff7efeff7d6ffefffbdefff29
94de846329844a218ca542ceffdefff7ced6ffe7108cf71094ff086bc642184210182142633994
9cadb5c6d6bdd6e7e7ffffdeeff7f7f7ffefeff7fff7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7
f7ffd6efefe7f7ffefffefe7efffdeefefeff7ffdef7f7efffefdee7ffdeefffd6def794b5ff5a
9cff639cff0010217b94ff7b7bff1000005a84ef0000210000426b63c6525aff2942ef00006bd6
ffffdeeff7e7f7ffceeff7d6f7ffdefff7ffffefffdeb5d6a563b54a007badf73994ff4294ff31
84ff298cff187bf72973ff216bff296bff104ad60021de0018b50018c60018ad189421007b1010
730842844ad6f7e7efffffd6f7ffefefefbd6318bd9442ffffd6fffff7fffff7a5dede29b5c684
e7ff9cffff8cffff94ffff8cf7ff94ffff8cffff94ffff84f7ff94ffff84ffff94ffff84efff52
d6ef316b84a5b5c6efefefd6f7efd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ff73
adff4a8cff2152f71042ff0029ef0031ef0029de0029ef0029d60831de0829ce1042d62163c652
94cecee7ffeff7f7d6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ff7badff4a94ff21
5aef0842ef0031ef0031efc6844afff7deffffdefff7dea5735affe7ceffefcefff7deefe7cef7
dec6a53931ffdec6ffceadffdebdf7bda5a52929848484e7eff7efefffe7f7ffdef7f7effff7ef
f7efffffffd6eff7bde7f7424aad2118ad1821a50808ad1008b50010a500005a5a08007b180894
31186b10006310004a100094736bdeced6ffffffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6
efefe7f7ff7bb5ff4a94ff215aef0839f70831ef0031efdeb5adfffff77321186b1810732921ff
efdef7efceffdece7b2110ffe7ce5a2108ffdec68418088c2110842118f7ada56b847bc6fff7de
f7ffeff7f7deefe7d6efff8cb5ff4a8cff2152f70842ff1031f70039f7deb5ad08000010080810
0800000000fff7e7ffffef080800dedece101000ceceb5101000ded6b5e7debd210000c6adad8c
8c8ce7eff7def7ffefffffd6e7e7e7f7f77bb5ff4a94ff215aef0839f70831ef0031efdeb5adff
fff7fff7ef100800f7e7deffefe7100000180800100000f7e7d6ded6bdefefce080800291800c6
ad9cd6bdb5737373e7f7f7d6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7fff75a18d6
ffefd6eff7e7ffffc6deffd6f7e7f7f7d6f7eff7d6efffd6f7ffd6f7efdefff7def7def7f7f7e7
deefeff7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffff6329ffffeffffff7ff
fffffffff7fffffff7ffef5a6342525252526b394252424252424a5a4a525a4aefffd6fffff7ff
ffcefffff7efefdefff7efffffbdff7329d6eff7e7f7ffd6f7f7e7f7ffd6efefe7f7ffd6efef00
e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7ffffffeff7ffe7f7ffcef7f7def7ff
f7effffff7ffdef7fff7ffffefeff7ceffffb5adb5a5738c52efde21ffef185a5a005a5a187b7b
bddee70063634a3142107373fff7ffadbdce946b7b6b5a63e7f7f7cee7e7e7f7ffefffffd6e7e7
e7ffffefffffdef7f7f7f7ffdef7ffeff7f7def7ffefffefde6300f7efffe7f7ffd6ffffdeffff
def7cee77b31d6a531b56b18de9c18de7329ce8408d69429e77300efffdee7f7e7ffffffdefff7
deefffd6f7ff3194efe7a54ace6310c67b0094a521c6ffff08adffe70821ce004aef2963de1029
000018210029311839636b84a5bdceefffffdef7f7e7eff7ffffffe7efefe7ffffe7f7f7e7f7ff
e7f7f7e7ffffe7f7f7e7f7ffe7f7f7ef8c39de7b39de8c52ce7b42ce8439c67329ce844ab57342
a59c638cb5f78cdeff63a5ff73adff000821000021738cff7b9cff0000186b84ff0000295a6bff
4273ef180894d6efeff7f7ffeff7ffdef7ffceeffff7ffffffefc6ffc67bd66b00ef731084bdff
4aa5ff528cff4a94ff2184ff2194ff2973ff3184ff296bff185af70021e70029ce0018ce0018bd
088421189c31298421b5e7c6effffff7ffffc6effff7f7f7b56321bd945affffefffffffffffff
ade7ef31b5ce9cf7ff9cffff9cffff94ffff9cffff94ffff9cffff94ffff9cffff8cffff9cffff
94ffff9cffff6bdef739849c849cb5f7ffffd6f7efe7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7
e7f7ffe7f7f784bdff4a84ff2963ff0839ff0039ff0029f70031ff0029f70839ef0829e71031e7
1042de316bde5284cedef7ffeff7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7
8cbdff4a84ff215aff0842ff1052ff0031f7c68452fff7e7ffffe7ffffe7ad735affffe7fff7d6
ffe7ceffefd6ffe7ceb55a42ffdebdf7debdefdea5efd6b59431318c8c8ceff7f7eff7ffdeeff7
e7ffffe7f7f7f7f7f7eff7ff94a5de4a6bbd1010d61808de2931de0008ad0008a500009408007b
5a00007b18006b08008418009c31188c31184a08008c635ad6b5b5e7ffffe7f7f7e7f7ffe7f7f7
e7ffffe7f7f7e7f7ffe7f7f78cbdff4a8cff216bff0839ff0839ff0031efefc6bdffffef8c1818
fffff7fff7e76b2118ffffefffefd66b2918ffdece9c3929ffd6bd842918ffd6b5ffd6c6de9c94
949494f7eff7e7ffffe7f7efeffff7d6efff94c6ff4a84ff215aff0831ff0839ff0039ffdebdb5
181808fff7e7fffff7000800fff7e7fff7e7101000e7dece100800f7efd6181000d6ceb5dedeb5
310800bd9c949c9494f7ffffe7ffffdef7f7def7f7efffff8cbdff4a8cff216bff0839ff0839ff
0031efefc6bdffffeffffff7100800fff7effffff7100800f7e7defff7e7100000f7e7ce080800
efe7ced6bda5311000bdad9c8c8c8ce7ffffe7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ff
e7f7f7ff7339eff7efefefffdef7ffdef7ffe7fff7fff7cef7f7f7d6f7fff7ffffe7f7deff5a42
ff6b39ff5221ff8431f76318e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7ff7339
ffffefffffffffffefffffefffffffffffff6363428473636b5a5a7373527373636b6b6b637342
ffffceffffe7ffffd6ffffd6ffffd6ffffdeffffbdff5221e7ffffd6f7f7e7ffffe7f7f7e7f7ff
e7f7f7e7f7ff00d6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffdee7e7eff7ffd6ef
efe7fffff7f7fffff7fff7def7ffefffadefe7e7ffffbd8c8cbd6b73525252398c7b397b7b9cde
e7ffdef718ffef29fff7f7ffff31e7de10ffef4284845a526b529494527b7b294242ffffffdee7
efefffffd6f7f7efffffdeefefdef7f7efefffe7ffffdee7e7e7f7ffdef7efde6b08e7f7efdeff
efbdeff7ceefffdeffffffd6dedef7f7eff7ffc6e7efe7efffeffff7efffe7ffd6a5e7ffffbdde
f7def7ffbdefffcef7ffd6deff089cff298cef007bff1884ff08d6ffced6ffffe7ef42ceff00bd
ff6b7ba5088cf7ff18527b10311808291810318494a5cedeefdef7ffe7f7f7d6efefe7f7f7d6ef
efe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffc67318d69c4affd6b5ffdecef7cebdffde
c6f7d6a5f7e7bdefd6ad9cb5f7a5ffff73ceff63adf773b5ef7bbdde4aadff6b9cff6b9cf73184
ef4294ff2973de295aff10006be7efffefefefefffffceefffd6f7ffe7efdeffdea5ffad4aff94
08de7b107bc6f7299cff52a5ff4a94ff319cff2994ff3184ff297bff2973ff1852ef0021ef0021
ce0821d60021bd109431108418297b29d6ffefefffffd6e7e7cef7ffeff7efc67329b57b52ffff
efffffffffffffa5d6de4abdd694deffadffff9cffffa5ffff94ffffa5ffff94ffffa5ffff9cff
ffa5ffff94ffffadffff9cffff8cefff3184947b94a5eff7ffdefff7d6efefe7f7ffd6f7f7e7f7
ffd6efefe7f7ffd6f7f7e7f7ff73b5ff5294ff295aff1042ff0031ff0031ff0031ff0029ff0029
ef0831f70831de184ae7215ad65a94d6ceeffff7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7
ffd6f7f7e7f7ff84b5ff428cff295aff104aff0031f70039ffad6b39b58c73bd7342ce7b4ace63
31d67b42b56b39c66b429c6331c67339ce5239ad5a39ad5231b54a29b55239b52929848c84d6f7
f7deefefdeeff7d6f7f7e7f7ffe7e7f7dee7ff394ab50021b50000d60000d60008bd0021ce0021
bd0021c621219c9442298c2900ad39089429008408007b10007318007329186b3129d6efefe7f7
ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ff7badff5294ff215aff0842ff0831ff0039fff7c6
bdfffff77321188c2921731010fff7e7ffe7d67b29218418106b2918f7dec6e7d6bd7329187b21
10842921ffadad737b7be7ffffd6efefe7f7efeff7efd6efff8cb5ff4a8cff2152ff1039ff0031
ff0029f7ffcec6fff7e7211008100000fffffffff7de080000100800292108efe7d6ded6bdefde
c6211800180800d6b5add6c6bd7b7373e7f7f7d6e7efe7f7ffdef7f7e7f7f77badff5294ff215a
ff0842ff0831ff0039fff7c6bdfffff7080800000800101008e7e7de080800101000080000efe7
d6efdec6100800efdec6e7d6bd311808b59c9c848484def7ffd6efefe7f7ffd6f7f7e7f7ffd6ef
efe7f7ffd6f7f7e7f7fff76329d6ffefdef7ffefffffefeffff7f7deef4a39b56b73ff5242ff42
29f77b39ff843142ff7b00ff5a10c642ff7321d6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7
f7e7f7ffff6329ffffe7fffff7ffffffffffeffffff7ffffffffffeffff7deffffe7ffffefffff
ffe7efdefffff7ffffeffffff7deffe7efffffefffefe7efe7ffffceff5a29d6eff7e7f7f7d6ef
efe7f7ffd6f7f7e7f7ffd6f7f700e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7
f7f7efffffe7f7ffefeff7efe7f794b5bd7b949c84526bffbdeff7def773dece529c84527b6b5a
9c9c845a7b522152bd8c9c849c9c63525a6342521852529cd6d600ffef42001831a59c7bcebdce
e7e7e7efeff7ffffd6efefe7ffffe7eff7efffffdef7f7f7f7ffe7f7ffe7f7f7deefffeffff7de
6300fff7ffcee7e7efffffdef7f7eff7dee76321d67318de4a10ef6b08d65218d67310b55a08ff
7b18efe7e7def7ffdeffffd6fff7efffe7ffffffb5e7ffcef7ffb5efffe7efffd6fff7fff7f7ef
efffe7ffffe7f7ff21b5ff21b5d6b5bddead7373526b8408103142425aadadc6e7ffffcef7f7d6
f7f7e7fff7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7c66b4abd946bfffffff7
ffffffffffffffffffffffffffffffffefb5d6ffa5ffffbdffff94c6ff6bceff4abdff7bbdff63
b5ff4a9cef52adff39adff528cff2973ff18108cd6efffeff7f7def7ffd6f7ffdef7ffffffe7ef
ce84ffb54affad21f79c188cd6f74ab5ff4a9cff52adff399cff429cff3984ff319cff2984ff18
6bef0029e70029d60021d60031ce189439188c214a8c42e7ffffdeeff7e7f7efdefffff7fff7bd
6329d6946bfff7efffffffffffffb5dee763bde7adefffbdffffbdffffadffffb5ffffb5ffffb5
ffffa5ffffb5ffffadffffadffffb5ffffadffff9cf7ff529cb56b7b8ce7f7ffe7fff7e7f7ffe7
f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f78cc6ff5a8cff426bff1842ff0039ff0031ff00
39ff0029ff0031ff0031f71042f71042e7296bde5284cedef7fff7eff7e7f7ffe7f7f7e7ffffe7
f7f7e7f7ffe7f7f7e7ffffe7f7f78cbdff528cff4273ff1042ff0029ff0031ffde9463ffefd6ff
ffe7f7f7cecea584ffefc6ffffd6ffffdef7ffcef7efbdd66b4affe7b5ffdeb5ffd6adffd6b5b5
3939949c94def7f7efffffe7f7ffefffffe7f7fff7f7ffdee7ff3142bd0018d60031e70018de00
29ef0839ff104aff0039f73942c6945a08c66310b54a08b54a00942900a531008421007318005a
0800e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f79cc6ff5a8cff316bff0842ff10
39ff0839ffffded6fffff7ffffffe7f7e7ffffffffefdeffffefeff7e7ffefd6ffe7d6ffd6c6ff
efd6ffd6bdf7e7cee7c6b5efadad948484ffefffe7f7ffe7f7efeffff7d6f7ff9cceff528cff39
6bff1842ff0029ff0039ffffd6d6fff7effffffffffff7fff7efffffeffff7e7ffefe7ffefdeff
e7d6fff7deefd6b5f7dec6ffefcef7d6cead9c94949494f7ffffe7ffffdef7f7efffffeffff79c
c6ff5a8cff316bff0842ff1039ff0839ffffded6fffff7fffff7fffff7f7f7e7ffffeffff7eff7
efdefff7def7efdeffefdef7e7ceefdec6f7dec6f7d6c6bda59c949494e7f7ffe7f7ffe7f7f7e7
ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7ff6b29eff7effff7ffefefeff7f7fff7ffefff735aff
ded6e7fff7e7ffe7deffcede8c5239ff8c00ff8431ff7bff5a18e7f7ffe7f7f7e7ffffe7f7f7e7
f7ffe7f7f7e7ffffe7f7f7ff6b29ffffeffffffffffff7fffff7fffff7fffff7fffff73131f7b5
f7ff2931ff0808ff184ae71829ff1010ff0818f70018e70808ff0800de2921c6e7efefff6b31e7
f7efeff7f7e7f7ffe7f7f7e7ffffe7f7f7e7ffff00d6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ff
d6efefe7f7ffd6eff7e7ffffd6eff7ffffffdef7ff84f7ef5abdbd6b395252a5ef9494c663c6ce
5a948c4a182129294a31639439bdff4a524aa5a5a5bd9ca594636b945a6b18948ce7ffff00fff7
ceffffadd6d6314a4ae7eff7eff7ffefffffd6e7e7e7ffffdef7f7def7f7e7e7f7e7f7ffdef7ef
e7f7ffdeefe7de6308bd5a00e77b00de6300de5a00a56b00bd8c106bef8429f7ad31f76b29ce73
21b5393194219c6b08eff7eff7eff7f7eff7deffdef7f7f7deefefd6f7ffeff7f7f7ffe7def7d6
f7f7ffd6f7ffefffffa5e7f7def7ff08b5d6215a7b00adde00d6de6bceef315a7b100829b5a5bd
def7ffceffffceefe7e7f7f7d6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffc65a08
efbd73f7fff7e7ffffefffffffffffffffeffffffff7ffffc6efff73c6ff9cc6ff9cadff84c6ff
63b5ff94adff5aadef84bdff6ba5f74a73e7849cce6b8cf7ded6ffdeffffdef7f7def7f7cee7ef
efffffffffd6efce8cefa542ffb531ffbd29add6e76bbdff6bc6ff4aadff5ab5ff4aa5f74aadff
31a5f739adff3184ef104aff0031ce0021d60021bd18a54239a539b5f7b5defff7eff7ffeffff7
deffffe7efe7b55a29ce845affffeff7ffffffffff94c6d673deff8cd6f7a5ffffadffffbdffff
b5ffffc6ffffb5ffffc6ffffb5ffffbdffffadffffd6ffffa5f7ffbdf7ff52a5b5737b8ccedede
eff7f7d6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ff84bdff6b9cff3963ff214aff
0839ff0039ff0031f70029ff0031f70031f70831e7184aef2963d65a94d6cee7fff7f7f7d6f7f7
e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ff84b5ff5a9cff2952ff1842ff1842ff0031f7
c67342ffffefffffefffffef946352ffffeff7efcefff7d6e7efcefff7d6b55a39ffffc6efe7ad
e7e7adefd6adad4a42848484f7eff7def7ffe7f7ffd6eff7e7f7efdeefefd6efff10319c0839e7
0052de2152ff0839ff0839ff0031f70031ff3131ce9c5a10b55200bd5a08b55a08ad4200943900
9429007310006b0800d6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ff94bdff6b9cff
2963ff184aff1039ff1042ffffc6c6fff7e7ffffeffffff7ffefdeffffefffffefffded6ffefde
f7efd6ffefcee7e7ceffd6bdffdec6f7bdaddeada5849494cee7efdef7ffeff7f7e7f7e7d6f7ff
8cbdff529cff2963ff214aff0029ff0039fff7c6bdfffffffff7efffffeffffff7ffefe7fff7ef
fffff7ffe7d6fff7e7ffefd6ffefd6f7debdf7d6bdf7cebdbda59ca59c9cdeefefd6eff7e7ffff
deeff7e7f7f794bdff6b9cff2963ff184aff1039ff1042ffffc6c6fff7e7fffff7ffffffffefde
fffff7ffefdeffffefffe7d6ffefdeffd6c6ffe7ceffe7ceefd6bddeb5a5d6b5b5847b84deeff7
d6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffef5a21e7fff7efefffefffffd6eff7
deffdeff5a42fffff7def7ffcefff7c6f7ceff945aff8c42f79429de9429ff6308d6f7f7e7f7ff
d6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffff5218ffffeffffff7ffffefffffeffffffff7ffef
ffffe72129f7b5ffff1029ff0818ff1042ef0010ff0821ff0018f70810f71000ff0800de3118ce
deefefff7b39deefe7e7f7f7d6f7f7e7f7ffd6efefe7f7ffd6efef00e7ffffe7f7f7e7f7ffe7f7
f7e7ffffe7f7f7e7f7ffe7f7f7e7f7ffd6ffffd6f7f7ffefffcef7ff52ffff52f7e74a314a29bd
ff39b5efd6cef7dea5bd29949439def752adf7399cff845a5aad63636b4a4a7b18294239397318
3129fff7adbdce8c7b8473737bdef7ffe7ffffdeefefeff7ffe7ffffd6f7f7efffffdef7f7f7f7
ffdef7ffeff7f7def7ffefffefde6300e7ffffefffffffefffffeffff7f7ef9c84428cff8c5af7
8452f79c52e7ad63e78463b55aad7310e7f7efefffffdef7f7defff7ffe7ffd6ffefdeffffeff7
ffe7f7ffc6ffefffdefffffff7c6eff7ffffffefeff7ffffef7b9cc652849c39b5ff39cede0021
421008296b5273deeff7d6ffffdef7f7fff7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7
ffe7f7f7c65a10bd848c3118de0000ff0800ff3118e7f7ffffffffff3100f70000ff0008ff0808
d6effffff7fff7efffff006b00d6ffffdef7ffffffffa5a5a58c6342eff7fffff7f7deffdeefff
ffe7ffffe7ffffeffff7ffffdee7ce84ffce73ffd65affd639adbdb59cd6ff9cf7ff7bdeff8cd6
ff84d6ff63ceff52ceff5aceff6bc6ff3973ff295af70029de0031d621a542319c39deffdedef7
ffe7efffeffff7c6efe7effff7b56331d69463ffffe7f7ffffffffff94d6de6be7ff7bceef63d6
de9ce7ef9ce7efb5f7ffb5ffffc6ffffc6ffffceffffbdffffc6ffffdeffffbdffffbdffff73bd
d6636b7bcedee7e7efefe7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f79cceff6b94
ff527bff2952ff1852ff0839ff0839ff0031ff0042ff0031f71039f71852ef397be75a94d6e7ff
fff7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7a5ceff5a94ff5273ff214a
ff294aff1042ffc67331b57b52c67b4ade8452e76b39e77b4ace7b4ad67b4ac6844ad67342ef84
5aad6339bd734ace734abd634ad6524aeff7efd6f7ffefffffdeefffe7ffffe7ffe7efffe7deff
ff215aad215aef1873ff2163ff1052ff1052ff005aff0031ff3131f79c5229ce6b08b55200b563
00a54a00b55a10ad4a18942908731000e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7
f7adceff6b9cff397bff2152ff184aff0839ffffc6ceffded6ffd6ceefd6cef7cec6ffd6cee7c6
bdffd6ceefb5a5efbdadf7c6b5c6bd9ce7bda5bdad94cebdadceadadd6f7efe7ffffefffffe7f7
f7effff7d6f7ff9cceff5294ff3173ff1852ff1042ff0842ffffc6c6f7d6ceffd6ceffd6cedec6
bdf7d6cef7cec6e7bdb5efc6bddeb5a5e7c6b5deb59ce7bda5dead94ceada5ceb5b5f7efefeff7
ffe7f7ffe7ffffe7f7f7e7f7f7adceff6b9cff397bff2152ff184aff0839ffffc6ceffded6ffd6
ceffd6cef7cec6f7cebdefc6bdf7cebdf7cebde7b5a5efc6b5debdadceb59ce7bda5d6ad9cd6ad
adfff7f7deeff7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7ff6b39e7fff7efef
f7e7ffffd6f7ffbdffdeff6b4ad6f7deffe7fff7efffffffffdeefe7fff7f7ffeff7ffffffefef
ffe7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7ff7339ffffe7ffffffffffffffff
f7fffff7fffffffffff7fffff7ffffe7ffffffffffffffffffffffffffffe7ffffefffffdeffff
f7ffffffefefe7ffffd6f75210e7ffffdef7ffe7ffffe7f7f7e7f7ffe7f7f7e7f7ff00d6efefe7
f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffb5efe7eff7effff7de8c7b738c294a944a7308
ffff31dede42315239c6d68cb5dec6b5f739528c39639cadefffffefff8c4a7b391839b59cb5ff
ffff10ffdeffffff00ffff00848c846b73fff7fff7ffffd6f7f7d6eff7def7f7def7f7efeff7e7
e7fff7f7ffefdef7e7ffffd6e7f7d6e7ffdef7efd67300deefffe7f7efdef7efe7ffefdef7e7ce
8c42ad7318e78c21e77321ce7b39bd8431de8418ad6b31ffe7d6eff7ffe7f7ffd6efefe7f7ffd6
f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6e7e7eff7ffdef7f7e7f7ffdeeff7deefef9cadad6b
7b7b6b638c636b528cad5a84a54a8c9c73e7eff7f7f7ffefefffd6efe7effff7efffffe7f7f7de
efefe7f7f7def7ffe7f7ffbd6310ce947bffffff3108f7d6fff7ffffffffffffffffffdeffff29
00ff2908dee7ffffd6f7ffdeffffdeffff215a00deefffdeffffdeffffcead6bad6329e7f7ffef
f7f7def7ffdee7efeff7ffdef7ffefffffe7e7d6efdeadffc67bffde84ffce7bffd67bdebd8cd6
ded6b5e7ff9ce7ff8cd6ffa5e7ff52e7ff63c6ff63c6ff6bbdff63adff2173ef0039c639b5525a
946bd6efe7d6ffffe7ffefefefe7deeffff7ffefc66b31bd8c52fff7e7fffffff7ffffa5ceceb5
ffff94f7ffadffff73f7ff7bf7ff73cede94d6efbdefffdeffffd6ffffefffffeff7ffdeffffef
ffffd6ffff7bc6d65a6b6bc6adcef7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7
f7ff8cb5ff739cff4a6bff395aff2142ff1842ff1042ff0039ef1031ff0021ff0031ff214aff39
63de7b94e7d6d6fffff7f7d6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ff8cb5ff73
9cff4a6bff395aff2142ff1842ff1042ff0039ef1031ff0021ff0031ff214aff3963de7b94e7d6
d6fffff7f7d6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffe7efefe7f7ffdef7fff7
ffffdee7e7ceefff217bef0073ff086bff086bff105af71052ff004aff0842ff5242bdbd5a31e7
5a00e75a00c65200bd5208ad4a00ad4a00a54200b54200d6efefe7f7ffd6f7f7e7f7ffd6efefe7
f7ffd6f7f7e7f7ff8cb5ff739cff4a6bff395aff2142ff1842ff1042ff0039ef1031ff0021ff00
31ff214aff3963de7b94e7d6d6fffff7f7d6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7
f7ffdee7e7effff7deffffd6f7ff9cc6ff73a5ff426bff295aff1039ff1042ff0842ff0842ff00
29ff0029ff0831ff2142ff316bd66b9ce7c6deffefffffdeefe7def7f7d6f7f7eff7ffd6efefe7
f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ff8cb5ff739cff4a6bff395aff2142ff1842ff10
42ff0039ef1031ff0021ff0031ff214aff3963de7b94e7d6d6fffff7f7d6efefe7f7ffd6f7f7e7
f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7f7efffffe7f7efdee7e7efffffeffff7e7f7f7f7
5231f7f7efc6ffefbdefffe7eff7eff7def76b31ffeff7ffe7cee7ffffbdeff7e7f7ffceefefde
fff7def7ffd6eff7d6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffff6329ffffe7ff
fffffffff7f7ffe7ffffffffffff525a394a4a315a5a4a525242525242524a395a5a425a5a425a
5a42634a29fffff7fffff7ffffdef7ffefff6329deefefdeffffd6efefe7f7ffd6f7f7e7f7ffd6
f7f700e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7ffffe7efefdef7ff634263
63bdde399cce8c4a8c52cee7ffffffbdffff00fff773ffffbdffff08ffff42f7f76b395a637bad
63f7ff7b426321efd6c67b8c008c7befffff5af7f7ad9ca5f7eff7eff7ffd6efefdeffffdef7f7
efffffeff7f7e7ffffeffffff7f7ffdeffffe7f7ffdef7ffffffffde6b00efeff7e7f7efefffff
ceeff7d6f7fff7ded6ffffffdeefffe7ffffcef7efffffefffffe7efe7b5deffffc6f7ffcee7ff
e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7f7e7f7ffefffffe7f7f7efffff
efffffdee7efb5c6c694949c7b8c63d6f7947bad427b9c638c948ceff7f7efffe7e7f7f7e7f7f7
f7ffffe7f7f7eff7ffdeeff7efffffe7f7ffce7308d69473fff7ffefffff3108ffe7ffffffffff
ffffffd6ffff1008d6086329107b00187310105a08186339d6ffdeefffffe7ffffefffffcead63
bd7331e7f7fff7ffffd6f7f7eff7ffe7f7ffe7ffffeffffffffff7fff7ceffefb5fff7adffefce
ffefadffdea5dee7adcef7d69cf7e79cffef8cf7efd6e7f7bdcef78cffff6befff84e7ff5aceff
4a94ef21bd42c6f7d6f7ffffdeffffdeffeffffff7def7fff7fff7bd5a29ce9c5affffe7ffffff
efffffadd6cea5ffffadffff9cffff94ffff8cffff9cffff8ceff78cdee784dee79ce7ef94e7ef
c6ffffa5ffffceffff9cf7ff84e7ef638c84bdceded6eff7e7f7ffe7f7f7e7ffffe7f7f7e7f7ff
e7f7f7e7ffffe7f7f79cceff6b9cff5284ff295aff215aff2163ff428cff398cff1052ff0031ef
0042ef0852ef3173de6b9cdedef7fff7fff7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffff
e7f7f79cceff6b9cff5284ff295aff215aff2163ff428cff398cff1052ff0031ef0042ef0852ef
3173de6b9cdedef7fff7fff7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7f7ffff
e7f7ffe7f7ffeff7f7eff7f7ceefff4294f7007bff218cff1873ff2973ff1863ff086bff004aff
395ace6b6331e76b10de5208de5208de4208de4a08ce3908ce4a08bd4208e7f7ffe7f7f7e7ffff
e7f7f7e7f7ffe7f7f7e7ffffe7f7f79cceff6b9cff5284ff295aff215aff2163ff428cff398cff
1052ff0031ef0042ef0852ef3173de6b9cdedef7fff7fff7e7f7ffe7f7f7e7ffffe7f7f7e7f7ff
e7f7f7e7ffffe7f7f7f7ffffefffffefffffceefffadd6ff739cff5284ff295aff185aff216bff
428cff297bff105aff0031e70042ef104aef397be76b94e7d6efffeffff7effff7def7f7e7ffff
eff7ffe7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f79cceff6b9cff5284ff295aff
215aff2163ff428cff398cff1052ff0031ef0042ef0852ef3173de6b9cdedef7fff7fff7e7f7ff
e7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7cefff7cef7efdefff7e7f7eff7ffffeff7f7
f7f7ffefeff7ff734afff7deeffffff7e7ffff6b39f76b29ff6308ff6b39c66b52e7e7d6e7ffff
eff7ffefffffdeefefeff7ffdeffffe7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7
ff6b29ffffe7ffffffffffeffffff7fffffffff7ef736b52847b6b5a5a427373635a5a4a7b7b6b
525a4273735a636b52848463eff7e7fffff7ffffe7fffff7ff6321eff7f7e7ffffe7f7ffe7f7f7
e7ffffe7f7f7e7ffff00d6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7fff7eff7efff
ffced6ff63397b5aadff39bdff6bb5e7c6ffff18c6ad5a21317b39425239428410217b949c39ff
f7317b8c4294bd4adeefdebdd6d6d6ded6fff7b56b73298473a56b7bded6deffffffdeefefdeff
ffd6ffffdef7f7deeff7eff7f7cef7efe7ffefe7f7efdefff7def7efdeefffe7efded66300ffff
ffefffffbddef7e7ffffffefdee77318ce6300d65a00ce5a08ce6b00d66b00bd6b31de5a00ffef
f7deeff7effff7d6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffdef7f7efffffdeef
efe7f7f7def7f7efffffdeeff7e7f7f7d6deceadc69473944a8cad636b7b631829296b7b73e7ff
e7efffffe7f7f7deefefe7f7ffefffffefffffdeeff7e7f7ffbd6310dead5afffff7e7ffff1800
ef2900f72900de3100ff0008d61810f7105a18e7fff7deffffe7ffffd6ffff107300efffffe7ff
ffdef7ffd6b563b56b29e7f7ffe7efefdef7f7def7f7e7f7ffcee7efdef7f7def7effff7e7f7de
b5ffe7b5f7f7deffffd6ffd694ffce73ffb563f7a54ad68429d67318bd63089c6b1829c64a10de
5221bd3918c65a29ad5a08de00d6ffefefffffc6e7e7def7eff7f7f7e7ffffeff7e7bd6329c68c
4affffeff7ffffffffffadcec6adeff7a5ffffa5ffff94ffffb5ffffadffffa5ffff8cdede9cef
ef94efef9cf7f784d6de7bd6f78ccede73d6e76bc6c68ca594c6ced6deffffd6f7f7e7f7ffd6ef
efe7f7ffd6f7f7e7f7ffd6efefe7f7ff8cceff84c6ff5a9cff529cff4284ff4aa5ff52b5ff5ac6
ff3184ff1873ff186bef297bf7428cde84bde7c6efefe7ffefd6f7f7e7f7ffd6efefe7f7ffd6f7
f7e7f7ffd6efefe7f7ff8cceff84c6ff5a9cff529cff4284ff4aa5ff52b5ff5ac6ff3184ff1873
ff186bef297bf7428cde84bde7c6efefe7ffefd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6ef
efe7f7ffeff7f7e7f7ffdeeff7eff7ffdeeff7d6efff4a8cde218cff1884f72184ff2173ff1873
ff0863ff087bf72994bd6bc6a563b57b73b5846b9c73739c73738c6b7b946b6384525a8c52d6f7
f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ff8cceff84c6ff5a9cff529cff4284ff4aa5
ff52b5ff5ac6ff3184ff1873ff186bef297bf7428cde84bde7c6efefe7ffefd6f7f7e7f7ffd6ef
efe7f7ffd6f7f7e7f7ffd6efefe7f7ffdef7f7eff7ffd6efefd6efffadd6ff94c6ff639cff5294
ff3984ff4aadff5ab5ff52bdff318cff217bf7216be7318cf74a8cef84b5efcedef7eff7f7def7
f7e7f7ffdeeff7eff7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ff8cceff84c6
ff5a9cff529cff4284ff4aa5ff52b5ff5ac6ff3184ff1873ff186bef297bf7428cde84bde7c6ef
efe7ffefd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffefefeff7ffffe7efeff7ff
ffeff7ffd6f7f7bdefefcefffff75a00ff8439d64a10ef634aff7b319cc6e70052f71021fff752
39ffffe7e7efefe7e7f7eff7fff7ffffe7efefcef7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7
ffd6efefe7f7ffff5a21ffffeff7ffeffffff7ffffeffffffffffff7ffffefffffdeffffffffff
effffff7ffffefffffffefffe7efffefffffdeffffffe7ffe7ffffe7f7ffefff7329e7efefdeef
f7d6f7f7e7f7ffd6efefe7f7ffd6efef00e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7
f7f7fff7ffdee7f7deefff5ab5f7f7e7ff52adffc6f7ff4affffcec6cebd9cadffe7e7946b637b
42429c737badf7ff4affffd6f7ff6beff752636bd6ffffe7f7f7f7eff7bdffffdeeff7fffffff7
ffffe7f7f7def7ffe7ffffdeeff7efffffe7eff7e7ffffdef7e7e7f7f7d6f7eff7fff7e7effff7
fff7ce6308ef6b00ef7300de7308ce6300ce7b31ce6329c6cef75a9cff5294ff1863ff296bff29
5affd67331fff7e7eff7f7eff7ffe7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7ef
ffffe7f7ffefffffe7f7f7e7f7f7deeff7e7f7f7e7f7f7ffffffe7efe7b5bdb55263639c9cbd63
638c21214a848c9ceff7ffefffffeff7ffdeeff7efffffefffffefffffe7f7f7d68429ce8c73ff
fffff7fff73929d6deffffe7ffffceffff1000ffc6ffff187b00eff7fffffffff7ffffefffff18
6b00efffffdeffffe7ffffcea563c67b39e7f7ffeff7f7def7f7e7fff7e7ffffdef7ffd6f7f7e7
fffff7fff7fff7e7ffe7d6ffefc6ffefbdffe7adffd684ffd66bffb531ffa500ff8c00e76b00ad
6b1052de5210ef3129e72921de3921ce3910de00d6ffe7e7eff7d6f7f7e7ffeff7f7f7def7ffef
ffefad5a21ce9463fff7efffffffffffffcedede9cd6e7b5ffffb5ffffc6ffffceffffade7f784
b5bd9cced6addee7addee794d6dea5e7ef84cef7a5cee78cced69cbdadad8463ffe7eff7f7ffe7
ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7adefff94d6ff8cc6ff73adff6badff52
adff5aadff429cf75aa5ff398cff4a9cff4a9cff73bdff8ccef7d6f7ffdef7e7e7ffffe7f7f7e7
f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7adefff94d6ff8cc6ff73adff6badff52adff5aadff42
9cf75aa5ff398cff4a9cff4a9cff73bdff8ccef7d6f7ffdef7e7e7ffffe7f7f7e7f7ffe7f7f7e7
ffffe7f7f7e7f7ffe7f7f7eff7f7deeff7efffffeff7ffeff7ffd6efff73ade7428cf71894ff18
84ff188cff1073ff1884ff21b5b54aefad5af7ef10ffff00ffff00ffff00ffff00f7f700e7de18
e7d629decee7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7adefff94d6ff8cc6ff73
adff6badff52adff5aadff429cf75aa5ff398cff4a9cff4a9cff73bdff8ccef7d6f7ffdef7e7e7
ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7eff7deeff7e7f7ffdef7ffcef7ffad
deff8cc6ff6badff6badff5aadff63b5ff52a5ff52a5ff428cff5a9cff5a9cff73b5ff8cc6ffde
f7ffe7f7f7effff7e7f7ffe7ffffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7
f7f7adefff94d6ff8cc6ff73adff6badff52adff5aadff429cf75aa5ff398cff4a9cff4a9cff73
bdff8ccef7d6f7ffdef7e7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7
fff7e7eff7eff7ffeff7ffe7f7ffe7ffffdef7ffff7342ffefe7deffffbdefdeff8c5aadcef729
94ff0039ffff5a39ffffdeefffffdeeff7f7fffff7f7f7f7f7ffcef7f7e7ffffe7f7f7e7f7ffe7
f7f7e7ffffe7f7f7e7f7ffe7f7f7ff7342ffffeffffff7fffffffffff7fff7efbd948c94735ac6
8c7bc684739c6b63b58c7bfff7e7fffffffffffffffff7fffff7ffffffffffffffffefffffefff
6321f7f7f7efffffe7ffffe7f7f7e7f7ffe7f7f7e7f7ff00d6efefe7f7ffd6f7f7e7f7ffd6efef
e7f7ffd6f7f7e7f7ffcef7e7f7f7f7efefff31b5d663b5f7217bbd63bdefffffff84c6cebd94a5
fff7ff9c84848c39426ba5ad31ffff5ae7ff63394263424abdefefffefffdee7eff7f7ffc6d6ef
ffffffe7efefe7eff7d6efefe7ffffd6efefe7f7f7efffffefffffdeeff7e7ffffdef7ffd6f7f7
dee7dee7efffdefff7bd7321c6efffcef7f7d6eff7ffffeff7debdce9463adc6de7bbdff428cff
1873ff216bff186bffb56b21f7f7e7cef7efd6f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ff
d6f7f7e7f7ffdeefefe7f7f7def7f7efffffdeeff7e7f7ffdef7f7efffffd6deefeff7ffd6deff
9c9cc64a4a7ba5a5de5a5a8c1018428c94a5deeff7f7ffffe7eff7cedee7e7f7f7deeff7e7f7f7
b55a29ce945affffffffffffdef7ff2908f7ceffff1800ff0000f7cefff7185a18efffffe7ffff
e7ffffd6ffff085a08e7f7ffdeffffdeffffdebd73bd7331eff7ffeff7efe7fff7d6e7e7e7ffff
d6ffffdeffffd6eff7f7fffffffffffff7ffffe7b5ffefb5ffd694ffde8cffce5affce42ffbd29
ffde39efad84f7e7c6bdffc629ef4a10ce3131d65208bd394ac652cef7deeff7ffdeffffe7fff7
e7e7e7def7ffefffdeb56b29bd7b52fff7f7ffffffffffffefeff7b5d6e794c6d6a5d6de9cd6e7
ade7f794bdceadc6ded6e7fff7ffffdeffffe7ffffc6e7efbddeffbdd6efd6eff7bda584bd7339
ffefdefff7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffbde7ffadd6ff7ba5f7
6b9cef4a7bde4273e7316bd6216bd62963ce2163de296bde428cf7639cefa5c6ffdef7fff7f7ff
d6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffbde7ffadd6ff7ba5f76b9cef4a7bde
4273e7316bd6216bd62963ce2163de296bde428cf7639cefa5c6ffdef7fff7f7ffd6efefe7f7ff
d6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffdeefefdef7f7def7ffeff7ffdeefefdeefff94bdef
84bdff2194ff188cff087bff1894ff31a5de4ae79c42f77b31deb529f7ef18ffff00ffff00ffff
00efff18f7ff6bf7ffadffffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffbde7ff
add6ff7ba5f76b9cef4a7bde4273e7316bd6216bd62963ce2163de296bde428cf7639cefa5c6ff
def7fff7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffdee7efe7f7ffdef7ff
e7ffffbddef7a5d6ff73adef5aa5ef5273ef4a73e7316bce3173de2963d63163e7396bef4a84f7
5a9cef94c6f7d6f7ffefffffdee7efdef7f7d6f7f7e7f7f7d6efefe7f7ffd6f7f7e7f7ffd6efef
e7f7ffd6f7f7e7f7ffbde7ffadd6ff7ba5f76b9cef4a7bde4273e7316bd6216bd62963ce2163de
296bde428cf7639cefa5c6ffdef7fff7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7
e7f7ffdeefefefffffeff7fff7ffffd6deeff7f7ffeff7f7eff7f7e76318e7ffffcef7f7ffffef
ff8c39f78c42ff8c21ff8429de6b4af7f7d6c6fff7deffffd6efefeff7eff7f7ffdef7ffd6efef
e7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffff5a29ffffefffffffffffefeff7d6ffffff
ffefdefffffffff7e7fffffffffffffffff7fffff7ffffffefffdefffff7ffffdefffffffffff7
ffffe7ffffefff6b29deefefe7f7ffd6efefe7f7ffd6f7f7e7f7ffd6f7f700e7f7ffe7f7f7e7ff
ffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7ffefefcefff7c6ffffc6ffffcee7ff63528c42deefc6ff
ffb5deefb594a5ffdee78c636b843952b58ca5a5ffff31e7ff636b63d6f7eff7ffffe7ffffadf7
f7d6f7ffcefffff7e7ffefffffe7f7f7efffffefffffe7ffffe7f7ffefffffe7f7ffd6efffd6f7
ffdef7ffdeffffeff7e7ffffffeffff7ad5a08deefefe7fff7def7ffe7f7ffffffefe78429de8c
18e77b21ff8c10ef8c18f79c18ad6b31e77308efe7efe7ffffefffe7e7f7ffe7f7f7e7ffffe7f7
f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7eff7e7f7f7e7f7f7efffffe7f7ffefffffe7f7fff7ff
ffdee7eff7ffffdeefff9ca5bd4a5273a5adce4a527b21314a8c9cadeff7ffefffffdeeff7e7f7
f7efffffe7f7f7bd6b31e7b55afffffffff7ffffffff3100ffe7ffff0800ef0810de0863181073
08187300106308086300086b08c6ffffffffffe7fffff7ffffe7c673d68c39eff7fff7f7f7e7ff
f7e7f7f7e7f7f7e7ffffdef7f7d6eff7deeff7eff7ffefeff7ffffefffefceffe7adffde84ffd6
73ffbd5affce7bffde94deefd6e7ffffefffef29e74210de2929ce3918de4ad6ffd6defff7eff7
ffe7ffffdef7f7f7f7f7deffffefffefbd7331d69c6bfffff7ffffffffffffffffffffffffffff
ffffffffaddee7a5d6dec6e7efe7ffffffffffffffffffffffeffffff7ffffe7ffffeffffff7ff
ffe7c68cb57329fffff7def7ffe7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7bde7
ff94b5e7849cde5a7bd6527bde426be74a73ef3163de2963ce2152bd2963d62963d65a8cde8cad
e7e7effff7f7ffe7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7bde7ff94b5e7849c
de5a7bd6527bde426be74a73ef3163de2963ce2152bd2963d62963d65a8cde8cade7e7effff7f7
ffe7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7efffffdef7f7e7ffffe7f7f7eff7
ffe7f7ffd6efffc6e7ff63ceff4a94ff4a9cff31c6de52efbd5aef9c5aef9431e7844ae7b531f7
ce29fff718ffff31ffff6bf7ffc6f7fffff7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ff
ffe7f7f7bde7ff94b5e7849cde5a7bd6527bde426be74a73ef3163de2963ce2152bd2963d62963
d65a8cde8cade7e7effff7f7ffe7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7efff
ffeff7ffefffffdeefffc6deff8cb5e773a5de4a84ce5a73ef4a6bde4a73de3163d62963de214a
d63163d63163d65294d67baddedef7ffefffffeff7ffdeeff7e7ffffeffff7e7f7ffe7f7f7e7ff
ffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7bde7ff94b5e7849cde5a7bd6527bde426be74a73ef3163
de2963ce2152bd2963d62963d65a8cde8cade7e7effff7f7ffe7f7ffe7f7f7e7ffffe7f7f7e7f7
ffe7f7f7e7ffffe7f7f7fff7ffefeff7eff7ffdeeff7e7eff7ffffffefefdeffffe7ff6b21ffff
ffefe7e7ceffffefe7f7eff7fffff7efc6f7ffffefd6e7fff7c6f7f7def7f7defff7e7fff7ffff
ffdeefffe7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7ff7331ffffdeffffffffff
ffffffffffffefb59c8c8c735ad6847bbd6b63ce8473c67363ce847bffe7d6d69c8cb57363bd84
6b9c736bad847bbd8c73f7efdeff6b29eff7f7def7ffe7f7ffe7f7f7e7ffffe7f7f7e7ffff00d6
f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffceeff7efffffefded6fffffff7efff6b
bddeffefff00eff75abdade7949ce7ceceb57b8c7b314252848ca5d6ef73e7ff736b6bf7ffffd6
efefd6f7f7f7effff7eff7f7e7f7deeff7cef7f7def7f7d6efefe7f7f7d6efefe7f7f7d6e7efe7
f7f7d6ffffdeffffcee7effffffffff7c6ffffeff7e7c6e77308c6ffffdef7efe7deefdee7efd6
ffffeff7e7cefff7ceeff7cef7ffc6e7ffd6e7ffeff7ffefefded6ffffcee7f7ffeff7d6f7f7e7
f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffdef7f7e7f7ffdeefefe7f7f7d6eff7e7f7f7de
e7efe7f7f7cededeffffffdeefefe7fff7efffff94adb552637b94a5ce313952424a6b8c94a5ef
f7ffdef7ffe7f7ffdeefefefffffb56b39debd5afffff7ffffffffffffefffff1800d61808efef
ffffefffffdeffffefffffefffffefffffd6ffffdefffff7ffffe7ffffe7ffffefc673ce8439ef
ffffe7efe7e7fff7eff7f7eff7f7deefefe7fff7d6efefe7f7f7deeff7e7f7fff7fff7f7f7efef
e7ceffefbdffefa5ffe7b5d6d6bddeefefcefff7def7ffc6e7d639ef4221ef3918d64218c629ef
f7ffcef7efefefffd6e7f7def7eff7f7f7def7ffd6efded6944adead6bffffdefffff7fffff7ff
fff7fffffffffff7fffffffffff7fffff7f7ffeffffffffffff7fffff7efffefffffffffffefff
ffffeff7eff7ffe7efb56bd68c29eff7dec6f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6
efefe7f7ffa5cef79cc6ef7ba5de7badef6b94f773a5ff639cf75a9cff528cef4a94f73984de39
8ce75a94de94bde7cee7efeff7f7d6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffa5
cef79cc6ef7ba5de7badef6b94f773a5ff639cf75a9cff528cef4a94f73984de398ce75a94de94
bde7cee7efeff7f7d6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffdef7ffdef7f7de
efefe7f7f7def7f7efffffdeeff7efffffb5f7ffb5ceff84b5ff52e7c639ff8c52e7ad52cead4a
f79421de8431f7ad4af7ce6bffff84ffffb5ffffc6efe7e7f7efd6f7f7e7f7ffd6efefe7f7ffd6
f7f7e7f7ffd6efefe7f7ffa5cef79cc6ef7ba5de7badef6b94f773a5ff639cf75a9cff528cef4a
94f73984de398ce75a94de94bde7cee7efeff7f7d6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6
efefe7f7ffdef7f7eff7ffdeeff7deefffbdd6ffa5cef77bade76badef6b94ff73a5f75a9ce752
a5f74a8cf7428cf7397bde4294e7529cd68cbde7cee7f7eff7ffdeefffe7f7ffdeefefeffff7d6
f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffa5cef79cc6ef7ba5de7badef6b94f773
a5ff639cf75a9cff528cef4a94f73984de398ce75a94de94bde7cee7efeff7f7d6f7f7e7f7ffd6
efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6fff7d6f7f7c6efefd6f7fff7ffffffefde9c5a39d6
734aff5218ef5a31de5a31e7ffffd6efefffffffffefefd6effffff7f7ceffffcee7f7f7f7ffce
f7dedefff7dee7efe7efffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffff5a21ff
ffe7fffff7ffffefffffefffffffffefe7fffff7ffffdeffffffffffefffffeffffff7fffffff7
ffe7ffffefffffeffffffffffff7ffffe7ffffffff7329deefefdeffffd6f7f7e7f7ffd6efefe7
f7ffd6efef00e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7d6f7fff7e7f7e7fff7
f7e7d6c6ffffceefff52addea59cefef9c9c9c847befc6bdad9494ad5a63c6637badc6d6b5adce
cefffff7f7f7f7f7ffe7f7ffeff7ffd6ffffeff7efb5fff7e7ffffdef7ffe7ffffdef7f7eff7ff
efffffe7f7ffe7f7ffe7fff7e7fff7f7f7f7f7f7d6b57b428c4221bd7b39ff5a00de7300ef6b00
e76310ad6339e7eff7f7f7e7d6f7f7effffffffff7def7ffdefffff7ffdef7ffffe7f7ffe7ffff
e7ffefe7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7f7ffeffffff7ffffe7f7ff
e7f7ffe7f7ffefffffe7f7f7efffffe7f7ffdeefefe7ffefdeffefdef7ff94a5c64a528cb5bdd6
212942394a5ad6deeff7ffffdeefefe7f7f7e7fff7efbd42e7b57bffefffffffeff7ffeff7ffef
d6f7ff1800effff7e7fffff7ffffe7f7efefffffd6f7ffe7efffe7eff7e7eff7ffd6f7f7e7ffff
e7bd6bde8c4aeffffff7f7f7e7fff7f7ffffe7eff7eff7f7e7fff7e7fff7e7f7f7efffffdef7f7
e7fff7deffffdeffffdef7f7efffefefffefe7f7f7d6f7ffdef7fff7efffd6fff739e73918e731
10d63139de31efe7ffdefff7efefffe7f7ffdef7f7ffffffd6f7ffefffeff7ad6bdebd5acec684
c6c6a5cead8cdebd94ceb58cceb59ccead84d6b594e7bd94deb594cea57bd6bd9ccebd8cbdbd94
b5bd94c6bd94c6b5b5cec6adbdbd94efad52e78c29f7ffefbdf7ffe7ffffe7f7f7e7f7ffe7f7f7
e7ffffe7f7f7e7f7ffe7f7f7c6efffaddeffaddeff94ceff8cceff7bc6ff84ceff6bbdff7bc6ff
63bdff6bc6ff63b5ff84ceff94def7d6ffffdeffe7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7
e7f7ffe7f7f7c6efffaddeffaddeff94ceff8cceff7bc6ff84ceff6bbdff7bc6ff63bdff6bc6ff
63b5ff84ceff94def7d6ffffdeffe7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7
e7f7ffdeeff7e7ffffe7f7f7efffffe7f7f7eff7f7eff7efffffffefefefbddee75aefad4aff94
4aefad63dec652e7a531ef8c42e79484debdaddedee7e7fff7effff7f7ffeff7f7e7ffffe7f7f7
e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7c6efffaddeffaddeff94ceff8cceff7bc6ff84ceff
6bbdff7bc6ff63bdff6bc6ff63b5ff84ceff94def7d6ffffdeffe7e7ffffe7f7f7e7f7ffe7f7f7
e7ffffe7f7f7e7f7ffe7f7f7eff7f7eff7f7efffffdeefffd6efffbddeffadd6ff94ceff8cceff
73ceff7bceff63ceff6bceff5ac6ff6bceff63ceff84ceff94d6f7def7ffe7eff7eff7ffe7f7ff
efffffe7f7efe7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7c6efffaddeffaddeff
94ceff8cceff7bc6ff84ceff6bbdff7bc6ff63bdff6bc6ff63b5ff84ceff94def7d6ffffdeffe7
e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7f7f7ffe7f7ffe7ffffbdefeff7ffff
fff7ded6946bffffd6f7fffffff7bdff6b31e7e7fff7ffffd6eff7e7f7f7defff7e7f7ffc6efff
eff7fffff7ffe7ffefdeffefe7f7f7efefffe7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ff
e7f7f7ff7339ffffeff7ffef63634a4a63425252426363524a52396b6b52fffff7ffffe7fffff7
fffff7ffffefffffffffffeffffff7fffff7ffffffffffe7fffffff75a18efffffd6f7ffe7ffff
e7f7f7e7f7ffe7f7f7e7f7ff00d6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6ef
efe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffdee7e7ada5adffdeefdec6ce84737bded6
def7ffffdeffffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7
f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6e7ffd6ffffcef7eff7ffe78c6b4afffff7fffff7f7ff
eff7efdefff7c6ffde948c5a21f7f7ded6eff7def7fff7ffffd6efefe7f7ffd6f7f7e7f7ffd6ef
efe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7
ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6e7efe7f7f7def7ffe7f7f7d6e7efefffffcede
deadbdc6525a7b949cbd4a5a73dee7ffdeefffe7f7ffefffffdef7f7deb56bd6a552b58c42c694
42b58c42bd9442ad8439bd8c42b58439bd9442b58439bd9442b58c39c69442b58c42c69c42bd84
429494b5737ba5ad8439ce9439f7efefd6f7fff7ffefd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7
ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6e7ffd6fff7ffde
ffe7f7ff18de3118d631d6fff7efefffe7efefe7f7f7d6eff7def7ffdee7effffff7fff7c6ceb5
84de9431de9429bd7318c67b18bd7310ce7b18bd7318c67b18b56b21bd7321b56b21bd7321ad6b
18bd6b21ad6b18b57321ce6b009c734a425ac64a52de945a31de9439f7ded6deffffd6efefe7f7
ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffc6e7ffceefffa5ceff8cb5ff6b9cff73adff6ba5
ff6ba5ff5a94ff5aa5ff5a9cff84bdff9cceffc6efffd6efffe7f7ffd6efefe7f7ffd6f7f7e7f7
ffd6efefe7f7ffd6f7f7e7f7ffc6f7ffc6efff9cc6ff8cb5ff739cff7bb5ff6ba5ff6ba5ff5a8c
ff5a9cff5a9cff7bc6ff94d6ffcef7ffdefffff7fff7d6efefe7f7ffd6f7f7e7f7ffd6efefe7f7
ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7
f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7
ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffc6f7ffc6efff9cc6ff8cb5ff739c
ff7bb5ff6ba5ff6ba5ff5a8cff5a9cff5a9cff7bc6ff94d6ffcef7ffdefffff7fff7d6efefe7f7
ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffcee7efe7ffffdef7f7e7f7ffd6e7ffceefff9cc6
ff84bdff73a5ff73adff6b9cff739cff6394ff6ba5ff6b9cff7bb5ffb5e7ffceefffd6effff7f7
ffe7efefeff7f7d6f7f7def7f7d6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffc6f7
ffc6efff9cc6ff8cb5ff739cff7bb5ff6ba5ff6ba5ff5a8cff5a9cff5a9cff7bc6ff94d6ffcef7
ffdefffff7fff7d6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6e7e7def7ffd6f7
ffd6eff7e7efeffff7dec69463ffffd6ffffd6ffe7bdb56342ffffe7def7e7e7f7f7deeff7e7f7
ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6ef
efe7f7ffd6f7f7e7f7ffce5a29ffffe7ffffd65a846b4a5a526b6b5a6b6b4a6b73426b735af7ff
e7fffffffffff7ffffeffffffffffff7fffff7ffffe7f7ffffffffffffffffffffded65239d6ff
f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6f7f700e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7
ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7f7ffffefeff7d6c6ceb5
9cadf7eff7ffffffcee7e7d6f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7
f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7f7efffeff7fff7fff7ffffe7a58c63ff
ffd6ffffeffffff7ffffe7ffefadffe794b56b31ffffefefefffeff7ffefe7efe7f7ffe7f7f7e7
ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7
f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7f7e7f7f7efffffe7f7f7e7
f7f7efffffefffffd6e7e79cadc663738c8c94adefffffd6e7efe7f7ffd6efefefffffffb55ae7
9439de8c31d67b21d68429ce7321d68429d67b21e78421de7b21de8429d66b10ce7310bd6308c6
6b08bd5a009c73186352a56352c68c6339debd39f7ffcedef7ffeff7efe7f7ffe7f7f7e7ffffe7
f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7
f7ffceffdeffefffe7f7f721ef3121de39efffffeff7f7f7fff7e7f7f7e7ffffdef7ffe7f7fff7
fff7ffffe7d6c69cf7a54ae78c31e79439de8429de9431de8429e79439de8429e79429de8421de
8c29d67b18ce8418bd7310c67b10bd6b08c673219473526373ce424ab5946b4aefad6bfff7f7de
fff7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7c6def7bddeffbddeff94c6ff8c
bdff7badff84b5ff73adff73a5ff6b9cff84b5ff8cc6ffadd6ffb5def7deefffe7f7f7e7f7ffe7
f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7bde7f7b5e7ffbddeff9cc6ff94b5ff84adff84
b5ff73adff84a5ff739cff84bdff84c6ffa5deffb5e7f7def7f7e7f7efe7f7ffe7f7f7e7ffffe7
f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7
f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7
f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7bde7f7b5e7ffbd
deff9cc6ff94b5ff84adff84b5ff73adff84a5ff739cff84bdff84c6ffa5deffb5e7f7def7f7e7
f7efe7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7def7ffe7f7f7eff7f7deefefde
efffcee7ffb5deff8cc6ff94bdff84adff8cb5ff73adff7badff73a5ff8cb5ff7bb5ffbde7ffbd
e7f7deefffe7eff7f7f7f7eff7f7e7ffffdef7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7
ffffe7f7f7bde7f7b5e7ffbddeff9cc6ff94b5ff84adff84b5ff73adff84a5ff739cff84bdff84
c6ffa5deffb5e7f7def7f7e7f7efe7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7
ffffd6eff7def7ffdef7fff7fff7f7efd6a5845ac69463ce8463f77b63d66352ffefdeeffff7de
ffffdeffffcef7ffe7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7
ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7de7352fff7d6fffffff7fff7fffffffffffffffff7ff
ffefffffe7fffffffffffffffff7fffffffffff7ffffffffffffffffe7effff7ffffffffffe7ff
ffcede6342efffe7e7e7ffe7f7ffe7f7f7e7ffffe7f7f7e7ffff00d6f7f7e7f7ffd6efefe7f7ff
d6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffdef7f7
efffffdedee7efe7efefeff7eff7f7d6efefdeffffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ff
d6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffdeefffefffffeff7e7
ffefcebd6b4af7845ace6b42bd6339a5734abd8442ce8439a56331f7dec6f7f7ffe7effff7f7ff
d6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7
e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffdef7f7efffff
deeff7e7f7ffd6eff7eff7ffe7f7f7efffffd6efff94a5b56b7b84efffffd6eff7e7ffffdeefef
def7efffde94ffd68ce7b573efc673efbd73efc67be7b573f7c673ffbd73ffc67befb56bf7bd6b
efad63e7b56bd69c5adead5a9c7b5a84949c6b848cad946bf7cea5ffffffcee7ffeff7ffd6f7f7
e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ff
d6efefe7f7ffdef7f7d6ffdef7efffe7ffef21c63129ce39def7e7f7fff7eff7efeff7f7deeff7
def7ffceeff7e7f7ffe7efe7e7e7deefbd7befc684e7b573efc67befb57bf7c684e7b57befbd7b
f7bd6bffc67befb56bf7bd6befad63efb56bdea55ae7b55ab5845aad9c7b848cbd636bb5948c6b
f7e7bdefeff7e7ffefd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffc6d6dedeefff
c6deffc6deffa5ceffadd6ffa5c6f7add6ffa5bdffb5ceffadceffbddeffb5d6f7cee7f7cedee7
eff7f7d6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffbdd6ded6efffcee7ffc6deff
adc6ffb5d6ffa5c6f7add6ffa5bdffb5ceffa5ceffb5deffaddef7ceeff7d6e7e7eff7f7d6f7f7
e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ff
d6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efef
e7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ff
bdd6ded6efffcee7ffc6deffadc6ffb5d6ffa5c6f7add6ffa5bdffb5ceffa5ceffb5deffaddef7
ceeff7d6e7e7eff7f7d6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffcef7ffe7ffff
deefe7e7efefd6deefdeefffc6deffbddeffadceffb5d6ffa5c6f7adceff9cc6ffadd6ffa5ceff
add6ffb5d6f7cee7f7cedee7e7eff7efeff7eff7f7d6efefdef7ffd6f7f7e7f7ffd6efefe7f7ff
d6f7f7e7f7ffd6efefe7f7ffbdd6ded6efffcee7ffc6deffadc6ffb5d6ffa5c6f7add6ffa5bdff
b5ceffa5ceffb5deffaddef7ceeff7d6e7e7eff7f7d6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ff
d6efefe7f7ffefffffe7f7ffd6e7efe7f7ffdeeff7ffffffefe7cefff7deceffd6ffffefefdece
ffffffd6fff7def7f7dee7efefefffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ff
d6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffff5208ff7b29f76b29ff6b39ff6331
ff5a29f75a21ef6321ff7329ff7321f75210ff6321ff6b21ff5a18ff6321ff6b21ff5a31ff5a39
ef4a39ef5a31ef7339f76b29f7e7bdfffff7d6f7f7e7f7ffd6efefe7f7ffd6efef00e7ffffe7f7
f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7
ffe7f7f7e7ffffdef7f7efffffffffffeff7f7deefefe7ffffcef7f7e7ffffe7f7f7e7f7ffe7f7
f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ef
ffd6eff7defff7effff7eff7d6f7ffdeefffe7d6ffdefff7e7fff7d6ffffdef7efbdffffffe7ff
ffd6f7ffd6f7ffe7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7
ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7
f7efffffe7f7ffefffffe7f7ffe7f7ffe7eff7e7f7f7e7f7f7efffffdef7f794a5addef7f7efff
ffd6efe7f7ffffdef7efffffffefffefeff7efefffeff7fff7efffefefffefe7f7efefffefe7f7
efefffefe7f7efefffefe7ffefefffefe7ffeffff7ffdef7ffdeffffefdee7ffffffeffff7cef7
efdeeff7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7
f7e7ffffe7f7f7e7f7ffe7f7f7e7f7ffd6ffe7f7f7ffdef7ef5ad66b52ce63def7efe7f7eff7ff
f7eff7f7e7f7ffdef7ffdef7ffdeefffe7ffffe7f7f7eff7e7eff7e7efffefeff7e7f7ffefeff7
e7f7ffefeff7e7f7ffeff7f7e7f7ffeff7f7e7f7ffeff7f7e7f7ffeff7f7e7fffffffff7e7f7ff
ffd6e7f7e7f7e7fffffff7ffffefffefe7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7
f7eff7f7eff7ffefffffdeefffd6efffd6efffdef7ffd6f7ffe7efffe7efffe7f7ffdef7ffdef7
ffdeeff7e7f7f7eff7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7f7f7eff7
ffeff7ffdeefffdeefffd6efffdef7ffd6f7ffdeefffdeefffdef7ffd6f7ffdef7ffdef7f7efff
ffeffff7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7
f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ff
ffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7
f7e7f7ffe7f7f7e7f7f7eff7ffeff7ffdeefffdeefffd6efffdef7ffd6f7ffdeefffdeefffdef7
ffd6f7ffdef7ffdef7f7efffffeffff7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7
f7e7ffffe7ffffefffffe7efefeff7f7eff7ffe7f7ffdeefffdef7ffdeefffdef7ffd6efffd6f7
ffd6efffd6f7ffd6efffd6f7ffd6efffe7f7ffe7f7f7efffffeff7f7e7f7ffdef7ffe7ffffe7f7
f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7f7f7eff7ffeff7ffdeefffdeefffd6efffdef7
ffd6f7ffdeefffdeefffdef7ffd6f7ffdef7ffdef7f7efffffeffff7e7ffffe7f7f7e7f7ffe7f7
f7e7ffffe7f7f7e7f7ffe7f7f7e7fff7e7fff7e7ffffe7f7ffdee7f7eff7fff7fffff7fff7deff
ffeffffffff7ffefeff7e7f7f7deeff7f7f7fffff7ffe7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7
f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7ffffffe7fff7d6ef
f7deefffeff7ffefefffefffffd6f7f7def7f7def7efe7f7f7efffffefffffdef7efe7ffffdef7
efdeffe7c6ffefe7fff7e7fff7f7ffeff7efded6ffffb5f7ffe7ffffe7f7f7e7f7ffe7f7f7e7f7
ff00d6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6
efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6efefe7f7f7deeff7e7ffffceeff7d6f7f7d6efefe7
f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6
f7f7e7f7ffd6f7ffd6ffffcef7f7def7f7e7efeffff7f7f7f7ffeff7ffc6e7efe7f7f7effff7e7
f7f7cee7efceefffc6eff7deffffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6
efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7
f7ffd6f7f7e7f7ffd6e7efe7f7f7d6eff7e7f7ffdeefefe7f7ffdeeff7e7f7f7cee7deefffffce
efefe7f7f7d6e7e7e7fff7ceefdeefffffd6e7ffdeefffd6efffe7f7ffdeefffe7f7ffd6efffe7
f7ffd6e7f7def7ffd6efffdef7ffd6e7ffdef7ffd6f7ffe7f7fff7f7e7deefffd6efffefeffff7
f7dedeffe7cef7ffe7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7
f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffdeefffe7ffffefefffefffffadf7c6b5ffd6ef
ffffeff7ffe7efefe7f7f7d6eff7def7ffcee7f7def7ffd6efffe7ffffceefefdef7ffcef7ffde
ffffceefefdef7ffcef7ffdeffffceefffd6f7ffcef7ffd6f7ffc6e7f7d6f7ffc6efffd6f7ffde
e7f7eff7efefefdef7ffffd6fff7deffffd6eff7e7f7efd6efefe7f7ffd6f7f7e7f7ffd6efefe7
f7ffd6f7f7e7f7ffe7e7e7eff7f7def7f7def7f7d6efefe7ffffeffff7effff7e7e7efeff7ffde
f7f7e7f7ffd6efefe7f7f7def7f7f7fff7d6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7
f7ffe7efefeff7f7def7f7e7f7f7d6e7efe7fff7defff7e7fff7e7efefeff7ffdef7f7e7f7ffd6
efefe7f7f7def7f7eff7f7d6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7
f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6
f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7
f7ffd6efefe7f7ffd6f7f7e7f7ffe7efefeff7f7def7f7e7f7f7d6e7efe7fff7defff7e7fff7e7
efefeff7ffdef7f7e7f7ffd6efefe7f7f7def7f7eff7f7d6efefe7f7ffd6f7f7e7f7ffd6efefe7
f7ffd6f7f7e7f7ffd6eff7e7ffffeff7f7eff7f7e7efe7efffffefffffefffffdeefefeff7f7de
f7f7e7fff7d6efefe7fff7d6f7f7e7fff7d6eff7e7f7ffdef7ffefffffdeefefe7f7ffdef7f7e7
f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffe7efefeff7f7def7f7e7f7f7d6
e7efe7fff7defff7e7fff7e7efefeff7ffdef7f7e7f7ffd6efefe7f7f7def7f7eff7f7d6efefe7
f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffcee7dee7f7f7d6eff7efffffdeeff7def7ffce
eff7d6eff7dee7f7e7eff7f7f7ffeff7ffdef7f7d6ffffcef7f7def7f7d6efefe7f7ffd6f7f7e7
f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffde
efdeeffff7def7eff7f7fff7e7efffeff7eff7f7d6efe7d6efefe7ffffdef7f7e7ffffdeefefe7
ffffdeffffe7f7f7efeff7e7efffefdeffeff7ffe7e7e7f7ffffcef7ffceefffd6efefe7f7ffd6
f7f7e7f7ffd6f7f700e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7
e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffdeeff7efffffe7f7ffd6efefdef7f7e7ffff
e7ffffe7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7
e7f7ffe7f7f7e7ffffe7f7f7eff7f7e7f7f7efffffe7f7fff7ffffe7efffe7f7ffdeefffe7f7ff
deefffe7f7ffe7f7ffe7f7ffe7efffeffffff7ffffe7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7
e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffff
e7f7f7e7f7ffe7f7f7e7ffffe7f7f7efffffe7f7f7e7f7f7e7f7f7efffffefffffefffffeff7ff
e7ffffdef7f7efffffe7ffffdef7f7efffffe7f7f7e7f7ffefffffe7f7ffe7f7ffe7f7f7e7f7ff
e7f7f7eff7ffe7f7ffeff7ffeff7f7eff7ffeff7f7eff7f7e7eff7eff7f7e7eff7f7ffffd6f7e7
e7ffefe7f7f7e7efffdee7ffe7f7ffe7f7ffe7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffff
e7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7efffe7f7ffe7efffe7efff
e7ffffdefff7e7f7ffdeefffefffffe7f7efe7f7ffe7f7f7e7f7ffdef7ffdef7ffdef7ffeffff7
eff7f7f7ffffeff7f7effff7eff7f7effff7eff7f7e7ffffe7f7ffe7ffffe7f7ffe7ffffdef7f7
e7ffffe7f7f7e7f7ffe7ffffeff7eff7fff7deffffceefffeff7ffdef7efe7f7ffe7f7f7e7ffff
e7f7f7e7f7ffe7f7f7e7ffffe7f7f7eff7f7e7f7f7e7f7f7e7f7f7e7ffffeffff7f7fff7eff7ef
f7ffffeff7f7eff7f7def7f7e7ffffe7f7f7efffffeff7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ff
e7f7f7e7ffffe7f7f7effff7eff7f7effff7eff7f7effff7effff7effff7e7f7efeffff7e7f7f7
eff7f7e7f7f7efffffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffff
e7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7
e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ff
e7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7effff7eff7f7effff7eff7f7effff7effff7
effff7e7f7efeffff7e7f7f7eff7f7e7f7f7efffffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffff
e7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7f7e7f7f7eff7ffe7f7f7eff7f7e7f7f7efffffeff7f7
effff7eff7f7effff7eff7f7effff7e7f7f7e7fff7e7f7f7eff7ffe7f7ffefffffe7f7f7effff7
e7f7f7e7f7ffe7f7ffe7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7effff7eff7f7
effff7eff7f7effff7effff7effff7e7f7efeffff7e7f7f7eff7f7e7f7f7efffffe7f7f7e7ffff
e7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7f7ffffefffffe7f7f7deeff7
efffffdef7ffdef7ffdeffffceffffadf7f7c6f7ffd6eff7e7ffffd6f7f7def7ffefeff7e7f7ff
e7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7
e7ffffe7f7f7e7ffffe7ffffeff7f7efeff7f7f7f7efefefeff7f7efffffefffffe7f7ffdeeff7
deeff7efffffe7f7ffe7f7ffe7f7ffeffff7e7ffeff7fff7e7fff7f7ffefe7ffeff7f7efeff7ef
e7f7ffe7f7f7e7ffffe7f7f7e7ffff00d6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7
ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffdef7ffe7ffffd6efefdef7f7d6f7
f7efffffdeefefeff7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7
ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffefeff7eff7ffe7eff7deeff7d6efffdeefffdeef
f7e7ffffefefffe7f7ffd6e7f7e7f7ffeff7fff7f7f7e7efefe7f7efd6f7f7e7f7ffd6efefe7f7
ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7
f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffdef7ffefffffdeefefe7f7f7def7f7efff
ffdee7efe7f7ffdef7f7e7f7ffd6e7efefffffd6eff7deeff7def7ffe7f7ffdefff7e7ffffdeef
efe7fff7d6f7efe7fff7d6efefe7fff7deffefe7fff7deefe7e7fff7deffefe7fff7deefe7e7ff
f7dedeffe7f7f7d6efdedef7ffcedeffe7fff7d6f7dee7ffefd6f7f7e7f7ffd6efefe7f7ffd6f7
f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7ffefff
ffe7efefeff7f7deeff7e7efffd6e7efe7f7ffdef7ffe7f7f7deefefeff7f7def7efeff7f7dee7
e7e7f7f7eff7f7f7fff7e7efe7f7f7f7eff7f7f7fff7e7efe7eff7f7eff7efeff7f7e7efe7efff
f7eff7f7f7fff7e7efeff7fff7def7f7deffffd6efe7eff7f7cef7ffdef7ffe7efefdeffffd6f7
f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6eff7e7f7ffd6eff7e7ffffdeffffefff
ffe7e7f7f7f7ffeff7ffefffffd6efefdef7ffd6f7f7e7ffffdee7efe7eff7d6f7f7e7f7ffd6ef
efe7f7ffd6f7f7e7f7ffd6efefe7f7ffdef7f7efffffdeefefefffffdef7f7e7ffffdeefefe7f7
ffd6f7f7e7fff7d6efefe7ffffdef7f7e7ffffdeeff7e7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7
f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7
ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6ef
efe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffdef7f7efffffdeefefefff
ffdef7f7e7ffffdeefefe7f7ffd6f7f7e7fff7d6efefe7ffffdef7f7e7ffffdeeff7e7f7ffd6f7
f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffdef7f7e7f7f7d6e7efe7f7ffd6f7f7e7f7
ffd6efefe7f7f7eff7ffeff7ffdeeff7eff7ffdef7ffe7f7ffdeeff7e7f7ffdeeff7eff7f7deef
e7e7f7f7def7efe7f7f7deefefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7
ffdef7f7efffffdeefefefffffdef7f7e7ffffdeefefe7f7ffd6f7f7e7fff7d6efefe7ffffdef7
f7e7ffffdeeff7e7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffdeefefe7f7
f7deefefdef7efdeffffe7ffffcee7efe7ffffffeff7efffffd6efeffffffffff7ffe7f7ffdeef
f7fff7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7ffd6f7f7e7f7ffd6efefe7f7
ffd6f7f7e7f7ffd6efefe7f7ffcedef7deefffdee7efeff7ffeff7ffe7f7f7d6e7efdef7f7d6f7
f7e7f7ffd6e7efe7f7ffdef7ffdef7f7cee7e7def7f7c6f7ffdef7ffdee7f7d6f7ffefeff7d6f7
fff7e7effff7f7d6f7f7e7f7ffd6efefe7f7ffd6efef00e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7
f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7efffffe7f7f7e7
f7ffe7f7f7e7f7f7e7eff7efffffefeff7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7
f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7deffffdefff7deffffdef7f7e7
ffffe7f7f7eff7efeff7e7f7fff7e7ffefdefff7d6f7f7e7ffffdef7efe7fff7deffefe7ffffe7
f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7
f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7deeff7efffffefffffe7
f7f7efffffe7f7f7e7f7f7e7f7f7e7f7ffdef7f7e7f7ffdef7f7efffffefffffe7f7ffe7f7ffe7
efffe7efffeff7ffe7f7ffeff7ffe7f7ffeff7ffe7f7ffe7ffffe7f7ffe7ffffdef7ffe7f7ffde
f7ffe7f7ffdef7f7e7fff7f7ffffeffff7defff7deffffeff7ffe7efffe7ffefe7ffffe7f7f7e7
f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7
f7f7e7ffffe7f7efefffefe7f7eff7efffefefffe7ffffe7f7f7e7ffffe7f7f7f7ffffeff7f7ef
f7efeff7efeff7f7eff7f7def7ffd6f7ffdef7ffdef7ffe7ffffdef7ffdef7ffd6efffe7f7ffde
f7ffe7f7ffdef7f7e7f7ffdef7ffe7f7ffdef7f7f7ffffcef7ffdef7ffeff7f7e7ffffeff7ffef
f7efd6ffffe7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7def7ffdef7ffdeffffde
f7ffdef7ffdeeff7efeffff7f7ffdeefffdeeff7def7ffd6f7ffdef7ffdef7f7e7f7ffe7f7f7e7
ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7ffe7f7ffdef7f7e7f7ffde
f7ffe7f7ffdeefffd6f7f7d6f7f7deffffe7f7ffe7f7ffdeeff7e7f7ffe7f7ffe7ffffe7f7f7e7
f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7
f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7
ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7
f7ffe7f7ffdef7f7e7f7ffdef7ffe7f7ffdeefffd6f7f7d6f7f7deffffe7f7ffe7f7ffdeeff7e7
f7ffe7f7ffe7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7f7ffffeff7f7e7f7ffde
f7ffe7ffffdef7ffdeffffdef7ffeff7ffe7efffe7f7ffe7efffe7f7ffdef7ffe7f7ffdef7fff7
ffffeff7f7effff7e7fff7e7fff7e7f7f7e7f7ffe7efffe7ffffe7f7f7e7f7ffe7f7f7e7ffffe7
f7f7e7f7ffe7f7f7e7ffffe7f7ffe7f7ffdef7f7e7f7ffdef7ffe7f7ffdeefffd6f7f7d6f7f7de
ffffe7f7ffe7f7ffdeeff7e7f7ffe7f7ffe7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7
f7f7f7ffffe7f7f7f7ffffd6efe7e7fff7efffffe7f7f7deeff7ffeff7efffffdef7f7ffffffef
f7f7d6f7ffd6ffffdeeff7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7e7ffffe7
f7f7e7f7ffe7f7f7e7ffffe7f7f7e7f7ffe7f7f7eff7ffe7f7ffe7f7ffe7eff7e7f7ffe7ffffe7
ffffd6eff7eff7f7f7fffff7ffffeff7f7f7fff7eff7f7f7fff7eff7f7effffff7f7fff7f7ffd6
eff7e7f7ffb5fff7effff7e7f7efe7ffffe7f7f7e7f7ffe7f7f7e7f7ff00040000002701ffff03
0000000000
}\f1\fs24\par
\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\lang1033\b\i\f0\fs28 TfsScript component - \f2 the main scripting\f0  component\par
\pard\nowidctlpar\b0\i0\f1\fs24\par
\lang1049\f7\fs20{\pict\wmetafile8\picw635\pich635\picwgoal360\pichgoal360 
0100090000036203000000004103000000000400000003010800050000000b0200000000050000
000c0219001900030000001e0041030000410b2000cc0018001800000000001800180000000000
280000001800000018000000010008000000000000000000000000000000000000000000000000
0000000000ffffff00c6c6c600dea5a500c68c8c00b5949400feefef00e7c6c600946363005aa5
ef008cade700de948c00ad848400d6b5b500c69c9c00844a4a00c67b6b0084adde00b5adce0063
b5ef00ceeffe0000e7fe0042c6bd00c6848400efcece00ad73730084423900425a8c00bdcefe00
73eff7006b7b7b00845263007bcefe00cefefe00bdded600c6949c00efdede009c636300733939
00bd9cad008cfefe0010defe0052526b004aa5f700429cf7004284d6004aa5fe00fefefe00a5bd
d600bd948c00b57b7b007b393900ad94a50029fefe0073dee7007b424a007331310039adfe00f7
fefe0042a5fe00e7fefe0021fefe00b5b5d600cea59c00f7e7e700a56b6b008c4239003963ad00
bde7fe0052fefe00d6f7f70042efef00525252007b4a520042adfe00319cfe006bbdfe0000cece
00731818007b3131006b292900631818009484a5004afefe00427b6b005284ce004acefe00efc6
c600bdc6c600ad6b6b0010848400b56b6b008442420029a5fe00844252006bc6fe00b5fefe0000
fefe0084fefe009cfefe0008fefe0018d6fe005a425a00397bc60063e7fe0073394200a5737300
007b7b00ad737b00c6636300843939007b52520018cece006b39520021a5fe008cb5e700adbde7
00425a9400395a9c00b5effe00feefe7008c5a5a0052212100deadad0018737300ad7b84005aef
fe0008e7de0073314a0031adfe008cd6fe00dea59c00218c8400318cfe0029adfe00524a6300a5
6b63005a393900522929005a2121004a21210010fefe00cec6c6009c737b00947b7b0063d6fe00
18ded6006339520063a5ef00c68c84006bb5fe00316bad00732921006b2918005273a50029a5ef
005a4a6300bd8c8c00d6a5a5009c6b6b00a56363000884840000f7f700effef70000e7e700f7bd
bd00ad6b7300e7c6bd006bbdb50031ada500425252004ab5b500635a5a0073393100b5848400ad
9c9c00424a4a00634a4a0039393900bdd6d60000efef005a181800109494008cbdbd00dedede00
a55a5a0042636300317373009cd6d600e7f7f70021f7f70018fefe00d6fefe0039efef00429494
006b4a4a00399494005a848400adb5b5009473730039dede0008f7f700315a5a00005a5a000073
7300decece001073730039292900a5c6c600735a5a0039fefe001052520021848c00107b7b00ad
e7de007b4242002984840018636300a5737b0084adad0021b5b5004a5a5a00397b7b009c949400
8c848c0000adad0094848c00b58c940084636300397b84006b8c8c00ad949400949c9c00b5737b
004ad6d6008c7b7b00bd949c00ad848c009c737300000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000002020202020202020202020202020202020202020202020202020202
020202020202020202020202020202020202020202020202020202020202020202020202020202
02020202020202020202020202020202020202edeeda0202020202020202020202020202020202
e8790202e9eaeb0202ec05020202020202020202020202dbdcdddedfe0e1e2e3e4e5e6e7020202
020202020202020202d2bbd3d4d5d6d7d8d9cc6bda02020202020202020202c6c7c8c9cacbcccd
cecfccbdd0a0d1020202020202020204b9babb6bbcbdbebfc0c1b4c2c3c4c5890202a5a608a702
a8a9aaabacadaeafb0b1b2b3b4b5b6b7b802029192939495969798999a9b9c9d9e9fa0a12fa2a3
a48902027e7f80814b8283846585868788898a8b8c8d8e8f90026d6e6f61707172737475767778
797a7b2f642f617c7d02025c5d2c5e5f2f60616263646566676869646a6b2f646c0202494a4b4c
214d4e4f50515253545556575802595a5b020202393a3b3c3d3e3f404142434445464748020202
02020202022b2c2d2e2f3031063233343536373802020202020202020202021f20212223242526
2728292a020202020202020202020202131415161718191a1b1c1d1e0202020202020202020202
0202090a0b0c0d0e0f101112020202020202020202020202020202020205060708020202020202
020202020202020202020202020202030402020202020202020202020202020202020202020202
020202020202020202020202020202020202020202020202020202020202020202020202020202
0202040000002701ffff030000000000
}\f1\fs24\par
\lang1033     \par
This is a main scripting component.\par
\par
\b\i Properties:\par
\b0\i0\par
\b SyntaxType: String;\par
\b0 The type of the script language. \f3 B\f1 y default \f3 four\f1  types of scripts are supported: \f3 "\f1 PascalScript\f3 ",\f1  \f3 "\f1 C++Script\f3 ", "BasicScript", "JScript"\f1 . Warning! The property has the string type and it is easy to make a mistake in the syntax type indication. The value by default is \i\ldblquote PascalScript\rdblquote .\i0\par
\par
\b Lines: TStrings;\par
\b0 A script text. Contains strings of the script\b .\b0\par
\par
\b\i Methods:\par
\b0\i0\par
\b function Compile: Boolean;\par
\b0 Compiles the source code. Source code must be placed in  the TfsScript.Lines property before you call the Compile method.\par
\par
\b procedure Execute;\par
\b0 Execute script after compiling.\par
\par
\b function Run: boolean\b0 ;\par
Compile and execute script. Returns \b true \b0 if compile was successful. This method is the analogue to the \b Compile \b0\f3 +\f1  \b Execute\b0 .\par
\par
\b\i Examples of use:\par
\b0\i0\par
\i Example1.\par
\i0 Delphi/Kylix IDE. Loads script file MyTestScript.pas and execute it.\par
\par
\f4\fs20 fsScript1.Lines.LoadFromFile(\lquote MyTestScript.pas\rquote );\par
\b if\b0  fsScript1.Compile \b then\b0\par
   fsScript1.Execute\par
\b else\par
\pard\nowidctlpar\fi120\b0 ShowMessage(\lquote Script compilation error!\rquote );\par
\f1\fs24\par
\pard\nowidctlpar\i Example2.\par
\i0 Delphi/Kylix IDE. Pressing the Button1 gives the strings from fsSyntaxMemo1 component to fsScript1.Lines and execute script.\par
\b\par
\f4\fs20 procedure\b0  TForm1.Button1Click(Sender: TObject);\par
\b begin\par
\b0   fsScript1.Lines := fsSyntaxMemo1.Lines;\par
\b   if\b0  not fsScript1.Run \b then\b0\par
\pard\nowidctlpar\fi120   ShowMessage(\lquote Script compilation error!\rquote );\par
\pard\nowidctlpar\b end;\par
\b0\f1\fs24\par
\i Example3.\par
\i0 Delphi/Kylix IDE. Loads \ldblquote C++Script\rdblquote  from MyTestScript.cpp file and execute it. \par
\par
\f4\fs20 fsScript1.Lines.LoadFromFile(\lquote MyTestScript.cpp\rquote );\par
fsScript1.SyntaxType := \lquote C++Script\rquote ;\par
\b if\b0  fsScript1.Compile \b then\b0\par
   fsScript1.Execute\par
\b else\par
\pard\nowidctlpar\fi120\b0 ShowMessage(\lquote Script compilation error!\rquote );\par
\f1\fs24\par
\par
\pard\nowidctlpar\i Example4.\par
\lang1049\i0\'d1\lang1033 ++Builder IDE. Loads \ldblquote C++Script\rdblquote  from MyTestScript.cpp file and execute it.\par
\par
\f4\fs20 fsScript1->Lines->LoadFromFile(\lquote MyTestScript.cpp\rquote );\par
fsScript1->SyntaxType = \ldblquote C++Script\rdblquote ;\par
\b if\b0  (fsScript1->Compile()) \par
   fsScript1->Execute();\par
\b else\par
\pard\nowidctlpar\fi120\b0 ShowMessage(\ldblquote Script compilation error!\rdblquote );\par
\pard\nowidctlpar\f1\fs24\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f0\fs28\page TfsSyntaxMemo  - script editor with syntax highlighting\par
\pard\nowidctlpar\b0\i0\f1\fs24\par
\lang1049\f7\fs20{\pict\wmetafile8\picw635\pich635\picwgoal360\pichgoal360 
0100090000036203000000004103000000000400000003010800050000000b0200000000050000
000c0219001900030000001e0041030000410b2000cc0018001800000000001800180000000000
280000001800000018000000010008000000000000000000000000000000000000000000000000
0000000000ffffff00c0c0c000fe5f2300fefeea00fefee900fefee70063665100fefde700fefd
e40054524000c3756100fcfce200fefde500fefde300fcfce000fdfde300fdfce100fcfbde00fe
fee600fcfbdf00fcfbdc00fdfce200fbfadd00fbfada00fcfbe000fbfade00fbf9db00faf8d800
fefde600fdfce300fbfbde00fbf9dc00faf8d900f9f7d6000423fe000321fb00031cf5000316f0
000112e900010ce2000008dd000005d900f9f6d3000420fb00031cf6000317ef000111e9000108
dd00f8f5d100fdfee500fcfce100fcfadf00fbf9da00faf7d700f9f6d400f7f4ce00fcfadc00f9
f8d800f9f6d500f8f6d200f7f4cf00f7f3cc00f9f6d600f8f6d300f8f4d000f6f3cc00f6f2ca00
fefee800fcfbe100faf7d600f8f5d000f7f4cd00f6f3ca00f5f1c600fcfade0000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000002020202020202020202020202020202020202020202020202030303
0303030303030303030303030303030303030302020304040404040405441d0d0c454b1b213f40
4142430302020304040a0a0a0a0a0506130e0c19391b3a3b3c3d3e030202030404070707070704
0506321e33341735363731380302020304040404040444060d1e4534202146404748494a030202
030404040404040a0a0a0a0a0a0a1b213f40414243030202030404040404040707070707070739
1b3a3b3c3d3e0302020304040404040404040506321e3334173536373138030202030404040404
040423042323232c2d2e2f28302a31030202030404040404040423042323232425262728292a2b
030202030404040404040404040404051d0d1e191f202122030202030404040404040a0a0a0a0a
0a0a0a0a0a191a1b1c030202030404040404040707070707070707070716141718030202030404
040404040404040404040405130d091114150302020304040404040b0b0b0b0b0b04040405060d
1011120302020304040404040404040404040404040405080d0e0f0302020304040404040b0b0b
0b0b0b0b040b0b0b0b0b0b0c030202030404040404040404040404040404040404050809030202
0304040a0a0a0a0a0a040404040404040404050606030202030404070707070707040404040404
040404050809030202030404040404040404040404040404040404050606030202030303030303
030303030303030303030303030303030202020202020202020202020202020202020202020202
0202040000002701ffff030000000000
}\i\f1\fs24\par
\i0\par
\lang1033 A special advanced TMemo is adapted for FastScript with support of C++ and Pascal syntax highlighting. \par
\i Available in FastScript for VCL only.  \f3 It's a "bonus" component and is not supported at present time.\f1\par
\i0\par
\b\i Properties:\par
\b0\i0\par
\b SyntaxType: TSyntaxType;\par
\b0 Type of syntax highlighting. \par
Possible values: \par
\b stPascal\b0  - for Pascal, \par
\b stCpp\b0  - for C++,\par
\b stSQL\b0  - for SQL,\par
\b stText\b0  - a simple text (without highlighting).\par
Default value \b stPascal\b0 .\par
\par
\b Lines: TStrings;\par
\b0 Th\f3 e\f1  edit text.\par
\par
\b ShowFooter: Boolean;\par
\b0 Shows the footer with a cursor position, etc.\par
\par
\b ShowGutter: Boolean;\par
\b0 Shows the info in the left part of a text with bookmarks, current step position, etc.\par
\par
\b BlockColor: TColor;\par
\b0 Background color of the selected text.\par
\par
\b BlockFontColor: TColor;\par
\b0 Color of the selected text.\par
\par
\b CommentAttr: TFont;\par
\b0 Attributes of the comment font.\par
\par
\b KeywordAttr: TFont;\par
\b0 Attributes of keyword font.\par
\par
\b StringAttr: TFont;\par
\b0 Attributes of the string values font.\par
\par
\b TextAttr: TFont;\par
\b0 Attributes of a simple text font.\par
\par
\b Modified: Boolean;\par
\b0 True if the text was modified.\par
\b  \par
SelText: String;\par
\b0 Contains a selected text.\par
\b\par
\i Methods:\par
\b0\i0\par
\b procedure CopyToClipboard;\par
\b0 Copies a selected text to the clipboard.\par
\par
\b procedure CutToClipboard;\par
\b0 Moves a selected text to the clipboard.\par
\b\par
procedure PasteFromClipboard;\par
\b0 Inserts a text from the clipboard to the cursor position.\par
\par
\b procedure SetPos(x, y: Integer);\par
\b0 Sets the cursor position in the text. Line and positions numbering begins from 0. See the \b GetPos\b0  method.\par
\b\par
function GetPos: TPoint;\par
\b0 Returns the current cursor position. See \b SetPos\b0 .\par
\b\par
procedure ShowMessage(s: String);\par
\b0 Shows a message in the footer.\par
\b\par
procedure Undo;\par
\b0 Cancels the last change.\par
\b\par
function Find(Text: String): boolean;\par
\b0 Searches a text from a current cursor position.\par
\b\par
function  IsBookmark(Line : integer): integer;\par
\b0 Return the bookmark number for the line with the \b Line \b0 number. Returns -1 if the bookmark is not set. See \b AddBookmark \b0 method.\par
\b\par
procedure AddBookmark(Line, Number : integer);\par
\b0 Adds the bookmark number for the line \b Line \b0 with the number \b Number\b0 . Supports 10 bookmarks with numbers from 0 to 9. See \b DeleteBookmark, GotoBookmark\b0  methods.\par
\b\par
procedure DeleteBookmark(Number : integer);\par
\b0 Deletes the bookmark with\b  \b0 the number\b  Number\b0 . See \b AddBookmark\b0  method.\par
\b\par
procedure GotoBookmark(Number : integer);\par
\b0 Sets the cursor position to the line with the bookmark with the number \b Number\b0 . See \b AddBookmark\b0  method.\par
\b\par
procedure SetActiveLine(Line : Integer);\par
\b0 Sets the active line highlighting (for use with the debugger). \b Line\b0  is the active line number. The highlighting is disabled  if \b Line\b0  is set to -1. See the \b GetActiveLine\b0  method\b .\b0\par
\par
\b function GetActiveLine: Integer;\par
\b0 Returns the active line number. If there is no active lines it returns -1. See \b SetActiveLine\b0  method\b .\b0\par
\b\i\par
Hot keys.\par
\b0\i0\par
\trowd\trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \clbrdrt\brdrw15\brdrs\clbrdrl\brdrw15\brdrs\clbrdrb\brdrw15\brdrs\clbrdrr\brdrw15\brdrs \cellx3600\clbrdrt\brdrw15\brdrs\clbrdrl\brdrw15\brdrs\clbrdrb\brdrw15\brdrs\clbrdrr\brdrw15\brdrs \cellx9463\pard\intbl\lang1049\b Key\cell Action\cell\row
\b0\trowd\trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \clbrdrt\brdrw15\brdrs\clbrdrl\brdrw15\brdrs\clbrdrb\brdrw15\brdrs\clbrdrr\brdrw15\brdrs \cellx3600\clbrdrt\brdrw15\brdrs\clbrdrl\brdrw15\brdrs\clbrdrb\brdrw15\brdrs\clbrdrr\brdrw15\brdrs \cellx9463\intbl Cursor arrow\cell Cursor moving\cell\row
\intbl PgUp, PgDn, \cell Page Up / Page Down\cell\row
\intbl Ctrl+PgUp\cell\lang1033 Move to the begin of text\cell\row
\lang1049\trowd\trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \clbrdrt\brdrw15\brdrs\clbrdrl\brdrw15\brdrs\clbrdrb\brdrw15\brdrs\clbrdrr\brdrw15\brdrs \cellx3600\clbrdrt\brdrw15\brdrs\clbrdrl\brdrw15\brdrs\clbrdrb\brdrw15\brdrs\clbrdrr\brdrw15\brdrs \cellx9463\intbl Ctrl+PgDn\cell\lang1033 Move to the end of text\cell\row
\lang1049\trowd\trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \clbrdrt\brdrw15\brdrs\clbrdrl\brdrw15\brdrs\clbrdrb\brdrw15\brdrs\clbrdrr\brdrw15\brdrs \cellx3600\clbrdrt\brdrw15\brdrs\clbrdrl\brdrw15\brdrs\clbrdrb\brdrw15\brdrs\clbrdrr\brdrw15\brdrs \cellx9463\intbl Home\cell\lang1033 Move to the begin of line\cell\row
\lang1049\trowd\trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \clbrdrt\brdrw15\brdrs\clbrdrl\brdrw15\brdrs\clbrdrb\brdrw15\brdrs\clbrdrr\brdrw15\brdrs \cellx3600\clbrdrt\brdrw15\brdrs\clbrdrl\brdrw15\brdrs\clbrdrb\brdrw15\brdrs\clbrdrr\brdrw15\brdrs \cellx9463\intbl End\cell\lang1033 Move to the end of line\cell\row
\lang1049\trowd\trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \clbrdrt\brdrw15\brdrs\clbrdrl\brdrw15\brdrs\clbrdrb\brdrw15\brdrs\clbrdrr\brdrw15\brdrs \cellx3600\clbrdrt\brdrw15\brdrs\clbrdrl\brdrw15\brdrs\clbrdrb\brdrw15\brdrs\clbrdrr\brdrw15\brdrs \cellx9463\intbl Enter\cell\lang1033 Move to the next line\cell\row
\lang1049\trowd\trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \clbrdrt\brdrw15\brdrs\clbrdrl\brdrw15\brdrs\clbrdrb\brdrw15\brdrs\clbrdrr\brdrw15\brdrs \cellx3600\clbrdrt\brdrw15\brdrs\clbrdrl\brdrw15\brdrs\clbrdrb\brdrw15\brdrs\clbrdrr\brdrw15\brdrs \cellx9463\intbl Delete\cell\lang1033 Delete symbol at right or selected text\cell\row
\lang1049\trowd\trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \clbrdrt\brdrw15\brdrs\clbrdrl\brdrw15\brdrs\clbrdrb\brdrw15\brdrs\clbrdrr\brdrw15\brdrs \cellx3600\clbrdrt\brdrw15\brdrs\clbrdrl\brdrw15\brdrs\clbrdrb\brdrw15\brdrs\clbrdrr\brdrw15\brdrs \cellx9463\intbl Backspace\cell Delete symbol at left\cell\row
\intbl Ctrl+Y\cell Delete current line\cell\row
\intbl Ctrl+Z\cell Undo last change\cell\row
\intbl Shift+\'d1\'f2\'f0\'e5\'eb\'ea\'e8 \'ea\'f3\'f0\'f1\'ee\'f0\'e0\cell Select the text block\cell\row
\intbl Ctrl+A \cell Select all text\cell\row
\intbl Ctrl+U\cell Unindent selected block\cell\row
\intbl Ctrl+I\cell Indent selected block\cell\row
\intbl Ctrl+C, Ctrl+Insert\cell Copy to clipboard\cell\row
\intbl Ctrl+V, Shift+Insert\cell Paste from clipboard\cell\row
\intbl Ctrl+X, Shift+Delete\cell Cut to clipboard\cell\row
\intbl Ctrl+Shift+<\'f6\'e8\'f4\'f0\'e0>\cell Set bookmark\cell\row
\intbl Ctrl+<\'f6\'e8\'f4\'f0\'e0>\cell Goto bookmark\cell\row
\intbl Ctrl+F\cell Search text\cell\row
\intbl F3\cell Continue search\cell\row
\pard\nowidctlpar\par
\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\lang1033\f0\page\b\i\fs28 TfsTree - classes and functions tree-view \par
\pard\nowidctlpar\b0\i0\f1\fs24\par
\lang1049\f7\fs20{\pict\wmetafile8\picw820\pich820\picwgoal367\pichgoal367 
0100090000033204000000001104000000000400000003010800050000000b0200000000050000
000c0220002000030000001e0011040000410b2000cc001f001f00000000001f001f0000000000
280000001f0000001f000000010008000000000000000000000000000000000000000000000000
0000000000ffffff00d8e9ec00fe803400fe813400fe833600fe843600fe5d2400fe843500fefe
fe00fef0af00fe602400fe823400fefbf600fefef200fef0b000fe5d2300fe5f2400fe5e2400fe
5e2300fe5b2300fe5f2200fe863500fe873500fe833400fe7e3400fe80350093c3fe003e74fe00
003afe00fe5d2200fe81350082b0fe000038fe00fe612500fe5b2100fe5b2200fe602500fe8335
00fe6023001afe950005fe6e0000f75400fe5f2300fe5c2400fe602600fe8236001cfe930000ea
4a0000d03600fe7e3600fe612300fe5c2200000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000002020202020202020202020202020202020202020202020202020202
020202ff02020202020202020202020202020202020202020202020202020202020202ff020202
02020202020202020202020202020202020202020202020202020202ff02020202020202020202
020202020202020202020202020202020202020202ff0202020202020202020202020202020202
0202020202020202020202020202ff020202020202022b02020202020202020202020202020202
02020202020202ff020202020202021302020202020202340b250b120202020202020202020202
ff02020202020202110b100b25252510052f3031130202020202020202020202ff020202020202
020b020202020202021f28292a120202020202020202020202ff02020202020202130202020202
020216160432330202020202020202020202ff0202020202020213020202020202020202020202
0202020202020202020202ff020202020202022b020202020202020202022b1424111102020202
02020202ff020202020202022502020202020b132c2d152e2f3031120202020202020202ff0202
02020202022502020202020b020202021a28292a2b0202020202020202ff020202020202021302
020202020b02020202061a261f270202020202020202ff02020202020202120202020202250202
020202020202020202020202020202ff020202020202022402020202020b020202020202020202
0202020202020202ff020202020202020b02020213111222230202020202020202020202020202
02ff02020202020202071112121f2021210b020202020202020202020202020202ff0202020202
02020b0202021a1b1c1d1e020202020202020202020202020202ff020202020202020702020216
17181913020202020202020202020202020202ff020202020202020b0202020202020202020202
020202020202020202020202ff0202020202111213141502020202020202020202020202020202
0202020202ff02020202020c0d0e0f10020202020202020202020202020202020202020202ff02
020202020809090a0b020202020202020202020202020202020202020202ff0202020202030405
0607020202020202020202020202020202020202020202ff020202020202020202020202020202
02020202020202020202020202020202ff02020202020202020202020202020202020202020202
020202020202020202ff0202020202020202020202020202020202020202020202020202020202
0202ff02020202020202020202020202020202020202020202020202020202020202ff02020202
020202020202020202020202020202020202020202020202020202ff040000002701ffff030000
000000
}\f1\fs24\par
\par
\lang1033 Shows available classes and functions in a tree.\par
\i\f3 It's a "bonus" component and is not supported at present time.\i0\f1\par
\par
\b\i Properties:\par
\b0\i0\par
\b property Script: TfsScript;\par
\b0 TfsScript reference.\par
\par
\b property SyntaxMemo: TfsSyntaxMemo; for VCL\par
property SyntaxMemo: TMemo; for CLX\par
\b0 Memo reference.\par
\par
\b property ShowClasses: Boolean; \par
\b0 The function tree is shown.\par
\par
\b property ShowFunctions: Boolean; \par
\b0 All the tree nodes are shown .\par
\par
\b property Expanded: Boolean;\par
\b0 Expand all tree nodes.\par
\par
\b property ExpandLevel: integer;\par
\b0 The level of the unfolded tree nodes. 2 by default.\par
\par
\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f0\fs28\par
\page TfsClassesRTTI component\par
\pard\nowidctlpar\lang1049\b0\i0\f1\fs24\par
\f7\fs20{\pict\wmetafile8\picw635\pich635\picwgoal360\pichgoal360 
0100090000036203000000004103000000000400000003010800050000000b0200000000050000
000c0219001900030000001e0041030000410b2000cc0018001800000000001800180000000000
280000001800000018000000010008000000000000000000000000000000000000000000000000
0000000000ffffff00c0c0c000d67b2100ce630000fefefe00feefd600fedeb500fed6a500fef7
ef0099c9fe0075adfe004c8efe002771fe000f5efe0088bbfe00619dfe00397ffe001966fe004f
eb970048de89003dcb750031b55d004ce6910044d5800038c069002ca951001f943a0000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000002020202020202020202020202020202020202020202020202020202
020202020202020202020202020202020202020202020202020202020202020202020202020202
020202020202020202020202020402020202020202020202020202020202020202020202020402
020202020404040404040404020202020202020202020404040404040309090606070804020202
020202020202020402020202020305050506070804020202020202020202020402020202020303
030303030304020202020202020202020402020202020202020202020202020202020202020202
0204020202020204040404040404040202020202020202020204040404040403131718191a1b04
020202020202020202020402020202020313131314151604020202020202020202020402020202
020303030303030304020202020202020202020402020202020202020202020202020202020202
02020202040202020202040404040404040402020202020202020202040404040404030f101112
0e0e0402020202020202020202040202020202030a0b0c0d0e0e04020202020202020202020402
020202020303030303030304020202020202020202020402020202020202020202020202020202
020202020404040404040404020202020202020202020202020202020309090606070804020202
020202020202020202020202020305050506070804020202020202020202020202020202020303
030303030304020202020202020202020202020202020202020202020202020202020202020202
0202040000002701ffff030000000000
}\f1\fs24\par
\par
\lang1033     Use this component if you want to get access to Classes.pas stuff in your application. This component allows you to access the following classes inside a script:\par
\par
\f4\fs20 TObject\par
constructor TObject.Create\par
procedure TObject.Free\par
\par
TPersistent\par
procedure TPersistent.Assign(Source: TPersistent)\par
\par
TList\par
function TList.Add(Item: TObject): Integer\par
procedure TList.Clear\par
procedure TList.Delete(Index: Integer)\par
function TList.IndexOf(Item: TObject): Integer\par
procedure TList.Insert(Index: Integer; Item: TObject)\par
function TList.Remove(Item: TObject): Integer\par
property TList.Count\par
property TList.Items\par
\par
TStrings\par
function TStrings.Add(const S: string): Integer\par
function TStrings.AddObject(const S: string; AObject: TObject): Integer\par
procedure TStrings.Clear\par
procedure TStrings.Delete(Index: Integer)\par
function TStrings.IndexOf(const S: string): Integer\par
function TStrings.IndexOfName(const Name: string): Integer\par
function TStrings.IndexOfObject(AObject: TObject): Integer\par
procedure TStrings.Insert(Index: Integer; const S: string)\par
procedure TStrings.InsertObject(Index: Integer; const S: string; AObject: TObject)\par
procedure TStrings.LoadFromFile(const FileName: string)\par
procedure TStrings.LoadFromStream(Stream: TStream)\par
procedure TStrings.SaveToFile(const FileName: string)\par
procedure TStrings.SaveToStream(Stream: TStream)\par
property TStrings.CommaText\par
property TStrings.Count\par
property TStrings.Names\par
property TStrings.Objects\par
property TStrings.Values\par
property TStrings.Strings\par
property TStrings.Text\par
\par
TStringList\par
function TStringList.Find(s: String; var Index: Integer): Boolean\par
procedure TStringList.Sort\par
property TStringList.Duplicates\par
property TStringList.Sorted\par
\par
TStream\par
function TStream.Read(Buffer: string; Count: Longint): Longint\par
function TStream.Write(Buffer: string; Count: Longint): Longint\par
function TStream.Seek(Offset: Longint; Origin: Word): Longint\par
function TStream.CopyFrom(Source: TStream; Count: Longint): Longint\par
property TStream.Position\par
property TStream.Size\par
\par
TFileStream\par
constructor TFileStream.Create(Filename: String; Mode: Word)\par
\par
TMemoryStream\par
procedure TMemoryStream.Clear\par
procedure TMemoryStream.LoadFromStream(Stream: TStream)\par
procedure TMemoryStream.LoadFromFile(Filename: String)\par
procedure TMemoryStream.SaveToStream(Stream: TStream)\par
procedure TMemoryStream.SaveToFile(Filename: String)\par
\par
TComponent\par
constructor TComponent.Create(AOwner: TComponent)\par
property TComponent.Owner\par
\par
TfsXMLItem\par
constructor TfsXMLItem.Create\par
procedure TfsXMLItem.AddItem(Item: TfsXMLItem)\par
procedure TfsXMLItem.Clear\par
procedure TfsXMLItem.InsertItem(Index: Integer; Item: TfsXMLItem)\par
function TfsXMLItem.Add: TfsXMLItem\par
function TfsXMLItem.Find(const Name: String): Integer\par
function TfsXMLItem.FindItem(const Name: String): TfsXMLItem\par
function TfsXMLItem.Prop(const Name: String): String\par
function TfsXMLItem.Root: TfsXMLItem\par
property TfsXMLItem.Data\par
property TfsXMLItem.Count\par
property TfsXMLItem.Items\par
property TfsXMLItem.Name\par
property TfsXMLItem.Parent\par
property TfsXMLItem.Text\par
\par
TfsXMLDocument\par
constructor TfsXMLDocument.Create\par
procedure TfsXMLDocument.SaveToStream(Stream: TStream)\par
procedure TfsXMLDocument.LoadFromStream(Stream: TStream)\par
procedure TfsXMLDocument.SaveToFile(const FileName: String)\par
procedure TfsXMLDocument.LoadFromFile(const FileName: String)\par
property TfsXMLDocument.Root\par
\par
const fmCreate\par
const fmOpenRead\par
const fmOpenWrite\par
const fmOpenReadWrite\par
const fmShareExclusive\par
const fmShareDenyWrite\par
const fmShareDenyNone\par
const soFromBeginning\par
const soFromCurrent\par
const soFromEnd\par
type TDuplicates\par
\f1\fs24\par
    You have an access to all the published properties of these classes and an access to some public properties and methods.\par
    Note: This is a "fake" component. It is needed only for automatic inclusion of the "FS_iClassesRTTI" unit to the "uses" clause.\par
\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f0\fs28\page TfsGraphicsRTTI component\par
\pard\nowidctlpar\lang1049\b0\i0\f1\fs24\par
\f7\fs20{\pict\wmetafile8\picw635\pich635\picwgoal360\pichgoal360 
0100090000036203000000004103000000000400000003010800050000000b0200000000050000
000c0219001900030000001e0041030000410b2000cc0018001800000000001800180000000000
280000001800000018000000010008000000000000000000000000000000000000000000000000
0000000000ffffff00c0c0c0009fa4a6004f597d008497d2003c4662001a203b00aab1b500454e
6d00444f6f00a0a6aa00a0a4a700424a6800535f85001b213c00949a9d00a8a9a9004651700052
5d840082878a00a18f860080ab2e0056628800777b7e00adb5bd007b7e8900c3c8cb007c818300
969faf005b677d0063708700595b5f00a09564008686870097a0ac0066748c000bbaf400060708
0026272c004e4846003b435100687489000e1013000080fe00a7adb80092687500936471001313
1e0024252800818b9d00dc12310072222c000c061f0008061100e8a84f00b0580000070311000a
0811001b1b210070747b0040071d001b1c1f00595c6200e6a64c00e4a24900e19e4500de994100
da953c00d68f3600d38a3100cf842c00cb7e2500c7782000c3731a00bf6d1500bb691100b8640c
00b55f0800b35c0300b1590100e7a74e00e5a44b00e2a04700e09c4300dc973f00d9923900d58d
3400d1882f00cd822900c97c2300c5761e00c1711900bd6c1300ba670e00b7620a00b45e0600b2
5b0300e7a64d00e4a24a00e29e4600de9a4200db953d00d8903800d48b3200d0852c00cb7f2700
c8792100c3741c00c06f1700bc691200b6600900b35c0500b15a02000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000002020202020202020202020202020202020202020202020237373762
636465666768696a6b6c6d6e4d6f7071383838383737375152535455565758595a5b5c5d5e5f60
613838383837373737404142434445464748494a4b4c4d4e4f5038383802020202020202020202
02020202020202020202020202020202020202020202020202020202020202020202020202022c
3838160202022c2c2c3d3e3f05050202020202020202022c37383816022c33333333393a3b3c05
02020202020202022c2c2c2c2502022525322c3334353605020202020202020202020202020202
02022c252d2e2f3031050202020202020202020202020202020225292525252a2b050202020202
020202020202020202020202232425252627280202020202020202020202020202020202021d1e
1f20211622020202020202020202020202020202020202191a161b16161c020202020202020202
020202020202020202021516161707180202020202020202020202020202020202020211120513
0f14020202020202020202020202020202020202020c0d050e0f10020202020202020202020202
020202020202020309050a070b0202020202020202020202020202020202020203040506070802
020202020202020202020202020202020202030405060702020202020202020202020202020202
020202020304050602020202020202020202020202020202020202020203040502020202020202
020202020202020202020202020202030402020202020202020202020202020202020202020202
0203040000002701ffff030000000000
}\f1\fs24\par
\par
\lang1033     Use this component if you want to get an access to Graphics.pas stuff in your application. This component allows you to access the following classes inside a script:\par
\par
\f4\fs20 TFont\par
TPen\par
TBrush\par
TCanvas\par
procedure TCanvas.Draw(X, Y: Integer; Graphic: TGraphic)\par
procedure TCanvas.Ellipse(X1, Y1, X2, Y2: Integer)\par
procedure TCanvas.LineTo(X, Y: Integer)\par
procedure TCanvas.MoveTo(X, Y: Integer)\par
procedure TCanvas.Rectangle(X1, Y1, X2, Y2: Integer)\par
procedure TCanvas.RoundRect(X1, Y1, X2, Y2, X3, Y3: Integer)\par
procedure TCanvas.StretchDraw(X1, Y1, X2, Y2: Integer; Graphic: TGraphic)\par
function TCanvas.TextHeight(const Text: string): Integer\par
procedure TCanvas.TextOut(X, Y: Integer; const Text: string)\par
function TCanvas.TextWidth(const Text: string): Integer\par
property TCanvas.Pixels\par
\par
TGraphic\par
procedure TGraphic.LoadFromFile(const Filename: string)\par
procedure TGraphic.SaveToFile(const Filename: string)\par
property TGraphic.Height\par
property TGraphic.Width\par
\par
TMetafile\par
TMetafileCanvas\par
TBitmap\par
property TBitmap.Canvas\par
\par
type TFontStyles\par
type TFontPitch\par
type TPenStyle\par
type TPenMode\par
type TBrushStyle\par
\f1\fs24\par
    You have an access to all the published properties of these classes and an access to some public properties and methods.\par
    Note: This is a "fake" component. It is needed only for automatic inclusion of the "FS_iGraphicsRTTI" unit to the "uses" clause.\par
\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f0\fs28\page TfsFormsRTTI component\par
\pard\nowidctlpar\lang1049\b0\i0\f1\fs24\par
\f7\fs20{\pict\wmetafile8\picw635\pich635\picwgoal360\pichgoal360 
0100090000036203000000004103000000000400000003010800050000000b0200000000050000
000c0219001900030000001e0041030000410b2000cc0018001800000000001800180000000000
280000001800000018000000010008000000000000000000000000000000000000000000000000
0000000000ffffff00c6c6c600fee7c600efb55a00f7bd7300efbd6b00efbd7300efb56b00e7b5
6300e7ad6300dea55a00dea55200d6944a00c68c4200a57b6b00947b8c00b57b4200efad5a00e7
9c3900ce842100ce7b2100ce7b1800c6731800bd6b1000c66b1000bd630800bd630000ad631800
3963ef000031fe00945a5200ef941000efb56300de9c4a00bd8c4a00b5844200bd8c4200b58439
00bd8442009c8c7b0094848400e7942100efbd8400fef7ef00fef7e700f7efe7000808f700efef
e700efefde00e7efe700deefe700e7f7ef00deefef00e7f7de00debd7300de8c2100c67b2900d6
a57300fefefe000000ef00f7fefe00effefe00e7fefe00defefe00d6bd8400de8c2900b5632100
d69c6b00006b0000def7fe00d6b58400d6842100bd632100d69c6300e7f7fe0000630000cea573
000800ef00cea57b00c6732100bd6b2100ce9c6300c69c7300c66b2100c6a57b00b5631800bd9c
7300b552080084bdfe007bbdfe0073b5fe0073adfe006ba5fe00639cfe006394fe00528cfe0052
84fe004a73fe00bdfefe006bc6fe0063bdfe005abdfe0052b5fe0042adfe0042a5fe003194fe00
00009400c66b1800ce944a00f7debd00efd6b500efd6bd00e7ceb500e7d6bd007bb5fe00b5fefe
004273fe00d6944200ce7b2900c67b3100ce843900c67b3900c67331005a8cfe004263f7000000
8c005a94fe00395aef003152de00000084004aadfe00426bf700395ae700314ade002942d60039
a5fe003152e70000007b004a7bfe00319cfe002139ce0000007300000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000002020202020202020202020202020202020202020202020202020202
020202020202026b6b7e7e828282828a8a8a8a02020202020202020202028b8c84841d80898187
878d8a8e8a020202020202020202027c88616262847d8589868687828a02020202020202020202
7f83616100008484008500868782020202020202020202025d675f007c610075001d0081818202
0202020202020202025d665e007f7c006100001d80818202767778797a7a7b7a7a73655c5d0000
5f7c0062007d1d7e026c6d6e6f706f70717273745c5c5d5d5e5f606162751d6b02433a3b3b3b3b
3b3b3b59636364646566676768696a626b0251523b3b3b3b3b3d3b3d595a5a5b5b5c5d5e5f6061
62020258443c2f4e2f3b3b4e2f3c2f3e3e4b45464040555102020256523b3c3b3b3b3d3b3c2f3e
3e4b3f4c464640575102020249443b3b3c3b3b3b3d2f45454545453f464040554902020251523b
3b2f3c2f3c2f3c453e3e4b3f4c4b4640535402020249443b3b4e3b3b3b4e3d453d3e3e4b454640
404f50020202494a3b3b3b3c3b3c2f3d453e3e4b3f4c4646404d1502020243443b3b3b2f3b2f3c
4545454545453f4640404748020202393a3b3b3b3b2f3c3b3d3d3d3d3e3e3f3f40404142020202
222b2c2c2d2d2e2f30303130323233343536363738020202212223242524252627242724272423
24232829242a02020212131415161415151615171718191a1b1c1d1e1f20020202030405060506
0706070808090a0b0c0d0e0f101102020202020202020202020202020202020202020202020202
0202040000002701ffff030000000000
}\f1\fs24\par
\par
\lang1033     Use this component if you want to get an access to StdCtrls.pas and Forms.pas stuff in your application. This component allows you to access the following classes inside a script:\par
\par
\f4\fs20 TControl\par
property TControl.Parent\par
procedure TControl.Hide\par
procedure TControl.Show\par
procedure TControl.SetBounds(ALeft, ATop, AWidth, AHeight: Integer)\par
event TControl.OnCanResize\par
event TControl.OnClick\par
event TControl.OnDblClick\par
event TControl.OnMouseDown\par
event TControl.OnMouseMove\par
event TControl.OnMouseUp\par
event TControl.OnResize\par
\par
TWinControl\par
procedure TWinControl.SetFocus\par
event TWinControl.OnEnter\par
event TWinControl.OnExit\par
event TWinControl.OnKeyDown\par
event TWinControl.OnKeyPress\par
event TWinControl.OnKeyUp\par
\par
TCustomControl\par
TGraphicControl\par
TGroupBox\par
TLabel\par
TEdit\par
TMemo\par
\par
TCustomComboBox\par
property TCustomComboBox.DroppedDown\par
property TCustomComboBox.ItemIndex\par
\par
TComboBox\par
TButton\par
TCheckBox\par
TRadioButton\par
\par
TCustomListBox\par
property TCustomListBox.ItemIndex\par
property TCustomListBox.SelCount\par
property TCustomListBox.Selected\par
\par
TListBox\par
TControlScrollBar\par
TScrollingWinControl\par
TScrollBox\par
\par
TCustomForm\par
procedure TCustomForm.Close\par
procedure TCustomForm.Hide\par
procedure TCustomForm.Show\par
function TCustomForm.ShowModal: Integer\par
event TCustomForm.OnActivate\par
event TCustomForm.OnClose\par
event TCustomForm.OnCloseQuery\par
event TCustomForm.OnCreate\par
event TCustomForm.OnDestroy\par
event TCustomForm.OnDeactivate\par
event TCustomForm.OnHide\par
event TCustomForm.OnPaint\par
event TCustomForm.OnShow\par
property TCustomForm.ModalResult\par
\par
TForm\par
\par
type TModalResult\par
type TCursor\par
type TShiftState\par
type TAlignment\par
type TAlign\par
type TMouseButton\par
type TAnchors\par
type TBevelCut\par
type TTextLayout\par
type TEditCharCase\par
type TScrollStyle\par
type TComboBoxStyle\par
type TCheckBoxState\par
type TListBoxStyle\par
type TFormBorderStyle\par
type TWindowState\par
type TFormStyle\par
type TBorderIcons\par
type TPosition\par
type TCloseAction\par
\f1\fs24\par
    You have an access to all the published properties of these classes and an access to some public properties and methods.\par
    Note: This is a "fake" component. It is needed only for automatic inclusion of the "FS_iFormsRTTI" unit to the "uses" clause.\par
\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f0\fs28\page TfsExtCtrlsRTTI component\par
\pard\nowidctlpar\lang1049\b0\i0\f1\fs24\par
\f7\fs20{\pict\wmetafile8\picw635\pich635\picwgoal360\pichgoal360 
0100090000036203000000004103000000000400000003010800050000000b0200000000050000
000c0219001900030000001e0041030000410b2000cc0018001800000000001800180000000000
280000001800000018000000010008000000000000000000000000000000000000000000000000
0000000000ffffff00c6c6c60021de290021de310029d64a0029de390021de390021d6290029f7
310021d6390021ce2900fef7e700feefc600fee7bd00fee7b500fede9c00fed6940021ef290021
ce3100fef7ef00fee7ad00fed68c00fec66b00fec65200fece7b0021f7310029d64200fedead00
fedea500fece8400feb54200fead2100f7ad630021ce390021c62900feefce00fec66300feb539
00fe9c0800fe8c0000e7730000ad39000021e74a0021ce420021c6390029c63100fec65a00fe94
0000e77b0000d66b0000c652000021ef4a0021d6310021bd3900fece6b009ce7fe0094defe0094
e7fe008cdefe0084defe007bd6fe00318cce0021bd310063c6fe005ac6fe004ab5fe002163f700
0831e70018ad2900febd520073cefe0073d6fe006bcefe005abdfe00429cfe001042ef000021e7
000021d60021ad310018a52100feb5310084cefe0063b5fe005ab5fe0052adfe004aa5fe00399c
fe003184fe000029ef000029d60018a52900fed68400fea51000fe9c000073bdfe0052a5fe004a
9cfe003994fe00398cfe002984fe001863fe000029e7000021de000021c600189c310018941800
18942100f78c0000ef8400006bb5fe004294fe00297bfe00217bfe001863f70010942100188c21
0010841800f7ad5200de6b00002173fe002173f700105ae7000018b500188c290010842100d684
4200ce5a00005aadfe00318cfe00186be7001052de000021bd00107b2100087b1000107b1000bd
6331001863e7002163de00104ace000021b5000018ad0010731800107b180008731000186bf700
216bef001863de00105ace00104ac6000018a50008731800086b10001852ce001042b5000839a5
000021ad000010730010731000185ade001052ce00104abd001042ad00082984000010a5000010
6b00185ace0008318c000831840008297b00000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000002020202020202020202020202020202020202020202020202020202
020293a699a1a19aa7a3a8a9a5020202020202020202020202029f9fa099a1a19aa2a3a3a4a586
9e9090020202020202020264787892929393999a9b9c969d8787909e0202020202020264647178
9192939394957b8d9696978e989002020202028862815870707979898a8b847b8c8d7d8e8f9002
0202027e7f8062818170717879828368847b7b75858687020202766d77536f6f6363646478797a
5a68687b7c7d7502020225256c6d6e616f6f6363647071724e4e68687374750202025c205d5e5f
56606161626358646566675a68696a6b020202461f265152535454555556565758594d4e5a5b50
020202023725252f4638384748494940404a4b4c4d4e4f50020202021e19191e19173938393a3b
3b4041414243444545020202020c110d0e0d16373838393a3b3b3c3c3d3d3e3f0202020202021d
1d240d10192f20303132333435222d2d360202020202020c0f0f24101625262728292a2b06222c
2d2e020202020202020c0f1c1d1e171f2017210202120a22132302020202020202021415101617
1816190202021a0a1b13020202020202020202020c0d0e0f101102020202120a13130202020202
02020202020202020202020202020209040a0b0202020202020202020202020202020202020202
020708020202020202020202020202020202020202020202020306020202020202020202020202
020202020202020202020405020202020202020202020202020202020202020202020304020202
0202040000002701ffff030000000000
}\f1\fs24\par
\par
\lang1033     Use this component if you want to get an access to ExtCtrls.pas stuff in your application. This component allows you to access the following classes inside a script:\par
\par
\f4\fs20 TShape\par
\par
TPaintBox\par
event TPaintBox.OnPaint\par
\par
TImage\par
TBevel\par
\par
TTimer\par
event TTimer.OnTimer\par
\par
TPanel\par
TSplitter\par
TBitBtn\par
TSpeedButton\par
\par
TCheckListBox\par
property TCheckListBox.Checked\par
\par
TTabControl\par
TTabSheet\par
\par
TPageControl\par
procedure TPageControl.SelectNextPage(GoForward: Boolean)\par
property TPageControl.PageCount\par
property TPageControl.Pages\par
\par
TStatusPanel\par
\par
TStatusPanels\par
function TStatusPanels.Add: TStatusPanel\par
property TStatusPanels.Items\par
\par
TStatusBar\par
\par
TTreeNode\par
procedure TTreeNode.Delete\par
function TTreeNode.EditText: Boolean\par
property TTreeNode.Count\par
property TTreeNode.Data\par
property TTreeNode.ImageIndex\par
property TTreeNode.SelectedIndex\par
property TTreeNode.StateIndex\par
property TTreeNode.Text\par
\par
TTreeNodes\par
function TTreeNodes.Add(Node: TTreeNode; const S: string): TTreeNode\par
function TTreeNodes.AddChild(Node: TTreeNode; const S: string): TTreeNode\par
procedure TTreeNodes.BeginUpdate\par
procedure TTreeNodes.Clear\par
procedure TTreeNodes.Delete(Node: TTreeNode)\par
procedure TTreeNodes.EndUpdate\par
property TTreeNodes.Count\par
property TTreeNodes.Item\par
\par
TTreeView\par
procedure TTreeView.FullCollapse\par
procedure TTreeView.FullExpand\par
property TTreeView.Selected\par
property TTreeView.TopItem\par
\par
TTrackBar\par
TProgressBar\par
TListColumn\par
\par
TListColumns\par
function TListColumns.Add: TListColumn\par
property TListColumns.Items\par
\par
TListItem\par
procedure TListItem.Delete\par
function TListItem.EditCaption: Boolean\par
property TListItem.Caption\par
property TListItem.Checked\par
property TListItem.Data\par
property TListItem.ImageIndex\par
property TListItem.Selected\par
property TListItem.StateIndex\par
property TListItem.SubItems\par
\par
TListItems\par
function TListItems.Add: TListItem\par
procedure TListItems.BeginUpdate\par
procedure TListItems.Clear\par
procedure TListItems.Delete(Index: Integer)\par
procedure TListItems.EndUpdate\par
property TListItems.Count\par
property TListItems.Item\par
\par
TIconOptions\par
TListView\par
TToolButton\par
TToolBar\par
TMonthCalColors\par
TDateTimePicker\par
TMonthCalendar\par
\par
type TShapeType\par
type TBevelStyle\par
type TBevelShape\par
type TResizeStyle\par
type TButtonLayout\par
type TButtonState\par
type TButtonStyle\par
type TBitBtnKind\par
type TNumGlyphs\par
type TTabPosition\par
type TTabStyle\par
type TStatusPanelStyle\par
type TStatusPanelBevel\par
type TSortType\par
type TTrackBarOrientation\par
type TTickMark\par
type TTickStyle\par
type TProgressBarOrientation\par
type TIconArrangement\par
type TListArrangement\par
type TViewStyle\par
type TToolButtonStyle\par
type TDateTimeKind\par
type TDTDateMode\par
type TDTDateFormat\par
type TDTCalAlignment\par
type TCalDayOfWeek\par
\f1\fs24\par
    You get an access to all the published properties of these classes and the access to some public properties and methods.\par
    Note: This is a "fake" component. It is needed only for automatic inclusion of the "FS_iExtCtrlsRTTI" unit to the "uses" clause.\par
\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f0\fs28\page TfsDialogsRTTI component\par
\pard\nowidctlpar\lang1049\b0\i0\f1\fs24\par
\f7\fs20{\pict\wmetafile8\picw635\pich635\picwgoal360\pichgoal360 
0100090000036203000000004103000000000400000003010800050000000b0200000000050000
000c0219001900030000001e0041030000410b2000cc0018001800000000001800180000000000
280000001800000018000000010008000000000000000000000000000000000000000000000000
0000000000ffffff00c6c6c600f7bd6b00efb56b00f7bd7300efbd6b00efb56300e7a55a00de9c
4a00bd946300a58c9400947b7b00bd844200e79c4200de943100d6842900d68c2900ce842100ce
731800c66b1000c66b0800c6630000946b5a00295af7001839de00945a4200f7a53100efad5a00
de9c4200bd7b2900b5732100b5731800bd732100b56b1800ad6b10009c6b42005a6bbd004a52a5
00a56b4200e78c0800e7ad5a00debd8c00d6b58c00d6b58400cead8400ceb58400c6ad8400ceb5
8c00c6b58400cebd9400c6b58c00ceb59400c6b59400c6bd9400ce9c5200de942100d68c3900e7
ad7300fef7ef00fefefe00fefef700f7fef700f7fefe00effef700effefe00e7f7f700e7fefe00
def7f700effeef00effee700debd7b00d6842100c6732100d6945a00c6ced600b5ced600defefe
00de8c2100b5632100ce8c5200f7efe7009cc6d6007bc6de0084c6de0094d6e700a5d6e7008cc6
de00a5b5bd00e7f7fe00bdced600c6d6d600d6f7f700d6b57b00ce7b1800bd6b21008ccee700c6
f7fe00c6fefe00b5fefe0073adbd0094b5c600adcede00a5cede009ccee70094cede0094d6ef00
73d6ef0063adce009cb5bd00ce7b2100a5def700adfefe0094fefe009cfefe00bdeffe009cdeef
0094e7f7008ce7f70084def7007bdef70063cee70063bdd60063b5d6007ba5b500cecece009cc6
de00b5f7fe00a5fefe007beffe005ac6e7007bd6ef008cd6ef00a5e7f700bdeff700def7fe00ce
effe00d6f7fe009cd6ef004a7b8c00b5b5bd00a5effe008cf7fe0084f7fe006bdef70052d6ef00
cefefe004a6b7300bdbdbd008cc6d60084defe0052ceef007bceef0094def700ade7f700d6fefe
005ab5ce0063737300bdc6c6005abde700bdfefe00adf7fe0042a5c60073737300ce8c4a005ac6
ef00a5f7fe00318cad008484840029adde009ce7f7007be7fe0031849c008c8c8c00bd6b2900ad
ced6006bdefe00397384009c9ca500b5631800ce945200f7efde00b5cede0029a5d6008ceffe00
52cef70042737b00a5a5ad00c6731800ce843100efc69c00efceb500efcead0021a5d60094e7fe
0084effe0042c6f7004a637300c67b2900ce7b3900c6733100a5c6d60021a5ce0084e7fe0029ad
d600526b730039add6005ad6fe0042bde70039a5c6002184a500296b8400737b84004ab5d6007b
defe0073e7fe0063d6fe004ac6ef0031b5e7002194bd00297b940031637300426373005a6b7300
94949400b5bdbd00b5c6d60052bdde005acefe004abdef0031a5ce00298cb50021739400396b7b
0052636b006b73730084848c00a5a5a500b5b5b500c6c6ce006badc600397b940031636b009ca5
a50000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000020202020202f0f1f2cda3e0f3e1ef02020202020202020202020202
02e2e3e4e5e6e7e8e9eaebecedeeef020202020202020202024cd596d6d7b0d8d9dadbdcdddedf
a8e0e1020202020202024cce96cbabababcbcbabb0cfd0d1d2d3d44b02bdbcc6c7c8c9cac2cbcb
abc3abcbcbc3cbb88181cccd9e02bcbdbebfc0afc1c28ec38ec38ec38ec38ec38eb8c4c59402b3
b4b53c3db6b78d8e8eb88e8e8eb88e8e8e8e8eb9babb02ae503b3c3cafa98d7271717171717171
7171718eb0b1b2024f50513c3c66a9aa727271727172717271727271abacad025fa43b3c3c66a5
85808080808080808080807072a6a7a8024f50513c3c679f6a9262a062a0a063a063a06370a1a2
a3025f503b3c3c9596978298999a9b9b9262929292637f9c9d9e4f50513c3c7e8d728e8f909182
87414143434392735493945f503b3c3c7e7f72727280808182838485868788898a8b8c4f50513c
3c676f7071727163737475767778796b7a7b7c7d5f503b3c3c4b6061626363616465666768696a
6b6c6d6e024f50513c3c3c5253545556575841594159435a5b5c5d5e02494a3b3c3c3c3c3c3c4b
4c4b3f413f414143434d4d2c4e02393a3b3c3c3c3c3c3d3c3e3f40414243434344454647480207
292a2b2b2c2c2d2c2d2e2f302d303132333435363738021c1d1e1f20212021201f202022222222
2322242526272802050e0f1011101110111011121213131415161718191a1b0202030405060506
05060504060707080809090a0b0c0d020202020202020202020202020202020202020202020202
0202040000002701ffff030000000000
}\f1\fs24\par
\par
\lang1033     Use this component if you want to get an access to Dialogs.pas stuff in your application. This component allows you to access the following classes inside a script:\par
\par
\f4\fs20 TCommonDialog\par
function TCommonDialog.Execute: Boolean\par
TOpenDialog\par
TSaveDialog\par
TColorDialog\par
TFontDialog\par
TPrintDialog\par
TPrinterSetupDialog\par
\par
type TOpenOptions\par
type TFileEditStyle\par
type TColorDialogOptions\par
type TFontDialogOptions\par
type TFontDialogDevice\par
type TPrintRange\par
type TPrintDialogOptions\par
\f1\fs24\par
    You have an access to all the published properties of these classes and an access to some public properties and methods.\par
    Note: This is a "fake" component. It is needed only for automatic inclusion of the "FS_iDialogsRTTI" unit to the "uses" clause.\par
\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f0\fs28\page TfsDBRTTI component\par
\pard\nowidctlpar\lang1049\b0\i0\f1\fs24\par
\f7\fs20{\pict\wmetafile8\picw635\pich635\picwgoal360\pichgoal360 
0100090000036203000000004103000000000400000003010800050000000b0200000000050000
000c0219001900030000001e0041030000410b2000cc0018001800000000001800180000000000
280000001800000018000000010008000000000000000000000000000000000000000000000000
0000000000ffffff00c6c6c600c6cece00cedefe00bde7fe00add6fe00adcefe009cc6fe0094c6
fe009ccefe009cd6fe00b5defe00bdc6c600c6d6d600cee7fe00a5c6fe009cbdfe0084adfe007b
a5fe00739cfe0084b5fe00c6d6de00deeffe007badfe0073a5fe006ba5fe00639cfe005a9cfe00
63a5fe006badfe0094cefe00c6defe00c6e7fe00addefe0094d6fe008ccefe007bc6fe006bbdfe
0063bdfe005abdfe006bc6fe009cd6f700b5d6f70094b5e70084adef006b9cef00639cef005a9c
ef005a9cf7005294ef004a94ef003984e7004284e7004284de005a8cde0073adde00add6f70094
b5ef007394de00637bde00526bd6004a6bd6004263d6003963d6003152ce002952ce00214ace00
5284d6007bb5e700b5e7fe0094cef7007badef006394de005284de004a73de00426bde00315ad6
003163d6002963d6003173de0063ade7007bc6ef006bb5fe005aa5fe0052a5fe004aa5f7004aa5
fe003994f7003194fe005ab5ef00a5d6fe007bb5fe004a8cfe004284fe00429cfe0052c6fe004a
bdfe001863fe00216bfe00317bef004a8cef0063a5e70094bdfe007394fe004a73fe003152fe00
2139fe002963fe003994fe00318cfe00084afe000021fe000829f700214aef003963e7005a94e7
006394fe002952fe00184afe001042fe000839fe000031fe000031f7000839f700184ae700396b
e700528cde008cbdfe00426bfe00295afe000839ef002152e700316bde005294de005a8cfe0039
6bfe000029e7000839e700184ade004a84d60084bdfe003163fe00104afe000039fe000029ef00
0031ef00528cd6004a84fe000031e7000029de000839de001842d6004a84ce00215afe000031de
000831d600184ad6002963ce00427bfe000029d6001842ce003163ce004284c6007bbdfe00528c
fe002963f700184af7001039ef000839d6001039ce002152ce003163c600528cce008cc6fe005a
94f7004273f700295ae700295ac6003973c6005294c600a5c6f7007bb5f700528ce700427be700
396bde00427bce00528cc60084a5d600b5c6ce008cbdef0073b5e700639cde005a94de004a8cd6
00427bc6004a8cc600739cce00a5b5bd0000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000002020202020202020202020202020202020202020202020202020202
02020202020202020202020202020202020202020202020202bdbebfc0c1c2c29999c3c4bbc5c6
02020202020202020202b5b6b7b8b9854e4e9ea2acbabbbc02020202020202020202aeafb0b184
8b8b989da1abb2b3b402020202020202020202a4a5a6a783a88a979ca9aaabacad020202020202
020202025c9f9a7c7b89959696a09ca1a2a3020202020202020202025c949a787b7b9192899b9c
9d9e99020202020202020202028d9482797a7b7b91959697984e99020202020202020202028d87
8e8f7a907b7b91928a8b4e930202020202020202020280878877797a7a7b7b898a8b858c020202
020202020202028075818278797a7a7b7b8384858602020202020202020202097569767778797a
7a7b7c7d7e7f020202020202020202026768696a6b6c6d6e6f7071727374020202020202020202
025b5c1d5d5e5f606159626364656602020202020202020202460b255354555657585958565a52
02020202020202020202464748494a4b4c4d4e4f5036515202020202020202020202393a3b3c3d
3e3f40414243404445020202020202020202022b2c2d2e2f303132333435363738020202020202
02020202212223242525262627272829252a02020202020202020202170c0a1518191a1b1b1c1d
1e1f20020202020202020202020e0f101112121313141414150616020202020202020202020304
05060708080908090a0b0c0d020202020202020202020202020202020202020202020202020202
0202040000002701ffff030000000000
}\f1\fs24\par
\par
\lang1033     Use this component if you want to get an access to DB.pas stuff in your application. This component allows you to access the following classes inside a script:\par
\par
\f4\fs20 TField\par
\f5 p\f4 roperty\f5  \f4 TField.AsBoolean\par
\f5 p\f4 roperty\f5  \f4 TField.AsCurrency\par
\f5 p\f4 roperty\f5  \f4 TField.AsDateTime\par
\f5 p\f4 roperty\f5  \f4 TField.AsFloat\par
\f5 p\f4 roperty\f5  \f4 TField.AsInteger\par
\f5 p\f4 roperty\f5  \f4 TField.AsDate\par
\f5 p\f4 roperty\f5  \f4 TField.AsTime\par
property TField.AsString\par
property TField.AsVariant\par
property TField.DataType\par
property TField.DisplayName\par
property TField.DisplayText\par
property TField.IsNull\par
property TField.Size\par
property TField.Value\par
\par
TFields\par
property TFields.Fields\par
\par
TStringField\par
TNumericField\par
TIntegerField\par
TSmallIntField\par
TWordField\par
TAutoIncField\par
TFloatField\par
TCurrencyField\par
TBooleanField\par
TDateTimeField\par
TDateField\par
TTimeField\par
TBinaryField\par
TBytesField\par
TVarBytesField\par
TBCDField\par
\par
TBlobField\par
procedure TBlobField.LoadFromFile(const FileName: String)\par
procedure TBlobField.LoadFromStream(Stream: TStream)\par
procedure TBlobField.SaveToFile(const FileName: String)\par
procedure TBlobField.SaveToStream(Stream: TStream)\par
\par
TMemoField\par
TGraphicField\par
TFieldDef\par
TFieldDefs\par
property TFieldDefs.Items\par
\par
TDataSource\par
type TBookmark\par
\par
TDataSet\par
procedure TDataSet.Open\par
procedure TDataSet.Close\par
procedure TDataSet.First\par
procedure TDataSet.Last\par
procedure TDataSet.Next\par
procedure TDataSet.Prior\par
procedure TDataSet.Cancel\par
procedure TDataSet.Delete\par
procedure TDataSet.Post\par
procedure TDataSet.Append\par
procedure TDataSet.Insert\par
procedure TDataSet.Edit\par
function TDataSet.FieldByName(const FieldName: string): TField\par
procedure TDataSet.GetFieldNames(List: TStrings)\par
function TDataSet.FindFirst: Boolean\par
function TDataSet.FindLast: Boolean\par
function TDataSet.FindNext: Boolean\par
function TDataSet.FindPrior: Boolean\par
procedure TDataSet.FreeBookmark(Bookmark: TBookmark)\par
function TDataSet.GetBookmark: TBookmark\par
procedure TDataSet.GotoBookmark(Bookmark: TBookmark)\par
function TDataSet.Locate(const KeyFields: string; const KeyValues: Variant; Options: TLocateOptions): Boolean\par
function TDataSet.IsEmpty: Boolean\par
property TDataSet.Bof\par
property TDataSet.Eof\par
property TDataSet.FieldCount\par
property TDataSet.FieldDefs\par
property TDataSet.Fields\par
property TDataSet.Filter\par
property TDataSet.Filtered\par
property TDataSet.FilterOptions\par
property TDataSet.Active\par
\par
TParam\par
procedure TParam.Clear\par
property TParam.Bound\par
property TParam.IsNull\par
property TParam.Text\par
\f5 p\f4 roperty\f5  \f4 TParam.AsBoolean\par
\f5 p\f4 roperty\f5  \f4 TParam.AsCurrency\par
\f5 p\f4 roperty\f5  \f4 TParam.AsDateTime\par
\f5 p\f4 roperty\f5  \f4 TParam.AsFloat\par
\f5 p\f4 roperty\f5  \f4 TParam.AsInteger\par
\f5 p\f4 roperty\f5  \f4 TParam.AsDate\par
\f5 p\f4 roperty\f5  \f4 TParam.AsTime\par
property TParam.AsString\par
property TParam.AsVariant\par
\par
TParams\par
function TParams.ParamByName(const Value: string): TParam\par
function TParams.FindParam(const Value: string): TParam\par
property TParams.Items\par
\par
type TFieldType\par
type TBlobStreamMode\par
type TLocateOptions\par
type TFilterOptions\par
type TParamType\par
\f1\fs24\par
    You have an access to all the published properties of these classes and an access to some public properties and methods.\par
    Note: This is a "fake" component. It is needed only for automatic inclusion of the "FS_iDBRTTI" unit to the "uses" clause.\par
\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f0\fs28\page TfsDBCtrlsRTTI component\par
\pard\nowidctlpar\b0\i0\f1\fs24\par
\lang1049\f7\fs20{\pict\wmetafile8\picw635\pich635\picwgoal360\pichgoal360 
0100090000036203000000004103000000000400000003010800050000000b0200000000050000
000c0219001900030000001e0041030000410b2000cc0018001800000000001800180000000000
280000001800000018000000010008000000000000000000000000000000000000000000000000
0000000000ffffff00c6c6c600c6cece00ceeffe00bde7fe00add6fe00adcefe009cc6fe0094c6
fe009ccefe009cd6fe00b5e7fe00bdc6c600c6d6d600a5c6fe009cbdfe0084adfe007ba5fe0073
9cfe0084b5fe00addefe00c6d6de00def7fe00b5defe007badfe0073a5fe006ba5fe00639cfe00
5a9cfe0063a5fe006badfe0094d6fe00c6effe00c6e7fe008ccefe007bc6fe006bbdfe0063bdfe
005abdfe006bc6fe009cd6f700b5d6f70094b5e70084adef006b9cef00639cef005a9cef005a9c
f7005294ef004a94ef003984e7004284e7004284de005a8cde0073adde00add6f70094b5ef0073
94de00637bde00526bd6004a6bd6004263d6003963d6003152ce002952ce00214ace005284d600
7bb5e70094cef7007badef006394de005284de004a73de00426bde00315ad6003163d6002963d6
003173de0063ade7007bc6ef006bb5fe005aa5fe0052a5fe004aa5f7004aa5fe003994f7003194
fe005ab5ef00a5d6fe007bb5fe004a8cfe004284fe00429cfe0052c6fe004abdfe001863fe0021
6bfe00317bef004a8cef0063a5e70094bdfe007394fe004a73fe003152fe002139fe002963fe00
3994fe00318cfe00084afe000021fe000829f700214aef003963e7005a94e7006394fe002952fe
00184afe001042fe000839fe000031fe000031f7000839f700184ae700396be700528cde008cbd
fe00426bfe00295afe00c6734200ce7b4200c66b3900c66b4200bd633900bd5a39005a8cfe0039
6bfe00fefee700fefeef00fef7e700fef7de00f7efd600feefd600f7e7ce00efdebd00efd6b500
b54a31008484840084bdfe003163fe00104afe000039fe00f7e7c600efdeb500e7cead004a84fe
00c6733900bd6b3900c6633900b5523100ad423100ad392900215afe00f7efce00e7d6ad00efd6
ad00e7cea500ad313100427bfe000029e700feefde00b5423100a52929007bbdfe00528cfe0029
63f700184af7000839ef001039ef00c6634200b5523900ad393100a53129008cc6fe005a94f700
4273f700295ae7002152e700184ade00bd523900e7d6b500dec69c00a5d6f7007bb5f700528ce7
00427be700396bde00316bde00f7debd00dece9c00e7ce9c00dec69400b5c6ce008cc6ef0073b5
e700639cde005a94de004a8cd600efdec600f7dec6009c212100ad312900000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000002020202020202029393939393939393939393939393939302020202
0202029292b5b5d3a7acacacacacacacacacac9302cacbcccdcecfbd8e8e8fa0d0d19191a4acbf
bfc9c9d29302c0c1c2c3c4c5858b8e8e92a398c69199ac9ac7c8c9ac9302b7b8b9babbbc848c8c
8dbd8f989090beb6a6a6bfbfac9302adaeafb0b1b2818183b386869fb4ababa1b5b6b6acac9302
5aa8a27a79a9828b8baa838da3989890aba4a4a6a6ac93025a9ba2767979818a8b8b838c8da398
989290a4a5a6a79302949b80777879829c82818283819d9e86869f9fa0a0a19302948795967897
828a8989828c8e8e8f8f859899999a9293027e878875777882898a8b828c8c8d8e8f8490909191
9293027e737f807677818282828182828281828181838485860202097367747576777878797a7b
7c7d0202020202020202020265666768696a6b6c6d6e6f70717202020202020202020202595a1e
5b5c5d5e5f576061626364020202020202020202020c0b24515253545556575654585002020202
0202020202020c45464748494a4b4c4d4e354f500202020202020202020238393a3b3c3d3e3f40
41423f4344020202020202020202022a2b2c2d2e2f303132333435363702020202020202020202
22152023242425252626272824290202020202020202020217180a14191a1b1c1c1d1e1f202102
0202020202020202020e040f101111121213131314151602020202020202020202030405060708
080908090a0b0c0d02020202020202020202020202020202020202020202020202020202020202
0202040000002701ffff030000000000
}\lang1033\f1\fs24  \par
\par
   Use this component if you want to get an access to DBCtrls.pas stuff in your application. This component allows you to access the following classes inside a script:\par
\par
\f4\fs20 TDBEdit\par
TDBText\par
TDBCheckBox\par
property TDBCheckBox.Checked\par
TDBComboBox\par
property TDBComboBox.Text\par
TDBListBox\par
TDBRadioGroup\par
property TDBRadioGroup.ItemIndex\par
property TDBRadioGroup.Value\par
TDBMemo\par
TDBImage\par
TDBNavigator\par
TDBLookupControl\par
property TDBLookupControl.KeyValue\par
TDBLookupListBox\par
property TDBLookupListBox.SelectedItem\par
TDBLookupComboBox\par
property TDBLookupComboBox.Text\par
TColumnTitle\par
TColumn\par
TDBGridColumns\par
function TDBGridColumns.Add: TColumn\par
property TDBGridColumns.Items\par
TDBGrid\par
\par
type TButtonSet\par
type TColumnButtonStyle\par
type TDBGridOptions\par
\f1\fs24\par
    You have an access to all the published properties of these classes and an access to some public properties and methods.\par
    Note: This is a "fake" component. It is needed only for automatic inclusion of the "FS_iDBCtrlsRTTI" unit to the "uses" clause.\par
\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f0\fs28\page TfsBDERTTI component\par
\pard\nowidctlpar\lang1049\b0\i0\f1\fs24\par
\f7\fs20{\pict\wmetafile8\picw635\pich635\picwgoal360\pichgoal360 
0100090000036203000000004103000000000400000003010800050000000b0200000000050000
000c0219001900030000001e0041030000410b2000cc0018001800000000001800180000000000
280000001800000018000000010008000000000000000000000000000000000000000000000000
0000000000ffffff00c6c6c600c6cece00ceeffe00bde7fe00add6fe00adcefe009cc6fe0094c6
fe009ccefe009cd6fe00b5e7fe00bdc6c600c6d6d600a5c6fe009cbdfe0084adfe007ba5fe0073
9cfe0084b5fe00addefe00c6d6de00def7fe00b5defe007badfe0073a5fe006ba5fe00639cfe00
5a9cfe0063a5fe006badfe0094d6fe00c6effe00c6e7fe008ccefe007bc6fe006bbdfe0063bdfe
005abdfe006bc6fe009cd6f700b5d6f70094b5e70084adef006b9cef00639cef005a9cef005a9c
f7005294ef004a94ef003984e7004284e7004284de005a8cde0073adde00add6f70094b5ef0073
94de00637bde00526bd6004a6bd6004263d6003963d6003152ce002952ce00214ace005284d600
7bb5e70094cef7007badef006394de005284de004a73de00426bde00315ad6003163d6002963d6
003173de0063ade7007bc6ef006bb5fe005aa5fe0052a5fe004aa5f7004aa5fe003994f7003194
fe005ab5ef00a5d6fe007bb5fe004a8cfe004284fe00429cfe0052c6fe004abdfe001863fe0021
6bfe00317bef004a8cef0063a5e70094bdfe007394fe004a73fe003152fe002139fe002963fe00
3994fe00318cfe00084afe000021fe000829f700214aef003963e7005a94e7006394fe002952fe
00184afe001042fe000839fe000031fe000031f7000839f700184ae700396be700528cde008cbd
fe00426bfe00295afe00f7c6c600fecece00fec6c600efbdbd00e7b5b500efb5b500e7adad00de
adad00d6a5a500dea5a500d69c9c005a8cfe00396bfe00fefee700fefeef00fef7e700fef7de00
f7efd600feefd600f7e7ce00efdebd00efd6b500ce9c9c008484840084bdfe003163fe00104afe
000039fe00efdec600f7e7c600efdeb500e7cead004a84fe008c2118008c181800215afe009421
2100f7efce00efd6ad00e7cea500427bfe000029e700e7d6ad007bbdfe00528cfe002963f70018
4af7000839ef001039ef0094211800dec69c008cc6fe005a94f7004273f700295ae7002152e700
184ade00e7d6b500a5d6f7007bb5f700528ce700427be700396bde00316bde00f7debd00dece9c
00e7ce9c00dec69400b5c6ce008cc6ef0073b5e700639cde005a94de004a8cd600f7dec6000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000002020202020202029898989898989898989898989898989802020202
0202028b898b898b898b898b898b898b898b899802c5c6c7c8c9ca89939394949dcb9696ababb3
b3c4c4979802bbbcbdbebfc08990939394a69ec1969faba0c2c3c4899802b4b5b6b7b8b98891a2
a3a2949ea3a2a3baa8a2a3a28b9802acadaeafb0b1878ea29193b29494a295a296a2a8b3899802
5aa9a47a79aa8590a2a3a292a69ea295a2aba2a3a29798025aa1a4767979848fa29091a592a6a2
9ea295a2a7a889980299a1807778798190a2a3a29393a3a2a39596a2a3a28b9802998c9a9b789c
838f8e8e9091939394949d9e9f9fa08998027e8c8d757778838e8f909091919293949495959696
9798027e737f807677818283838181848485868788898a8b890202097367747576777878797a7b
7c7d0202020202020202020265666768696a6b6c6d6e6f70717202020202020202020202595a1e
5b5c5d5e5f576061626364020202020202020202020c0b24515253545556575654585002020202
0202020202020c45464748494a4b4c4d4e354f500202020202020202020238393a3b3c3d3e3f40
41423f4344020202020202020202022a2b2c2d2e2f303132333435363702020202020202020202
22152023242425252626272824290202020202020202020217180a14191a1b1c1c1d1e1f202102
0202020202020202020e040f101111121213131314151602020202020202020202030405060708
080908090a0b0c0d02020202020202020202020202020202020202020202020202020202020202
0202040000002701ffff030000000000
}\f1\fs24\par
\par
\lang1033     Use this component if you want to get an access to BDE stuff in your application. This component allows you to access the following classes inside a script:\par
\par
\f4\fs20 TSession\par
TDatabase\par
TBDEDataSet\par
TDBDataSet\par
TTable\par
procedure TTable.CreateTable\par
procedure TTable.DeleteTable\par
procedure TTable.EmptyTable\par
function TTable.FindKey(const KeyValues: array): Boolean\par
procedure TTable.FindNearest(const KeyValues: array)\par
procedure TTable.RenameTable(const NewTableName: string)\par
TQuery\par
procedure TQuery.ExecSQL\par
function TQuery.ParamByName(const Value: string): TParam\par
procedure TQuery.Prepare\par
property TQuery.ParamCount\par
TStoredProc\par
procedure TStoredProc.ExecProc\par
function TStoredProc.ParamByName(const Value: string): TParam\par
procedure TStoredProc.Prepare\par
property TStoredProc.ParamCount\par
type TTableType\par
type TParamBindMode\par
\f1\fs24\par
    You have an access to all the published properties of these classes and an access to some public properties and methods.\par
    Note: This is a "fake" component. It is needed only for automatic inclusion of the "FS_iBDERTTI" unit to the "uses" clause.\par
\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f0\fs28\page TfsADORTTI component\par
\pard\nowidctlpar\lang1049\b0\i0\f1\fs24\par
\f7\fs20{\pict\wmetafile8\picw635\pich635\picwgoal360\pichgoal360 
0100090000036203000000004103000000000400000003010800050000000b0200000000050000
000c0219001900030000001e0041030000410b2000cc0018001800000000001800180000000000
280000001800000018000000010008000000000000000000000000000000000000000000000000
0000000000ffffff00c6c6c600c6cece00ceeffe00bde7fe00add6fe00adcefe009cc6fe0094c6
fe009ccefe009cd6fe00b5e7fe00bdc6c600c6d6d600a5c6fe009cbdfe0084adfe007ba5fe0073
9cfe0084b5fe00addefe00c6d6de00def7fe00b5defe007badfe0073a5fe006ba5fe00639cfe00
5a9cfe0063a5fe006badfe0094d6fe00c6effe00c6e7fe008ccefe007bc6fe006bbdfe0063bdfe
005abdfe006bc6fe009cd6f700b5d6f70094b5e70084adef006b9cef00639cef005a9cef005a9c
f7005294ef004a94ef003984e7004284e7004284de005a8cde0073adde00add6f70094b5ef0073
94de00637bde00526bd6004a6bd6004263d6003963d6003152ce002952ce00214ace005284d600
7bb5e70094cef7007badef006394de005284de004a73de00426bde00315ad6003163d6002963d6
003173de0063ade7007bc6ef006bb5fe005aa5fe0052a5fe004aa5f7004aa5fe003994f7003194
fe005ab5ef00a5d6fe007bb5fe004a8cfe004284fe00429cfe0052c6fe004abdfe001863fe0021
6bfe00317bef004a8cef0063a5e70094bdfe007394fe004a73fe003152fe002139fe002963fe00
3994fe00318cfe00084afe000021fe000829f700214aef003963e7005a94e7006394fe002952fe
00184afe001042fe000839fe000031fe000031f7000839f700184ae700396be700528cde008cbd
fe00426bfe00295afe00f7c6c600fecece00fec6c600efbdbd00e7b5b500efb5b500e7adad00de
adad00d6a5a500dea5a500d69c9c005a8cfe00396bfe00fefee700fefeef00fef7e700fef7de00
f7efd600feefd600f7e7ce00efdebd00efd6b500ce9c9c008484840084bdfe003163fe00104afe
000039fe00efdec600f7e7c600efdeb500e7cead004a84fe0008080800215afe00e7d6ad00efd6
ad00427bfe000029e700f7efce00e7cea5007bbdfe00528cfe002963f700184af7000839ef0010
39ef00e7d6b5008cc6fe005a94f7004273f700295ae7002152e700184ade00dec69c00a5d6f700
7bb5f700528ce700427be700396bde00316bde00f7debd00dece9c00e7ce9c00dec69400b5c6ce
008cc6ef0073b5e700639cde005a94de004a8cd600f7dec6000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000002020202020202029898989898989898989898989898989802020202
0202028b898b898b898b898b898b898b898b899802c2c3c4c5c6c789939394949dc89696a4a4b7
b7c1c1979802b8b9babbbcbd8990939394a89ebe969fa4a0bfc0c1899802b1b2b3b4b5b6880091
92a294a200a2b0b0a9a200b78b9802aaabacadaeaf87a29191009394a295a2b0a2a9a900899802
5aa6a37a79a78500a200a292a8009e009500a4a9a29798025aa1a376797984a29090009192a29e
a295a2a4a50089980299a1807778798190a2009193a200a29d9596a200a08b9802998c9a9b789c
838f8e8e9091939394949d9e9f9fa08998027e8c8d757778838e8f909091919293949495959696
9798027e737f807677818283838181848485868788898a8b890202097367747576777878797a7b
7c7d0202020202020202020265666768696a6b6c6d6e6f70717202020202020202020202595a1e
5b5c5d5e5f576061626364020202020202020202020c0b24515253545556575654585002020202
0202020202020c45464748494a4b4c4d4e354f500202020202020202020238393a3b3c3d3e3f40
41423f4344020202020202020202022a2b2c2d2e2f303132333435363702020202020202020202
22152023242425252626272824290202020202020202020217180a14191a1b1c1c1d1e1f202102
0202020202020202020e040f101111121213131314151602020202020202020202030405060708
080908090a0b0c0d02020202020202020202020202020202020202020202020202020202020202
0202040000002701ffff030000000000
}\f1\fs24\par
\par
\lang1033     Use this component if you want to get an access to ADO stuff in your application. This component allows you to access the following classes inside a script:\par
\par
\f4\fs20 TADOConnection\par
TParameter\par
TParameters\par
property TParameters.Items\par
TCustomADODataSet\par
TADOTable\par
TADOQuery\par
procedure TADOQuery.ExecSQL\par
TADOStoredProc\par
procedure TADOStoredProc.ExecProc\par
type TDataType\par
\f1\fs24\par
    You have an access to all the published properties of these classes and an access to some public properties and methods.\par
    Note: This is a "fake" component. It is needed only for automatic inclusion of the "FS_iADORTTI" unit to the "uses" clause.\par
\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f0\fs28\page TfsIBXRTTI component\par
\pard\nowidctlpar\lang1049\b0\i0\f1\fs24\par
\f7\fs20{\pict\wmetafile8\picw635\pich635\picwgoal360\pichgoal360 
0100090000036203000000004103000000000400000003010800050000000b0200000000050000
000c0219001900030000001e0041030000410b2000cc0018001800000000001800180000000000
280000001800000018000000010008000000000000000000000000000000000000000000000000
0000000000ffffff00c6c6c600c6cece00ceeffe00bde7fe00add6fe00adcefe009cc6fe0094c6
fe009ccefe009cd6fe00b5e7fe00bdc6c600c6d6d600a5c6fe009cbdfe0084adfe007ba5fe0073
9cfe0084b5fe00addefe00c6d6de00def7fe00b5defe007badfe0073a5fe006ba5fe00639cfe00
5a9cfe0063a5fe006badfe0094d6fe00c6effe00c6e7fe008ccefe007bc6fe006bbdfe0063bdfe
005abdfe006bc6fe009cd6f700b5d6f70094b5e70084adef006b9cef00639cef005a9cef005a9c
f7005294ef004a94ef003984e7004284e7004284de005a8cde0073adde00add6f70094b5ef0073
94de00637bde00526bd6004a6bd6004263d6003963d6003152ce002952ce00214ace005284d600
7bb5e70094cef7007badef006394de005284de004a73de00426bde00315ad6003163d6002963d6
003173de0063ade7007bc6ef006bb5fe005aa5fe0052a5fe004aa5f7004aa5fe003994f7003194
fe005ab5ef00a5d6fe007bb5fe004a8cfe004284fe00429cfe0052c6fe004abdfe001863fe0021
6bfe00317bef004a8cef0063a5e70094bdfe007394fe004a73fe003152fe002139fe002963fe00
3994fe00318cfe00084afe000021fe000829f700214aef003963e7005a94e7006394fe002952fe
00184afe001042fe000839fe000031fe000031f7000839f700184ae700396be700528cde008cbd
fe00426bfe00295afe00f7c6c600fecece00fec6c600efbdbd00e7b5b500efb5b500e7adad00de
adad00d6a5a500dea5a500d69c9c005a8cfe00396bfe00fefee700fefeef00fef7e700fef7de00
f7efd600feefd600f7e7ce00efdebd00efd6b500ce9c9c008484840084bdfe003163fe00104afe
000039fe00efdec600f7e7c600efdeb500e7cead004a84fe0008080800215afe00f7efce00e7d6
ad00efd6ad00427bfe000029e700feefde00e7cea5007bbdfe00528cfe002963f700184af70008
39ef001039ef00e7d6b5008cc6fe005a94f7004273f700295ae7002152e700184ade00dec69c00
a5d6f7007bb5f700528ce700427be700396bde00316bde00f7debd00dece9c00e7ce9c00dec694
00b5c6ce008cc6ef0073b5e700639cde005a94de004a8cd600f7dec60000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000002020202020202029898989898989898989898989898989802020202
0202028b898b898b898b898b898b898b898b899802c3c4c5c6c7c889939394949dc99696a5a5b8
b8c2c2979802b9babbbcbdbe8990939394a49ebf969fa5a0c0c1c2899802b2b3b4b5b6b78891a2
00a294a200a2b1b100aab8a28b9802abacadaeafb0878e91a29393009495a2b1a2aaaa00899802
5aa7a37a79a885909000a992a200a29595a5a200aa9798025aa1a3767979848f90a2919100a49e
a295a2a5a60089980299a1807778798190a200a293a200a29d95009fa0a28b9802998c9a9b789c
838f8e8e9091939394949d9e9f9fa08998027e8c8d757778838e8f909091919293949495959696
9798027e737f807677818283838181848485868788898a8b890202097367747576777878797a7b
7c7d0202020202020202020265666768696a6b6c6d6e6f70717202020202020202020202595a1e
5b5c5d5e5f576061626364020202020202020202020c0b24515253545556575654585002020202
0202020202020c45464748494a4b4c4d4e354f500202020202020202020238393a3b3c3d3e3f40
41423f4344020202020202020202022a2b2c2d2e2f303132333435363702020202020202020202
22152023242425252626272824290202020202020202020217180a14191a1b1c1c1d1e1f202102
0202020202020202020e040f101111121213131314151602020202020202020202030405060708
080908090a0b0c0d02020202020202020202020202020202020202020202020202020202020202
0202040000002701ffff030000000000
}\f1\fs24\par
\par
\lang1033     Use this component if you want to get an access to IBX stuff in your application. This component allows you to access the following classes inside a script:\par
\par
\f4\fs20 TIBDataBase\par
TIBTransaction\par
TIBCustomDataSet\par
TIBTable\par
TIBQuery\par
procedure TIBQuery.ExecSQL\par
TIBStoredProc\par
procedure TIBStoredProc.ExecProc\par
\f1\fs24\par
    You have an access to all the published properties of these classes and an access to some public properties and methods.\par
    Note: This is a "fake" component. It is needed only for automatic inclusion of the "FS_iIBXRTTI" unit to the "uses" clause.\b\par
\b0\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f0\fs28\page TfsChartRTTI component\par
\pard\nowidctlpar\b0\i0\f1\fs24\par
\lang1049\f7\fs20{\pict\wmetafile8\picw635\pich635\picwgoal360\pichgoal360 
0100090000036203000000004103000000000400000003010800050000000b0200000000050000
000c0219001900030000001e0041030000410b2000cc0018001800000000001800180000000000
280000001800000018000000010008000000000000000000000000000000000000000000000000
0000000000ffffff00c0c0c000bcbfc10064dac3004ee79e0049dfa10047dd9c0045db960042d9
900044d4800056e2a700bcc1c10090c6fe008dc5fe0049daae004feb970047dda00046dc990044
da940048d37d0039da940020edc90081fefe0066b3fe00208bfe001f8cfd0039bcc70048dca200
49e3950045d688003cd88f001eefd00008fefe0005fefe0001fefe0051f7f80054a7fe001f8bfe
001e88fe001d85fe001b75fe0032b0c90049e58b0043d98e0043d482001cf2d90009fefe0002fe
fe0001f4f50001e6e9003de3e700429afe002389fe001c84fe001b81fe001a7efe001875fe0019
70f6002d9ec30041ec83000dfeed0000f5f60000e6e90000d8dd0007cdd4002fcdd4001b7ffe00
1a7cfe001879fe001774fe00156ffe00125cfe001567f3002c95be006cb290007cb17c0074a970
0071a16a006d986500698e5f0066855a00637d5600607752001776fe001773fe00136afe001164
fe000f5efe000c4cfe001a3ff300ca5b1300ef590200db510000d44c0000cc470000c5430000be
3e0000b93c0000b9410600156bf700146cfe000f5ffe000d58fe000a50fe000744fe001842e500
b6611b00d1640000be5b0000b7550000b1500000aa4a0000a54700009f400000973c06001242bb
00105bf2000f64fe000d59fe000b52fe00094bfe000543fe000236fe001537e100af5b1a00c85c
0000b6540000b04f0000a9490000a2440000a548000090310000670c06000e33a9000d37b0000b
48e1000955fe00064afe00043efe000135fe00002ef7001433d300a7541800bf550000ad4d0000
a94a0000a84a0000a94b000087290000600800005c0606000a24a800091ec0000621d100042dc7
00011dce000031fa000035f100002ee7001433cb00a4531700bb540000ae4f0000a04100007e1e
0000791f0000771a000069120000580000002f3db2000b17eb000207d7000000940000069e0000
21cf000028cf000021c8001124aa008e3a1300a23a000096380000882a00006306000059060000
781d0000832b0700742f2f00bcbcbf003c3cab000000c800000eee00002de30000089300000178
00000180000b0167005d010b00690100005b000000650900008d3200009236000070170000793d
3c00bdbbbb005050b9000004a000000d9c000020b600000fb20000009d000a00570051000a0081
1e00008e3300007e240000670e0000650f00008e5350007f7fba007c7cb80001149800000a9a00
000089000a00560051000900751500007d22000070170100a57c7c00a57f7f006666a40042428a
0042428c004942810080424900844242007d424200966666000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000002020202020202020202020202020202020202020202020202020202
020202020202020202020202020202020202020202020202020202020202020202020202020202
02020202020202020202020202020202020202020202020202020202020202020202020202e8e9
eaebecedeeef0202020202020202020202020202dcdddedfe0e1e2e3e4e5e6e702020202020202
02020202cecfd0d1d2d3d4d5d6d7d8d9dadb0202020202020202bcbdbebfc0c1c2c3c4c5c6c7c8
c9cacbcccd020202020202aaabacadaeafb0b1b2b3b4b5b6b7b8b9babb02020202020298999a9b
9c9d9e9fa0a1a2a3a4a5a6a7a8a9020202020202868788898a8b8c8d8e8f909192939495969702
02020202027475767778797a7b7c7d7e7f80818283848502020202020264655657666768696a6b
6c6d6e6f7071727302020202020245545547565758595a5b5c5d5e5f6061626302020202020243
384445464748494a4b4c4d4e4f505152530202020202023435363738393a3b3c3d2f22233e3f40
41420202020202020325262728292a2b2c2d2e2f223031323302020202020202020218191a1b1c
1d131e1f202122232402020202020202020202020d0e0f10111213141516171702020202020202
020202020202030405060708090a0b0c0202020202020202020202020202020202020202020202
020202020202020202020202020202020202020202020202020202020202020202020202020202
020202020202020202020202020202020202020202020202020202020202020202020202020202
0202040000002701ffff030000000000
}\lang1033\f1\fs24  \par
\par
   Use this component if you want to get an access to TeeChart stuff in your application. This component allows you to access the following classes inside a script:\par
\par
\f4\fs20 TChartValueList\par
TChartAxisTitle\par
TChartAxis\par
TCustomChartLegend\par
TChartLegend\par
TSeriesMarks\par
TChartGradient\par
TChartWall\par
TChartBrush\par
TChartTitle\par
TChartSeries\par
procedure TChartSeries.Clear\par
procedure TChartSeries.Add(const AValue: Double; const ALabel: String; AColor: TColor)\par
TSeriesPointer\par
TCustomSeries\par
TLineSeries\par
TPointSeries\par
TAreaSeries\par
TCustomBarSeries\par
TBarSeries\par
THorizBarSeries\par
TCircledSeries\par
TPieSeries\par
TFastLineSeries\par
TCustomChart\par
TChart\par
type TChartValue\par
type TLegendStyle\par
type TLegendAlignment\par
type TLegendTextStyle\par
type TChartListOrder\par
type TGradientDirection\par
type TSeriesMarksStyle\par
type TAxisLabelStyle\par
type THorizAxis\par
type TVertAxis\par
type TTeeBackImageMode\par
type TPanningMode\par
type TSeriesPointerStyle\par
type TMultiArea\par
type TMultiBar\par
type TBarStyle\par
\f1\fs24\par
    You have an access to all the published properties of these classes and an access to some public properties and methods.\par
    Note: This is a "fake" component. It is needed only for automatic inclusion of the "FS_iChartRTTI" unit to the "uses" clause.\par
\pard\keepn\nowidctlpar\s1\sb240\sa60\kerning32\b\f0\fs72\page Scripting\fs28\par
\pard\nowidctlpar\kerning0\b0\fs40\par
The simplest example of scripting\par
Getting the list of the supported languages\par
\f2 Displaying\f0  the detail info about the syntax error\par
Debugging the the script\par
Adding a procedure to the script\par
Adding a function to the script\par
Adding a function with var and default parameters\par
Adding a function with class parameters\par
Adding a function which returns value of class type\par
Adding a constant to the script\par
Adding a variable to the script\par
Adding an object variable to the script\par
Adding a type to the script\par
Adding an enumeration  to the script\par
Adding a set type to the script\par
Adding a class to the script\par
Implement\f2 ing\f0  public properties and methods of the class\par
Implement\f2 ing the\f0  event \lang1049 handler\lang1033\par
Implement\f2 ing\f0  non-standard event handler\par
Accessing script variables from the Delphi code\par
Calling a script function from the Delphi code\par
Calling a script function with var parameters\par
Calculation of the expressions\par
Saving and \f2 loading\f0  of the precompiled code\par
Script tutorials\par
\f1\fs24\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f0\fs28\par
\par
\page The simplest example of scripting\par
\pard\nowidctlpar\b0\i0\f1\fs24\par
   Here is a sample code which demonstrates the easiest way of using FastScript. Just put the TfsScript\f2 , \f3 TfsPascal\f1  and TButton components onto your form and write the following code in the \lang1049 button.OnClick event\lang1033\f2 :\f4\fs20\par
\f1\fs24\par
\f4\fs20 procedure TForm1.Button1Click(Sender: TObject);\par
begin\par
  fsScript1.Clear;\par
  fsScript1.Lines.Text :=  'begin ShowMessage(''Hello!'') end.';\par
  fsScript1.Parent := fsGlobalUnit;\par
\f5   fsScript1.SyntaxType := 'PascalScript';\f4\par
  if not fsScript1.Run then\par
    ShowMessage(fsScript1.ErrorMsg); \par
end;\par
\b\f1\fs24\par
\b0 - Clear the script. It is necessary \f3 if\f1  \f3 you \f1 use one component to run many scripts.\par
- Fill the Lines property by the script code;\par
- To use standard types and functions pass the fsGlobalUnit to the Parent property. \par
-  Run the script using the PascalScript language. If compilation was successful, Run method returns True. Otherwise an error message is shown.\par
\f4\fs20\par
\f3\fs24 Another way to use TfsScript without fsGlobalUnit (for example, in multi-thread environment):\f1\par
\f4\fs20\par
procedure TForm1.Button1Click(Sender: TObject);\par
begin\par
  fsScript1.Clear;\par
  fsScript1.\f5 AddRTTI\f4 ;\par
  fsScript1.Lines.Text :=  'begin ShowMessage(''Hello!'') end.';\par
\f5   fsScript1.SyntaxType := 'PascalScript';\f4\par
  if not fsScript1.Run then\par
    ShowMessage(fsScript1.ErrorMsg); \par
end;\par
\b\f1\fs24\par
\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\i\f0\fs28 Getting the list of the supported languages\par
\pard\nowidctlpar\b0\i0\f1\fs24\par
    To get the list of the supported languages call the fsGetLanguageList(list: TStrings) procedure, defined in the FS_iTools unit.\par
\par
\f4\fs20 uses FS_iTools;\par
\par
fsGetLanguageList(LangComboBox.Items);\par
\f1\fs24\par
\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f2\fs28 Displaying\f0  the detail info about the syntax error\par
\pard\nowidctlpar\b0\i0\f1\fs24\par
\f4\fs20 uses FS_iInterpreter, FS_iTools;\par
\par
begin\par
  if not fsScript1.Compile then\par
  begin\par
    \{ show the error message and position in the status bar \}\par
    StatusBar1.Text := fsScript1.ErrorMsg + ' at ' + fsScript1.ErrorPos;\par
    Exit;\par
  end\par
  else\par
    fsScript1.Execute;\par
end;\par
\f1\fs24\par
\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f0\fs28 Debugging the script\par
\pard\nowidctlpar\b0\i0\f1\fs24\par
Use OnRunLine. For example:\par
\par
\f4\fs20 procedure TForm1.OnRunLine(Sender: TfsScript; const UnitName, SourcePos: String);\par
\f5 var\par
  pt: TPoint;\f4\par
begin\par
\f5 // locate the unit with UnitName name\par
  ...\par
// locate the line with pt.Y number\par
  pt := fsPosToPoint(SourcePos);\par
  \f4\par
  FStopped := True;\par
  while FStopped do\par
    Application.ProcessMessages;\par
end;\par
\f1\fs24\par
    Examine the demo located in the DEMOS\\Main folder.\par
\par
\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f0\fs28 Adding a procedure to the script\par
\pard\nowidctlpar\b0\i0\f1\fs24\par
    To add a procedure/function to a script, perform the following steps:\par
- Create a method handler - function of  the TfsCallMethodEvent type.\par
- Call TfsScript.AddMethod method. The first parameter is a function syntax, the second is a link to the handler of TfsCallMethodEvent type.\par
\par
\f4\fs20\par
\{ the function itself \}\par
procedure TForm1.DelphiFunc(s: String; i: Integer); \par
begin \par
  ShowMessage(s + ', ' + IntToStr(i)); \par
end; \par
\par
\{ the method handler \}\par
function TForm1.CallMethod(Instance: TObject; ClassType: TClass; const MethodName: String; \par
  var Params: Variant): Variant; \par
begin \par
  DelphiFunc(Params[0], Params[1]); \par
end; \par
\par
procedure TForm1.Button1Click(Sender: TObject);\par
begin\par
  \{ clear all items \}\par
  fsScript1.Clear;\par
  \{ script text \}\par
  fsScript1.Lines := Memo1.Lines;\par
  \{ frGlobalUnit contains standard types and functions \}\par
  fsScript1.Parent := fsGlobalUnit;\par
  \{ make DelphiFunc procedure visible to a script \}\par
  fsScript1.AddMethod('procedure DelphiFunc(s: String; i: Integer)', CallMethod);\par
\par
  \{ compile the script \}\par
  if fsScript1.Compile then\par
    fsScript1.Execute else   \{ execute if compilation was succesfull \}\par
    ShowMessage(fsScript1.ErrorMsg); \{ show an error message \}\par
end;\par
\f1\fs24     If you want to add several methods, you can do it using one method handler:\par
\f4\fs20\par
  Prog.AddMethod('procedure DelphiFunc(s: String; i: Integer)', CallMethod); \par
  Prog.AddMethod('procedure DelphiFunc2(s: String)', CallMethod); \par
\f1\fs24\par
\f4\fs20\{ the method handler \}\par
function TForm1.CallMethod(Instance: TObject; ClassType: TClass; const MethodName: String; \par
  var Params: Variant): Variant; \par
begin \par
  \{ dispatch the method call \} \par
  if MethodName = 'DELPHIFUNC' then \par
    DelphiFunc(Params[0], Params[1]) \par
  else if MethodName = 'DELPHIFUNC2' then \par
    DelphiFunc2(Params[0]); \par
end; \par
\par
\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f0\fs28 Adding a function to the script\par
\pard\nowidctlpar\b0\i0\f4\fs20\par
\f1\fs24     The same as adding a procedure.\par
\f4\fs20\par
  fsScript1.AddMethod('function DelphiFunc2(s: String): Boolean', CallMethod); \par
\f1\fs24\par
\f4\fs20\{ the method handler \}\par
function TForm1.CallMethod(Instance: TObject; ClassType: TClass; const MethodName: String; \par
  var Params: Variant): Variant; \par
begin \par
  Result := DelphiFunc(Params[0]); \par
end; \par
\par
\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f0\fs28 Adding a function with var and default parameters\par
\pard\nowidctlpar\b0\i0\f1\fs24\par
    You don't need to care about default parameters - they are substituted automatically by FastScript. Var parameters must be handled by you.\par
\f4\fs20\par
  fsScript1.AddMethod('function DelphiFunc(var s: String; i: Integer = 0): Boolean', CallMethod); \par
\par
\{ the method handler \}\par
function TForm1.CallMethod(Instance: TObject; ClassType: TClass; const MethodName: String; \par
  var Params: Variant): Variant; \par
var\par
  s: String;\par
begin \par
  s := Params[0];\par
  Result := DelphiFunc(s, Params[1]); \par
  Params[0] := s;\par
end; \par
\f1\fs24\par
\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f0\fs28 Adding a function with the class parameter\par
\pard\nowidctlpar\b0\i0\f1\fs24\par
    Since all the parameters are represented as the Variant array type, you need to convert them to objects.\par
\f4\fs20\par
  Prog.AddMethod('procedure HideButton(Button: TButton)', CallMethod); \par
\par
\{ the method handler \}\par
function TForm1.CallMethod(Instance: TObject; ClassType: TClass; const MethodName: String; \par
  var Params: Variant): Variant; \par
begin \par
  TButton(Integer(Params[0])).Hide;\par
end; \par
\f1\fs24\par
\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f0\fs28 Adding a function which returns a value of the class type\par
\pard\nowidctlpar\b0\i0\f1\fs24\par
    Since the values returned by the method handler is the array of theVariant type, you need to convert the results of theTObject type to the Variant.\par
\f4\fs20\par
  fsScript1.AddMethod('function MainForm: TForm', CallMethod); \par
\par
\{ the method handler \}\par
function TForm1.CallMethod(Instance: TObject; ClassType: TClass; const MethodName: String; \par
  var Params: Variant): Variant; \par
begin \par
  Result := Integer(Form1);\par
end; \par
\f1\fs24\par
\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f0\fs28 Adding a constant to the script\par
\pard\nowidctlpar\b0\i0\f1\fs24\par
    To add a constant to a script, call the TfsScript.AddConst method. The first parameter is the name of the constant, the second one is the type (it must be one of the standard types), \f3 t\f1 he third one is a value.\par
\par
\f4\fs20   fsScript1.AddConst('pi', 'Extended', 3.14159); \par
\par
\f1\fs24\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f0\fs28 Adding a variable to the script\par
\pard\nowidctlpar\b0\i0\f1\fs24\par
    To add a variable to a script, call the TfsScript.AddVariable method. It is similar to AddConst method, except that fact that you can change the value of a variable in a script. Note that the actual Delphi variable is not changed after the script execution. \par
\par
\f4\fs20 fsScript1.AddVariable('i', 'Integer', i); \par
\f1\fs24\par
\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f0\fs28 Adding \f2 an \f0 object to the script\par
\pard\nowidctlpar\b0\i0\f1\fs24\par
    To add an object to a script, call the TfsScript.AddObject method. The first parameter is the name of the object, the second one is the object itself.\par
\par
\lang1049\f4\fs20 fsScript1.AddObject('\lang1033\f5 Button\lang1049\f4 1', \lang1033\f5 Button1\lang1049\f4 ); \par
\f1\fs24\par
\lang1033\f3   If object has an unregistered type, you have to register it before calling AddObject:\lang1049\f1\fs20\par
\f4\par
fsScript1.Add\lang1033\f5 Class\lang1049\f4 (\lang1033\f5 T\lang1049\f4 Form1, \lang1033\f5 'TForm'\lang1049\f4 ); \par
fsScript1.AddObject('Form1', \lang1033\f5 Form1\lang1049\f4 ); \par
\par
\lang1033\f3\fs24   You can also use fsGlobalUnit.AddForm method to add a form or datamodule with all its child components:\par
\lang1049\f4\fs20\par
fs\lang1033\f5 GlobalUnit\lang1049\f4 .Add\lang1033\f5 Form\lang1049\f4 (Form1); \par
\par
\lang1033\f3\fs24   In this case you don't need to register the form class by AddClass method. Now you can access a form element in the script:\par
\f5\fs20\par
  Form1.Button1.Caption := '...'\lang1049\f4\par
\par
\lang1033\f1\fs24\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f0\fs28 Adding a \f2 type\f0  to the script\par
\pard\nowidctlpar\b0\i0\f1\fs24\par
    To add the own type to a script, call the TfsScript.AddType method. The first parameter is the name of the type, the second one is the one of the supported types:\par
\par
\f4\fs20 TfsVarType = (fvtInt, fvtBool, fvtFloat, fvtChar, fvtString, fvtClass, fvtArray, fvtVariant, fvtEnum);\par
\par
fsScript1.AddType('TCursor', fvtInt); \par
\b\f1\fs24\par
\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\i\f0\fs28 Adding an enumeration to the script\par
\pard\nowidctlpar\b0\i0\f1\fs24\par
    To add an enumeration\b  \b0 type to the script, call the TfsScript.AddEnum method. The first parameter is the name of the type, the second one is the type values separated by commas.\par
\par
\f4\fs20 fsScript1.AddEnum('TPrinterOrientation', 'poPortrait, poLandscape'); \par
\f1\fs24\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f0\fs28\page Adding a \f2 set\f0  to the script\par
\pard\nowidctlpar\b0\i0\f1\fs24\par
    To add a \f3 set\b\f1  \b0 type to a script, call the TfsScript.AddEnumSet method. The first parameter is the name of the type, the second one is the type values separated by commas.\par
\par
\f4\fs20 fsScript1.AddEnumSet('TFontStyles', 'fsBold, fsItalic, fsUnderline, fsStrikeOut'); \par
\f1\fs24\par
\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f0\fs28 Adding a class to the script\par
\pard\nowidctlpar\b0\i0\f1\fs24\par
    To add a class to a script, call the TfsScript.AddClass method. The first parameter is the class type, the second one is the name of the \b\f3 parent\f1  \b0 class.\par
\par
\f5\fs20 type\par
  TMyClass = class(TObject)\par
  ...\par
  end;\lang1049\f4\par
\par
fsScript1.AddClass(T\lang1033\f5 MyClass\lang1049\f4 , 'T\lang1033\f5 Object\lang1049\f4 '); \par
\lang1033\f1\fs24\par
    This will make all the published properies of this class available. If you want to make this class available for all the scripts, it is recommended to add this class to the f\f3 s\f1 GlobalUnit which is a global ancestor of all the scripts\f3 .\f1\par
\par
\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f0\fs28 Implement\f2 ing\f0  public properties and methods of the class\par
\pard\nowidctlpar\b0\i0\f1\fs24\par
    The AddClass method automatically adds all the published properties of the class. Public properties and methods require an extra work. The following example shows how to add a public method to a class. You need to create the method handler (function of type TfsCallMethod).\par
\f4\fs20\par
begin \par
  ... \par
  \{ add new class inherited from TObject \} \par
  with fsScript1.AddClass(TList, 'TObject') do \par
  begin \par
    \{ add public methods \} \par
    AddMethod('function Add(Item: TObject): Integer', CallMethod); \par
    AddMethod('procedure Clear', CallMethod); \par
  end; \par
  ... \par
end; \par
\par
\{ method handler \}\par
function TForm1.CallMethod(Instance: TObject; ClassType: TClass; \par
  const MethodName: String; var Params: Variant): Variant; \par
begin \par
  Result := 0; \par
\par
  if MethodName = 'ADD' then \par
  \{ convert Variant parameter to Pointer type and pass it to Add method \} \par
    TList(Instance).Add(Pointer(Integer(Params[0]))) \par
  else if MethodName = 'CLEAR' then \par
    TList(Instance).Clear \par
end; \f1\fs24\par
\par
    To implement a property  you need to create a method handler and two types property handlers TfsGetValueEvent and TfsSetValueEvent:\par
\par
\f4\fs20   TfsGetValueEvent = function(Instance: TObject; ClassType: TClass; const PropName: String): Variant of object;\par
  TfsSetValueEvent = procedure(Instance: TObject; ClassType: TClass; const PropName: String; Value: Variant) of object;\par
\f1\fs24\par
    Indexed and default properties are described by the method handler, the ordinary properties are handled by the Get/Set property handlers.\par
\par
\f4\fs20 begin \par
  ... \par
  with fsScript1.AddClass(TStrings, 'TPersistent') do \par
  begin \par
    \{ property CommaText: String \} \par
    AddProperty('CommaText', 'string', GetProp, SetProp); \par
    \{ property Count: Integer readonly, second handler is nil \} \par
    AddProperty('Count', 'Integer', GetProp, nil); \par
    \{ index property Objects[Index: Integer]: TObject \} \par
    AddIndexProperty('Objects', 'Integer', 'TObject', CallMethod); \par
    \{ default property Strings[Index: Integer]: String \} \par
    AddDefaultProperty('Strings', 'Integer', 'string', CallMethod); \par
  end; \par
  ... \par
end; \par
\par
\{ method handler \}\par
function TForm1.CallMethod(Instance: TObject; ClassType: TClass; \par
  const MethodName: String; var Params: Variant): Variant; \par
begin \par
  Result := 0; \par
\par
  if MethodName = 'OBJECTS.GET' then \par
    Result := Integer(TStrings(Instance).Objects[Params[0]]) \par
  else if MethodName = 'OBJECTS.SET' then \par
    TStrings(Instance).Objects[Params[0]] := TObject(Integer(Params[1])) \par
  else if MethodName = 'STRINGS.GET' then \par
    Result := TStrings(Instance).Strings[Params[0]] \par
  else if MethodName = 'STRINGS.SET' then \par
    TStrings(Instance).Strings[Params[0]] := Params[1] \par
end; \par
\par
\{ property handler \}\par
function TForm1.GetProp(Instance: TObject; ClassType: TClass; \par
  const PropName: String): Variant; \par
begin \par
  Result := 0; \par
\par
  if PropName = 'COMMATEXT' then \par
    Result := TStrings(Instance).CommaText \par
  else if PropName = 'COUNT' then \par
    Result := TStrings(Instance).Count \par
end; \par
\par
\{ property handler \}\par
procedure TForm1.SetProp(Instance: TObject; ClassType: TClass; \par
  const PropName: String; Value: Variant); \par
begin \par
  if PropName = 'COMMATEXT' then \par
    TStrings(Instance).CommaText := Value \par
end; \par
\f1\fs24\par
\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f0\fs28 Implementing the event \f2 handler\f0\par
\pard\nowidctlpar\b0\i0\f1\fs24\par
    To add an event to the class, use the TfsClassVariable.AddEvent method. The first parameter is the event name, the second one is the event \f3 handler\f1 .\par
\par
\f4\fs20 with fsScript1.AddClass(TControl, 'TComponent') do\par
  AddEvent('OnClick', TfsNotifyEvent);\par
\f1\fs24\par
    There are some predefined event handlers available in the FS_iEvents unit:\par
\par
\f4\fs20   TfsNotifyEvent\par
  TfsMouseEvent\par
  TfsMouseMoveEvent\par
  TfsKeyEvent\par
  TfsKeyPressEvent\par
  TfsCloseEvent\par
  TfsCloseQueryEvent\par
  TfsCanResizeEvent\par
\f1\fs24\par
    See the the "TfsFormsRTTTI component", "TfsExtCtrlsRTTI component" and "TfsDBCtrlsRTTI component" chapters for the list of events available in script.\par
\b\par
\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\i\f0\fs28 Implementin\f2 g\f0  non-standard event handler\par
\pard\nowidctlpar\i0\f1\fs24\par
\b0     There are some predefined event handlers available in FS_iEvents unit:\par
\par
\f4\fs20   TfsNotifyEvent\par
  TfsMouseEvent\par
  TfsMouseMoveEvent\par
  TfsKeyEvent\par
  TfsKeyPressEvent\par
  TfsCloseEvent\par
  TfsCloseQueryEvent\par
  TfsCanResizeEvent\par
\par
\f1\fs24     However, if you need to write your own event handler have a look at the following example:\par
\f4\fs20\par
\{ example of two event handlers \}\par
type \par
  \{ analogue of TNotifyEvent \} \par
  TfsNotifyEvent = class(TfsCustomEvent) \par
  public \par
    procedure DoEvent(Sender: TObject); \par
    function GetMethod: Pointer; override; \par
  end; \par
\par
  \{ analogue of TKeyPressEvent = procedure(Sender: TObject; var Key: Char) \} \par
  TfsKeyPressEvent = class(TfsCustomEvent) \par
  public \par
    procedure DoEvent(Sender: TObject; var Key: Char); \par
    function GetMethod: Pointer; override; \par
  end; \par
\par
\par
\{ TfsNotifyEvent \} \par
\par
procedure TfsNotifyEvent.DoEvent(Sender: TObject); \par
begin \par
  \{ CallHandler is an internal method \} \par
  CallHandler([Sender]); \par
end; \par
\par
function TfsNotifyEvent.GetMethod: Pointer; \par
begin \par
  Result := @TfsNotifyEvent.DoEvent; \par
end; \par
\par
\par
\{ TfsKeyPressEvent \} \par
\par
procedure TfsKeyPressEvent.DoEvent(Sender: TObject; var Key: Char); \par
begin \par
  CallHandler([Sender, Key]); \par
  \{ get var parameter \} \par
  Key := String(Handler.Params[1].Value)[1]; \par
end; \par
\par
function TfsKeyPressEvent.GetMethod: Pointer; \par
begin \par
  Result := @TfsKeyPressEvent.DoEvent; \par
end; \b\f1\fs24\par
\par
\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\i\f0\fs28 Accessing script variables from the Delphi code\par
\pard\nowidctlpar\b0\i0\f1\fs24\par
    To get/set the value of a script variables use TfsScript.Variables property.\par
\par
\f4\fs20 val := fsScript1.Variables['i']; \par
fsScript1.Variables['i'] := 10; \par
\f1\fs24\par
\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f0\fs28 Calling a script function from the Delphi code\par
\pard\nowidctlpar\b0\i0\f1\fs24\par
    To call a script function, use TfsScript.CallFunction method. The first parameter is the name of the called function, the second one is the function parameters.\par
\par
\f4\fs20 // call to 'function ScriptFunc(s: String; i: Integer)'\par
val := fsScript1.CallFunction('ScriptFunc', VarArrayOf(['hello', 1]));  \par
\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f0\fs28\page Calling a script function with var parameters\par
\pard\nowidctlpar\b0\i0\f1\fs24\par
    The same as described above\f3 . Use TfsScript.CallFunction1 method if your procedure/function accepts var parameters:\par
\f1\par
\f4\fs20 var\par
  Params: Variant;\par
\par
Params := VarArrayOf(['hello', 1]);\par
// call to 'function ScriptFunc(var s: String; i: Integer)'\par
fsScript1.CallFunction\f5 1\f4 ('ScriptFunc', Params);  \par
ShowMessage(Params[0]);\par
\f1\fs24\par
\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f0\fs28 Calculation of the expressions\par
\pard\nowidctlpar\b0\i0\f1\fs24\par
    If you want to calculate an expression (for example, 'i+1'), call the TfsScript.Evaluate method.\par
\par
\f4\fs20 ShowMessage(fsScript1.Evaluate('i+1')); \par
\par
\f1\fs24     It is useful for debugging purposes.\par
\par
\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f0\fs28 Saving and \f2 loading\f0  of the precompiled code\par
\pard\nowidctlpar\b0\i0\f1\fs24\par
    Sometimes it is necessary to save compilation results and perform it later. You can do it with the help of the TfsScript.GetILCode and SetILCode methods. \par
The below code compiles the source script and places the precompiled results to the stream:\par
\par
\f4\fs20 var\par
  s: TStream;\par
\par
fsScript1.Lines.Text := ...; \par
fsScript1.GetILCode(s);\par
\par
\f1\fs24 After this, you can restore the precompiled code from the stream and perform it:\par
\f4\fs20\par
fsScript1.SetILCode(s);\par
fsScript1.Execute;\par
\par
\f1\fs24\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\b\i\f2\fs28 Using "uses" directive\lang1049\f0\par
\pard\nowidctlpar\b0\i0\f1\fs24\par
    \lang1033\f3 You can split large script to modules, like in Object Pascal\lang1049\f1 :\par
\par
\lang1033\f3 File\lang1049\f1  \lang1033\f3 unit1.pas\lang1049\f1 :\par
\par
\lang1033\f5\fs20 uses 'unit2.pas';\par
\par
begin\par
  Unit2Proc('Hello!');\par
end.\lang1049\f4\par
\f1\fs24\par
\lang1033\f3 File\lang1049\f1  \lang1033\f3 unit2.pas:\par
\par
\f5\fs20 procedure Unit2Proc(s: String);\par
begin\par
  ShowMessage(s);\par
end;\lang1049\f4\par
\par
\lang1033\f5 begin\par
\lang1049\f4   \lang1033\f5 ShowMessage('initialization of unit2...');\par
end.\lang1049\f4\par
\f1\fs24\par
\lang1033\f3 As you can see, you should write module name with file extension in quotes. The code placed in begin..end of the included module will be executed when you run script (this is analogue of initialization in the Pascal).\par
In this example you cannot use unit1 from within unit2. This will cause circular reference and infinity loop when compiling such script. Such references are not allowed since FastScript does not have interface/implementation sections.\par
Using #language directive, you can write multi-language scripts. For example, one module may be written in PascalScript, another one - using C++Script:\par
\par
File\lang1049\f1  \lang1033\f3 unit1.pas\lang1049\f1 :\par
\par
\lang1033\f5\fs20 uses 'unit2.pas';\par
\par
begin\par
  Unit2Proc('Hello from PascalScript!');\par
end.\lang1049\f4\par
\f1\fs24\par
\lang1033\f3 File\lang1049\f1  \lang1033\f3 unit2.pas:\par
\par
\f5\fs20 #language C++Script\par
\par
void Unit2Proc(string s)\par
\{\par
  ShowMessage(s);\par
\}\par
\par
\{\par
  ShowMessage("unit2 initialization, C++Script");\par
\}\lang1049\f4\par
\f1\fs24\par
\lang1033\f3 The\lang1049\f1  \lang1033\f3 #language directive must be the first line of the file. If this directive exists it overrides TfsScript.SyntaxType setting.\lang1049\f1\par
\par
\par
\pard\keepn\nowidctlpar\s2\sb240\sa60\lang1033\b\i\f0\fs28 Script tutorials\par
\pard\nowidctlpar\b0\i0\f1\fs24\par
    Script tutorials are located in the DEMOS\\Main\\Samples folder. Compile the demo located in the DEMOS\\Main folder and open the script samples in it.\par
}
 